{"metadata":{"externalID":"OUDSTokensRaw","title":"OUDSTokensRaw","symbolKind":"module","role":"collection","roleHeading":"Framework","modules":[{"name":"OUDSTokensRaw"}]},"identifier":{"url":"doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw","interfaceLanguage":"swift"},"abstract":[{"inlineContent":[{"text":"Raw tokens","type":"text"}],"type":"emphasis"},{"type":"text","text":" are smallest "},{"type":"emphasis","inlineContent":[{"type":"text","text":"tokens"}]},{"text":" possible. They are associated to raw values and will be finaly the values assigned to the ","type":"text"},{"inlineContent":[{"text":"components","type":"text"}],"type":"emphasis"},{"type":"text","text":" properties."}],"topicSections":[{"title":"Group","identifiers":["doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/BorderRawTokens","doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/ColorRawTokens","doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/DimensionRawTokens","doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/ElevationRawTokens","doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/GridRawTokens","doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/OpacityRawTokens","doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/TypographyRawTokens"]},{"title":"Classes","identifiers":["doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/ElevationBoxShadowRawToken"]},{"title":"Structures","identifiers":["doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/TypographyCompositeRawToken"]},{"title":"Type Aliases","identifiers":["doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/BorderRadiusRawToken","doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/BorderStyleRawToken","doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/BorderWidthRawToken","doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/ColorRawToken","doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/DimensionRawToken","doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/ElevationRawToken","doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/GridRawToken","doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/OpacityRawToken","doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/TypographyFontFamilyRawToken","doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/TypographyFontLineHeightRawToken","doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/TypographyFontParagraphSpacingRawToken","doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/TypographyFontSizeRawToken","doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/TypographyFontWeightRawToken"]}],"kind":"symbol","sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"anchor":"Overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"In fact, we choose to use as most as possible primitive types for raw values, like ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Double"},{"text":", ","type":"text"},{"code":"CGFloat","type":"codeVoice"},{"type":"text","text":" or "},{"code":"String","type":"codeVoice"},{"type":"text","text":" so as to handle the smallest types with few impacts on the memory for ecodesign principles. Indeed with hundreds of raw tokens, it will be more efficient to store primitive small types than structs or classes."}]},{"inlineContent":[{"type":"text","text":"So we expose also in higher level some properties so as to convert when needed some of these types to "},{"type":"codeVoice","code":"SwiftUI"},{"text":" types (like ","type":"text"},{"type":"codeVoice","code":"Font.Weight"},{"type":"text","text":" and "},{"code":"Color","type":"codeVoice"},{"type":"text","text":")."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"To keep the same semantics as the ones used in our specifications, "},{"inlineContent":[{"type":"text","text":"typealias"}],"type":"emphasis"},{"text":" are used to as to make the links to ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"primitive types","type":"text"}]},{"text":" and our logic of ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"tokens","type":"text"}]},{"text":". These type aliases are avaialble for those who want too make their own theme.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Using more simple and primitive types will help also to test the library. With also type aliases we force users to use our types and not higher level types like ","type":"text"},{"inlineContent":[{"type":"text","text":"SwiftUI"}],"type":"emphasis"},{"text":" types.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example for ``ColorRawTokens`:"}]},{"type":"codeListing","code":["\/\/ Define types for color raw tokens","public typealias ColorRawToken = String","","public enum ColorRawTokens { \/\/ Gathers all color raw tokens","","    public static let colorFunctionalWhite: ColorRawToken = \"#FFFFFF\"","    public static let colorFunctionalScarlet400: ColorRawToken = \"#FF4D4E\"","    public static let colorTransparentBlack0: ColorRawToken = apply(opacity: OpacityRawTokens.opacity0, on: colorFunctionalBlack)","    ...","}","","extension String {","    public var color: Color {","        Color(hexadecimalCode: self)","    }","}"],"syntax":"swift"}]}],"variants":[{"paths":["\/documentation\/oudstokensraw"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[[]]},"references":{"doc://OUDSTokensRaw/documentation/OUDSTokensRaw/BorderStyleRawToken":{"identifier":"doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/BorderStyleRawToken","role":"symbol","url":"\/documentation\/oudstokensraw\/borderstylerawtoken","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"BorderStyleRawToken","kind":"identifier"}],"navigatorTitle":[{"text":"BorderStyleRawToken","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Typealise for "},{"type":"codeVoice","code":"String"},{"type":"text","text":" so as to help users (developers) to see that raw tokens are needed and linked to "},{"type":"codeVoice","code":"String"},{"text":" for ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"border style raw tokeb"}]},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"String"},{"type":"text","text":" are used here to prevent to rely on "},{"type":"emphasis","inlineContent":[{"type":"text","text":"SwiftUI"}]},{"text":" types which are not compatible with ","type":"text"},{"type":"codeVoice","code":"@objc"},{"text":" and are heavier than primitive types.","type":"text"},{"text":" ","type":"text"},{"text":"In addition, if new styles are defined in design team side (such as kind of composite styles) and need to be processed differently","type":"text"},{"type":"text","text":" "},{"type":"text","text":"(because not available with "},{"inlineContent":[{"text":"SwiftUI","type":"text"}],"type":"emphasis"},{"type":"text","text":" because are composed of several styles),"},{"text":" ","type":"text"},{"text":"such  ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":" values could be procesed later without any API breaks."}],"kind":"symbol","title":"BorderStyleRawToken"},"doc://OUDSTokensRaw/documentation/OUDSTokensRaw/ElevationBoxShadowRawToken":{"title":"ElevationBoxShadowRawToken","identifier":"doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/ElevationBoxShadowRawToken","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ElevationBoxShadowRawToken","kind":"identifier"}],"url":"\/documentation\/oudstokensraw\/elevationboxshadowrawtoken","type":"topic","abstract":[],"navigatorTitle":[{"text":"ElevationBoxShadowRawToken","kind":"identifier"}]},"doc://OUDSTokensRaw/documentation/OUDSTokensRaw/BorderRawTokens":{"kind":"symbol","identifier":"doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/BorderRawTokens","type":"topic","abstract":[{"type":"text","text":"This is the group of all "},{"inlineContent":[{"type":"text","text":"raw tokens"}],"type":"strong"},{"text":" related to ","type":"text"},{"type":"strong","inlineContent":[{"text":"borders","type":"text"}]},{"text":".","type":"text"}],"url":"\/documentation\/oudstokensraw\/borderrawtokens","title":"BorderRawTokens","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BorderRawTokens"}],"role":"symbol","navigatorTitle":[{"text":"BorderRawTokens","kind":"identifier"}]},"doc://OUDSTokensRaw/documentation/OUDSTokensRaw/BorderWidthRawToken":{"kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BorderWidthRawToken"}],"abstract":[{"text":"Typeliases precising ","type":"text"},{"type":"codeVoice","code":"Double"},{"type":"text","text":" value are used (because of multiplier factors) for a "},{"type":"strong","inlineContent":[{"text":"border width raw token","type":"text"}]},{"text":".","type":"text"}],"identifier":"doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/BorderWidthRawToken","navigatorTitle":[{"text":"BorderWidthRawToken","kind":"identifier"}],"title":"BorderWidthRawToken","url":"\/documentation\/oudstokensraw\/borderwidthrawtoken","type":"topic","role":"symbol"},"doc://OUDSTokensRaw/documentation/OUDSTokensRaw/TypographyFontLineHeightRawToken":{"kind":"symbol","title":"TypographyFontLineHeightRawToken","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TypographyFontLineHeightRawToken"}],"url":"\/documentation\/oudstokensraw\/typographyfontlineheightrawtoken","type":"topic","abstract":[],"identifier":"doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/TypographyFontLineHeightRawToken","navigatorTitle":[{"kind":"identifier","text":"TypographyFontLineHeightRawToken"}],"role":"symbol"},"doc://OUDSTokensRaw/documentation/OUDSTokensRaw/TypographyCompositeRawToken":{"url":"\/documentation\/oudstokensraw\/typographycompositerawtoken","type":"topic","kind":"symbol","navigatorTitle":[{"text":"TypographyCompositeRawToken","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"TypographyCompositeRawToken","kind":"identifier"}],"title":"TypographyCompositeRawToken","identifier":"doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/TypographyCompositeRawToken","role":"symbol","abstract":[]},"doc://OUDSTokensRaw/documentation/OUDSTokensRaw/TypographyRawTokens":{"type":"topic","identifier":"doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/TypographyRawTokens","kind":"symbol","url":"\/documentation\/oudstokensraw\/typographyrawtokens","abstract":[{"type":"text","text":"This is the group of all "},{"type":"strong","inlineContent":[{"type":"text","text":"raw tokens"}]},{"type":"text","text":" related to "},{"type":"strong","inlineContent":[{"type":"text","text":"typography"}]},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Primitive types such as ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"String","type":"codeVoice"},{"text":" must be used to as to allow to use ","type":"text"},{"type":"codeVoice","code":"@objc"},{"type":"text","text":" keywords in extensions for overriding."},{"type":"text","text":" "},{"type":"text","text":"Such tokens are packed in a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Swift enum"}]},{"type":"text","text":" so as to gather them in one object with the suitable namespace and avoid to have just constants in nothing else"},{"text":" ","type":"text"},{"text":"(i.e. publicly accessible from everywhere). More optimized than ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"struct"}]},{"text":".","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypographyRawTokens"}],"title":"TypographyRawTokens","navigatorTitle":[{"text":"TypographyRawTokens","kind":"identifier"}]},"doc://OUDSTokensRaw/documentation/OUDSTokensRaw/TypographyFontWeightRawToken":{"type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TypographyFontWeightRawToken"}],"navigatorTitle":[{"text":"TypographyFontWeightRawToken","kind":"identifier"}],"kind":"symbol","title":"TypographyFontWeightRawToken","role":"symbol","identifier":"doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/TypographyFontWeightRawToken","url":"\/documentation\/oudstokensraw\/typographyfontweightrawtoken","abstract":[]},"doc://OUDSTokensRaw/documentation/OUDSTokensRaw":{"title":"OUDSTokensRaw","identifier":"doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw","type":"topic","kind":"symbol","url":"\/documentation\/oudstokensraw","abstract":[{"inlineContent":[{"type":"text","text":"Raw tokens"}],"type":"emphasis"},{"text":" are smallest ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"tokens"}]},{"type":"text","text":" possible. They are associated to raw values and will be finaly the values assigned to the "},{"inlineContent":[{"text":"components","type":"text"}],"type":"emphasis"},{"type":"text","text":" properties."}],"role":"collection"},"doc://OUDSTokensRaw/documentation/OUDSTokensRaw/ColorRawToken":{"abstract":[],"title":"ColorRawToken","url":"\/documentation\/oudstokensraw\/colorrawtoken","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"ColorRawToken","kind":"identifier"}],"identifier":"doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/ColorRawToken","navigatorTitle":[{"text":"ColorRawToken","kind":"identifier"}],"kind":"symbol"},"doc://OUDSTokensRaw/documentation/OUDSTokensRaw/TypographyFontParagraphSpacingRawToken":{"title":"TypographyFontParagraphSpacingRawToken","abstract":[],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TypographyFontParagraphSpacingRawToken"}],"type":"topic","identifier":"doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/TypographyFontParagraphSpacingRawToken","kind":"symbol","url":"\/documentation\/oudstokensraw\/typographyfontparagraphspacingrawtoken","role":"symbol","navigatorTitle":[{"text":"TypographyFontParagraphSpacingRawToken","kind":"identifier"}]},"doc://OUDSTokensRaw/documentation/OUDSTokensRaw/BorderRadiusRawToken":{"kind":"symbol","identifier":"doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/BorderRadiusRawToken","type":"topic","abstract":[{"type":"text","text":"Typeliases precising "},{"type":"codeVoice","code":"Double"},{"type":"text","text":" value are used (because of multiplier factors) for a "},{"inlineContent":[{"type":"text","text":"border widthradiusraw token"}],"type":"strong"},{"type":"text","text":"."}],"url":"\/documentation\/oudstokensraw\/borderradiusrawtoken","title":"BorderRadiusRawToken","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BorderRadiusRawToken"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"BorderRadiusRawToken"}]},"doc://OUDSTokensRaw/documentation/OUDSTokensRaw/ElevationRawTokens":{"navigatorTitle":[{"kind":"identifier","text":"ElevationRawTokens"}],"role":"symbol","identifier":"doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/ElevationRawTokens","abstract":[{"type":"text","text":"This is the group of all "},{"inlineContent":[{"text":"raw tokens","type":"text"}],"type":"strong"},{"text":" related to ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"elevations"}]},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Primitive types such as ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":" must be used to as to allow to use ","type":"text"},{"type":"codeVoice","code":"@objc"},{"type":"text","text":" keywords in extensions for overriding."},{"text":" ","type":"text"},{"text":"Such tokens are packed in a ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"Swift enum"}]},{"text":" so as to gather them in one object with the suitable namespace and avoid to have just constants in nothing else","type":"text"},{"type":"text","text":" "},{"type":"text","text":"(i.e. publicly accessible from everywhere). More optimized than "},{"type":"emphasis","inlineContent":[{"type":"text","text":"struct"}]},{"type":"text","text":"."}],"kind":"symbol","title":"ElevationRawTokens","url":"\/documentation\/oudstokensraw\/elevationrawtokens","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ElevationRawTokens"}]},"doc://OUDSTokensRaw/documentation/OUDSTokensRaw/TypographyFontSizeRawToken":{"navigatorTitle":[{"text":"TypographyFontSizeRawToken","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/TypographyFontSizeRawToken","title":"TypographyFontSizeRawToken","url":"\/documentation\/oudstokensraw\/typographyfontsizerawtoken","abstract":[],"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypographyFontSizeRawToken"}],"type":"topic","kind":"symbol"},"doc://OUDSTokensRaw/documentation/OUDSTokensRaw/DimensionRawToken":{"role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"DimensionRawToken"}],"abstract":[],"title":"DimensionRawToken","url":"\/documentation\/oudstokensraw\/dimensionrawtoken","navigatorTitle":[{"kind":"identifier","text":"DimensionRawToken"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/DimensionRawToken"},"doc://OUDSTokensRaw/documentation/OUDSTokensRaw/ColorRawTokens":{"title":"ColorRawTokens","abstract":[{"text":"This is the group of all ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"raw tokens"}]},{"text":" related to ","type":"text"},{"inlineContent":[{"type":"text","text":"colors"}],"type":"strong"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Primitive types such as  ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":" must be used to as to allow to use "},{"code":"@objc","type":"codeVoice"},{"text":" keywords in extensions for overriding.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Such tokens are packed in a "},{"inlineContent":[{"type":"text","text":"Swift enum"}],"type":"emphasis"},{"type":"text","text":" so as to gather them in one object with the suitable namespace and avoid to have just constants in nothing else"},{"text":" ","type":"text"},{"type":"text","text":"(i.e. publicly accessible from everywhere). More optimized than "},{"inlineContent":[{"type":"text","text":"struct"}],"type":"emphasis"},{"type":"text","text":"."}],"type":"topic","url":"\/documentation\/oudstokensraw\/colorrawtokens","identifier":"doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/ColorRawTokens","navigatorTitle":[{"text":"ColorRawTokens","kind":"identifier"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ColorRawTokens"}],"kind":"symbol"},"doc://OUDSTokensRaw/documentation/OUDSTokensRaw/ElevationRawToken":{"kind":"symbol","abstract":[{"type":"text","text":"Typeliases precising "},{"type":"codeVoice","code":"Int"},{"type":"text","text":" value are used (because used in "},{"type":"emphasis","inlineContent":[{"type":"text","text":"SwiftUI"}]},{"type":"text","text":" API) for each "},{"type":"strong","inlineContent":[{"type":"text","text":"elevation raw token"}]},{"type":"text","text":"."}],"title":"ElevationRawToken","url":"\/documentation\/oudstokensraw\/elevationrawtoken","identifier":"doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/ElevationRawToken","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"ElevationRawToken","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ElevationRawToken"}]},"doc://OUDSTokensRaw/documentation/OUDSTokensRaw/GridRawToken":{"title":"GridRawToken","abstract":[],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"GridRawToken"}],"type":"topic","identifier":"doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/GridRawToken","kind":"symbol","navigatorTitle":[{"text":"GridRawToken","kind":"identifier"}],"role":"symbol","url":"\/documentation\/oudstokensraw\/gridrawtoken"},"doc://OUDSTokensRaw/documentation/OUDSTokensRaw/OpacityRawToken":{"role":"symbol","navigatorTitle":[{"text":"OpacityRawToken","kind":"identifier"}],"title":"OpacityRawToken","url":"\/documentation\/oudstokensraw\/opacityrawtoken","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"OpacityRawToken","kind":"identifier"}],"kind":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/OpacityRawToken"},"doc://OUDSTokensRaw/documentation/OUDSTokensRaw/GridRawTokens":{"role":"symbol","title":"GridRawTokens","navigatorTitle":[{"text":"GridRawTokens","kind":"identifier"}],"identifier":"doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/GridRawTokens","type":"topic","url":"\/documentation\/oudstokensraw\/gridrawtokens","abstract":[{"type":"text","text":"This is the group of all "},{"type":"strong","inlineContent":[{"text":"raw tokens","type":"text"}]},{"type":"text","text":" related to "},{"inlineContent":[{"text":"grid","type":"text"}],"type":"strong"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"Primitive types such as "},{"code":"Int","type":"codeVoice"},{"type":"text","text":" must be used to as to allow to use "},{"type":"codeVoice","code":"@objc"},{"text":" keywords in extensions for overriding.","type":"text"},{"type":"text","text":" "},{"text":"Such tokens are packed in a ","type":"text"},{"inlineContent":[{"type":"text","text":"Swift enum"}],"type":"emphasis"},{"type":"text","text":" so as to gather them in one object with the suitable namespace and avoid to have just constants in nothing else"},{"type":"text","text":" "},{"text":"(i.e. publicly accessible from everywhere). More optimized than ","type":"text"},{"inlineContent":[{"type":"text","text":"struct"}],"type":"emphasis"},{"text":".","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"GridRawTokens","kind":"identifier"}],"kind":"symbol"},"doc://OUDSTokensRaw/documentation/OUDSTokensRaw/TypographyFontFamilyRawToken":{"role":"symbol","identifier":"doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/TypographyFontFamilyRawToken","url":"\/documentation\/oudstokensraw\/typographyfontfamilyrawtoken","kind":"symbol","title":"TypographyFontFamilyRawToken","abstract":[],"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"TypographyFontFamilyRawToken","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"TypographyFontFamilyRawToken","kind":"identifier"}]},"doc://OUDSTokensRaw/documentation/OUDSTokensRaw/DimensionRawTokens":{"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DimensionRawTokens"}],"navigatorTitle":[{"text":"DimensionRawTokens","kind":"identifier"}],"identifier":"doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/DimensionRawTokens","abstract":[{"type":"text","text":"This is the group of all "},{"type":"strong","inlineContent":[{"type":"text","text":"raw tokens"}]},{"text":" related to ","type":"text"},{"type":"strong","inlineContent":[{"text":"dimensions","type":"text"}]},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Primitive types such as ","type":"text"},{"code":"Double","type":"codeVoice"},{"text":" must be used to as to allow to use ","type":"text"},{"type":"codeVoice","code":"@objc"},{"type":"text","text":" keywords in extensions for overriding."},{"text":" ","type":"text"},{"type":"text","text":"Such tokens are packed in a "},{"inlineContent":[{"type":"text","text":"Swift enum"}],"type":"emphasis"},{"text":" so as to gather them in one object with the suitable namespace and avoid to have just constants in nothing else","type":"text"},{"type":"text","text":" "},{"type":"text","text":"(i.e. publicly accessible from everywhere). More optimized than "},{"type":"emphasis","inlineContent":[{"text":"struct","type":"text"}]},{"type":"text","text":"."}],"role":"symbol","type":"topic","kind":"symbol","title":"DimensionRawTokens","url":"\/documentation\/oudstokensraw\/dimensionrawtokens"},"doc://OUDSTokensRaw/documentation/OUDSTokensRaw/OpacityRawTokens":{"kind":"symbol","url":"\/documentation\/oudstokensraw\/opacityrawtokens","abstract":[{"type":"text","text":"This is the group of all "},{"inlineContent":[{"type":"text","text":"raw tokens"}],"type":"strong"},{"text":" related to ","type":"text"},{"inlineContent":[{"text":"opacity","type":"text"}],"type":"strong"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Primitive types such as "},{"type":"codeVoice","code":"Double"},{"type":"text","text":" must be used to as to allow to use "},{"code":"@objc","type":"codeVoice"},{"type":"text","text":" keywords in extensions for overriding."},{"type":"text","text":" "},{"type":"text","text":"Such tokens are packed in a "},{"inlineContent":[{"type":"text","text":"Swift enum"}],"type":"emphasis"},{"text":" so as to gather them in one object with the suitable namespace and avoid to have just constants in nothing else","type":"text"},{"type":"text","text":" "},{"type":"text","text":"(i.e. publicly accessible from everywhere). More optimized than "},{"inlineContent":[{"type":"text","text":"struct"}],"type":"emphasis"},{"text":".","type":"text"}],"type":"topic","title":"OpacityRawTokens","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"OpacityRawTokens"}],"identifier":"doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/OpacityRawTokens","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OpacityRawTokens","kind":"identifier"}]}}}