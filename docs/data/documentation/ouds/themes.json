{"hierarchy":{"paths":[["doc:\/\/OUDS\/documentation\/OUDS"]]},"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"inlineContent":[{"type":"text","text":"This library exposes today up to two themes:"}],"type":"paragraph"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"doc:\/\/OUDSThemesOrange\/OrangeTheme"},{"text":" which can be seen as the default ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"theme","type":"text"}]}]}]},{"content":[{"inlineContent":[{"type":"text","text":"doc:\/\/OUDSThemesSosh\/SoshTheme"},{"text":" for Sosh.","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"They both are based on an ","type":"text"},{"type":"codeVoice","code":"OUDSTheme"},{"type":"text","text":" defining default values."}]},{"inlineContent":[{"inlineContent":[{"text":"Themes","type":"text"}],"type":"emphasis"},{"type":"text","text":" car defined thanks to "},{"type":"codeVoice","code":"open class"},{"type":"text","text":" in Swift. It allows inheritance and derivation."},{"type":"text","text":" "},{"inlineContent":[{"text":"Themes","type":"text"}],"type":"emphasis"},{"text":" have Swift ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"extensions","type":"text"}]},{"text":" so as to get the ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"tokens"}]},{"type":"text","text":" to define. These tokens are overriden thanks to "},{"type":"codeVoice","code":"@objc open"},{"text":" combination so as to make possible to override these values in extensions (thanks to ","type":"text"},{"type":"codeVoice","code":"@objc"},{"text":") and from objects outside the module (thanks to ","type":"text"},{"code":"open","type":"codeVoice"},{"type":"text","text":"). Thus we can split values and responsabilities in different "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Swift Package Manager targets"}]},{"text":" and keep overriding and inheritance possible?","type":"text"}],"type":"paragraph"},{"level":2,"text":"Use themeable view","type":"heading","anchor":"Use-themeable-view"},{"syntax":"swift","code":["\/\/ Make imports","import OUDS","import OUDSThemesOrange","","\/\/ Add themeable view to your root view","OUDSThemeableView(theme: OrangeTheme()) {","    YourRootView()","}"],"type":"codeListing"},{"level":2,"type":"heading","text":"Define a custom theme if needed","anchor":"Define-a-custom-theme-if-needed"},{"type":"codeListing","syntax":"swift","code":["class YourCustomTheme: OrangeTheme { }","","extension YourCustomTheme {","","    \/\/ Override components tokens if needed","    override var ftiBorderStyle: BorderStyleSemanticToken { borderStyleDrag }","    override var ftiBorderWidth: BorderWidthSemanticToken { borderWidthThickest }","    ","    \/\/ Override colors semantic tokens if needed","    override var colorBackgroundDefaultPrimaryLight: ColorSemanticToken! { ColorRawTokens.colorFunctionalSun500 }","    override var colorBackgroundDefaultPrimaryDark: ColorSemanticToken! { ColorRawTokens.colorFunctionalSun800 }","    ","    \/\/ Etc.","}"]},{"level":2,"type":"heading","anchor":"How-to-create-your-own-theme","text":"How to create your own theme"},{"inlineContent":[{"text":"It is quite simple, you have to follow several steps.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"First, create a ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"Swift class","type":"text"}]},{"type":"text","text":" which will inherit from "},{"code":"OrangeTheme","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"OUDSTheme","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"You can see ","type":"text"},{"code":"OrangeTheme","type":"codeVoice"},{"type":"text","text":" as more specified and less abtract as "},{"code":"OUDSTheme","type":"codeVoice"},{"text":" which is the base of all themes.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Then, you should override the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"semantic tokens"}]},{"type":"text","text":" and "},{"type":"emphasis","inlineContent":[{"type":"text","text":"components tokens"}]},{"text":" you want ; we recommend to use ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"Swift extensions","type":"text"}]},{"type":"text","text":" for clarity reasons."},{"type":"text","text":" "},{"text":"If your theme needs to define its own ","type":"text"},{"inlineContent":[{"type":"text","text":"raw tokens"}],"type":"emphasis"},{"text":", you can also define them using a ","type":"text"},{"code":"enum","type":"codeVoice"},{"type":"text","text":" and the "},{"inlineContent":[{"type":"text","text":"raw tokens types"}],"type":"emphasis"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example:"}]},{"type":"codeListing","syntax":"swift","code":["import Foundation","import SwiftUI","import OUDSTokensRaw        \/\/ To get raw tpkens","import OUDSTokensSemantic   \/\/ To get semantic tokens","import OUDSTokensComponent  \/\/ To get component tokens","import OUDSThemesOrange     \/\/ To override OrangeTheme (which is default theme)","","\/\/ Can be for example a country theme","class OrangeCustomTheme: OrangeTheme { }","","extension OrangeCustomTheme { \/\/ For FormsTextInputComponentToken, used in component FormsTextInputComponent","","    public override var ftiTitleFontWeight: TypographyFontWeightSemanticToken { fontWeightLabelStrong }","    public override var ftiTitleFontSize: TypographyFontSizeSemanticToken { fontSizeLabelXLarge }","    public override var ftiTitleColor: ColorSemanticToken { ColorRawTokens.colorFunctionalDodgerBlue500 }","","    public override var ftiSubtitleFontWeight: TypographyFontWeightSemanticToken { fontWeightBodyDefault }","    public override var ftiSubtitleFontSize: TypographyFontSizeSemanticToken { fontSizeLabelMedium }","    public override var ftiSubtitleColor: ColorSemanticToken { ColorRawTokens.colorFunctionalMalachite500 }","","    public override var ftiBackgroundColorLight: ColorSemanticToken { colorBackgroundDefaultPrimaryLight }","    public override var ftiBackgroundColorDark: ColorSemanticToken { colorBackgroundDefaultPrimaryDark }","","    public override var ftiBorderColor: ColorSemanticToken { colorBorderEmphasisDark ?? MyThemeColorRawTokens.someAwesomeThemeExclusiveColor }","","    public override var ftiBorderStyle: BorderStyleSemanticToken { borderStyleDrag }","","    public override var ftiBorderWidth: BorderWidthSemanticToken { borderWidthThickest }","}","","extension OrangeCustomTheme { \/\/ For ColorSemanticTokens using anywhere","","    override var colorBackgroundDefaultPrimaryLight: ColorSemanticToken! { ColorRawTokens.colorFunctionalSun500 }","    override var colorBackgroundDefaultPrimaryDark: ColorSemanticToken! { ColorRawTokens.colorFunctionalSun800 }","}"]},{"inlineContent":[{"type":"text","text":"And your own theme colors "},{"type":"emphasis","inlineContent":[{"text":"raw tokens","type":"text"}]},{"type":"text","text":":"}],"type":"paragraph"},{"type":"codeListing","code":["","public typealias MyThemeColorRawToken = ColorRawToken \/\/ Refer to type ColorRawToken for consistency","","public enum MyThemeColorRawTokens {","","    public static let someAwesomeThemeExclusiveColor: MyThemeColorRawToken = \"#12345600\"","    ","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"The for your root view:","type":"text"}]},{"syntax":"swift","code":["import SwiftUI","import OUDS \/\/ To get ``OUDSThemeableView``","","struct MyAppRootView: View {","","    var body: some View {","        OUDSThemeableView(theme: OrangeCustomTheme()) {","            \/\/ ...","        }","    }","}"],"type":"codeListing"}]}],"identifier":{"url":"doc:\/\/OUDS\/documentation\/OUDS\/Themes","interfaceLanguage":"swift"},"kind":"article","abstract":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Themes"}]},{"type":"text","text":" are applications of specific values for "},{"type":"emphasis","inlineContent":[{"type":"text","text":"components tokens"}]},{"type":"text","text":" and "},{"inlineContent":[{"type":"text","text":"semantic tokens"}],"type":"emphasis"},{"type":"text","text":"."},{"text":" ","type":"text"},{"type":"text","text":"A "},{"inlineContent":[{"type":"text","text":"theme"}],"type":"emphasis"},{"type":"text","text":" contains any relevant "},{"type":"emphasis","inlineContent":[{"type":"text","text":"semantic tokens"}]},{"type":"text","text":" and "},{"inlineContent":[{"type":"text","text":"component tokens"}],"type":"emphasis"},{"type":"text","text":" which can be sued for components rendering."},{"text":" ","type":"text"},{"type":"text","text":"A "},{"inlineContent":[{"text":"theme","type":"text"}],"type":"emphasis"},{"type":"text","text":" has also "},{"inlineContent":[{"type":"text","text":"raw tokens"}],"type":"emphasis"},{"type":"text","text":" associated to primitive types so as to give to "},{"type":"emphasis","inlineContent":[{"type":"text","text":"components"}]},{"text":", written with ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"SwiftUI"}]},{"text":", the needed values in the suitable type. A ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"theme"}]},{"type":"text","text":" can add for itself any new "},{"inlineContent":[{"text":"tokens","type":"text"}],"type":"emphasis"},{"type":"text","text":"."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/ouds\/themes"]}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"roleHeading":"Article","modules":[{"name":"OUDS"}],"title":"Themes","role":"article"},"seeAlsoSections":[{"generated":true,"title":"Essentials","identifiers":["doc:\/\/OUDS\/documentation\/OUDS\/GettingStarted","doc:\/\/OUDS\/documentation\/OUDS\/Tokens","doc:\/\/OUDS\/documentation\/OUDS\/Components","doc:\/\/OUDS\/documentation\/OUDS\/Modules"]}],"references":{"doc://OUDS/documentation/OUDS/Tokens":{"title":"Tokens","kind":"article","abstract":[{"type":"text","text":"Design tokens represent the small, repeated design decisions that make up a design system’s visual style. Tokens replace static values, such as hex codes for color, with self-explanatory names."}],"url":"\/documentation\/ouds\/tokens","type":"topic","identifier":"doc:\/\/OUDS\/documentation\/OUDS\/Tokens","role":"article"},"doc://OUDS/documentation/OUDS/Modules":{"title":"Modules","abstract":[{"type":"text","text":"A "},{"inlineContent":[{"type":"text","text":"module"}],"type":"emphasis"},{"type":"text","text":" can be seen as a set of features and components to fill a need."},{"text":" ","type":"text"},{"text":"There is not module yet.","type":"text"}],"kind":"article","url":"\/documentation\/ouds\/modules","type":"topic","identifier":"doc:\/\/OUDS\/documentation\/OUDS\/Modules","role":"article"},"doc://OUDS/documentation/OUDS":{"role":"collection","title":"OUDS","identifier":"doc:\/\/OUDS\/documentation\/OUDS","abstract":[{"type":"text","text":"Full Design System to build Orange Mobile Application."}],"kind":"symbol","url":"\/documentation\/ouds","type":"topic"},"doc://OUDS/documentation/OUDS/Components":{"title":"Components","kind":"article","abstract":[{"inlineContent":[{"text":"Components","type":"text"}],"type":"emphasis"},{"type":"text","text":" are defined here and can be integrated in applications."}],"url":"\/documentation\/ouds\/components","type":"topic","identifier":"doc:\/\/OUDS\/documentation\/OUDS\/Components","role":"article"},"doc://OUDS/documentation/OUDS/GettingStarted":{"title":"Getting Started with OUDS","abstract":[{"type":"text","text":"Howto: use to the get package as dependancy in application, import library elements."}],"kind":"article","url":"\/documentation\/ouds\/gettingstarted","type":"topic","identifier":"doc:\/\/OUDS\/documentation\/OUDS\/GettingStarted","role":"article"}}}