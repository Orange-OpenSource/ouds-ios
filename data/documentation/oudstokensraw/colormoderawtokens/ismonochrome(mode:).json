{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/oudstokensraw\/colormoderawtokens\/ismonochrome(mode:)"]}],"identifier":{"url":"doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/ColorModeRawTokens\/isMonochrome(mode:)","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Type Method","role":"symbol","externalID":"s:13OUDSTokensRaw09ColorModeB6TokensO12isMonochrome4modeSbSgSS_tFZ","modules":[{"name":"Tokens with raw values"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isMonochrome","kind":"identifier"},{"text":"(","kind":"text"},{"text":"mode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ColorModeRawToken","preciseIdentifier":"s:13OUDSTokensRaw09ColorModeB5Tokena","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"isMonochrome(mode:)","symbolKind":"method"},"kind":"symbol","sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"Depending to the given value, defines if the monochrome mode must be considered or not"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isMonochrome","kind":"identifier"},{"text":"(","kind":"text"},{"text":"mode","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:13OUDSTokensRaw09ColorModeB5Tokena","text":"ColorModeRawToken","kind":"typeIdentifier","identifier":"doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/ColorModeRawToken"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":"?","kind":"text"}]}]},{"parameters":[{"name":"mode","content":[{"inlineContent":[{"text":"A color mode to test","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Return: ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if monochrome must be applied, ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" otherwise, ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if not possible to define","type":"text"}]}]}]}]}],"hierarchy":{"paths":[["doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw","doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/ColorModeRawTokens"]]},"references":{"doc://OUDSTokensRaw/documentation/OUDSTokensRaw/ColorModeRawToken":{"abstract":[{"text":"A color mode raw token is finaly a ","type":"text"},{"code":"String","type":"codeVoice"},{"text":" as a specific word.","type":"text"}],"identifier":"doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/ColorModeRawToken","url":"\/documentation\/oudstokensraw\/colormoderawtoken","title":"ColorModeRawToken","type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"ColorModeRawToken"}],"navigatorTitle":[{"kind":"identifier","text":"ColorModeRawToken"}]},"ic_design_token_figma_raw.png":{"identifier":"ic_design_token_figma_raw.png","type":"image","alt":null,"variants":[{"url":"\/images\/OUDSTokensRaw\/ic_design_token_figma_raw.png","traits":["1x","light"]}]},"doc://OUDSTokensRaw/documentation/OUDSTokensRaw/ColorModeRawTokens/isMonochrome(mode:)":{"kind":"symbol","abstract":[{"type":"text","text":"Depending to the given value, defines if the monochrome mode must be considered or not"}],"url":"\/documentation\/oudstokensraw\/colormoderawtokens\/ismonochrome(mode:)","title":"isMonochrome(mode:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isMonochrome"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:13OUDSTokensRaw09ColorModeB5Tokena","text":"ColorModeRawToken"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":"?"}],"type":"topic","role":"symbol","identifier":"doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/ColorModeRawTokens\/isMonochrome(mode:)"},"doc://OUDSTokensRaw/documentation/OUDSTokensRaw/ColorModeRawTokens":{"title":"ColorModeRawTokens","abstract":[{"text":"Defined as the group of all ","type":"text"},{"type":"strong","inlineContent":[{"text":"raw tokens","type":"text"}]},{"text":" related to ","type":"text"},{"type":"strong","inlineContent":[{"text":"colors mode","type":"text"}]},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Values are defined in ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"ColorModeRawTokens+Values.swift","type":"text"}]},{"text":" file and not generated by the tokenator, as frozen values.","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/ColorModeRawTokens","isActive":true,"type":"reference"},{"text":" are tokens to use to define ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"color mode"}]},{"text":" of components, i.e. if a component or something must be considered","type":"text"},{"text":" ","type":"text"},{"text":"in light or dark color scheme, or in monochrome mode.","type":"text"},{"text":" ","type":"text"},{"text":"Primitive types such as  ","type":"text"},{"code":"String","type":"codeVoice"},{"text":" must be used to as to allow to use ","type":"text"},{"code":"@objc","type":"codeVoice"},{"text":" keywords in extensions for overriding.","type":"text"},{"text":" ","type":"text"},{"text":"Such tokens are packed in a ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"Swift enum"}]},{"text":" so as to gather them in one object with the suitable namespace and avoid to have just constants in nothing else","type":"text"},{"text":" ","type":"text"},{"text":"(i.e. publicly accessible from everywhere). More optimized than ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"struct","type":"text"}]},{"text":".","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ColorModeRawTokens","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"ColorModeRawTokens","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw\/ColorModeRawTokens","kind":"symbol","url":"\/documentation\/oudstokensraw\/colormoderawtokens"},"doc://OUDSTokensRaw/documentation/OUDSTokensRaw":{"title":"Tokens with raw values","identifier":"doc:\/\/OUDSTokensRaw\/documentation\/OUDSTokensRaw","kind":"symbol","abstract":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Raw tokens"}]},{"type":"text","text":" are smallest "},{"type":"emphasis","inlineContent":[{"text":"tokens","type":"text"}]},{"type":"text","text":" possible. They are associated to raw values and will be finaly the values assigned to the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"components"}]},{"type":"text","text":" properties."}],"role":"collection","images":[{"identifier":"ic_design_token_figma_raw.png","type":"icon"}],"type":"topic","url":"\/documentation\/oudstokensraw"}}}