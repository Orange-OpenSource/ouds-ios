{"variants":[{"paths":["\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"topicSections":[{"generated":true,"identifiers":["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/init(_:)","doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/init(light:dark:)"],"title":"Initializers","anchor":"Initializers"},{"generated":true,"identifiers":["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/dark","doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/light"],"title":"Instance Properties","anchor":"Instance-Properties"},{"generated":true,"identifiers":["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/elevation(for:)","doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/isEqual(_:)"],"title":"Instance Methods","anchor":"Instance-Methods"}],"sections":[],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/OUDSTokensSemantic\/objc(cs)NSObject"],"title":"Inherits From","type":"inheritsFrom"},{"kind":"relationships","identifiers":["doc:\/\/OUDSTokensSemantic\/objc(pl)NSObject","doc:\/\/OUDSTokensSemantic\/s7CVarArgP","doc:\/\/OUDSTokensSemantic\/s28CustomDebugStringConvertibleP","doc:\/\/OUDSTokensSemantic\/s23CustomStringConvertibleP","doc:\/\/OUDSTokensSemantic\/SQ","doc:\/\/OUDSTokensSemantic\/SH","doc:\/\/OUDSTokensSemantic\/s8SendableP"],"title":"Conforms To","type":"conformsTo"}],"metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MultipleElevationCompositeRawTokens"}],"title":"MultipleElevationCompositeRawTokens","role":"symbol","roleHeading":"Class","navigatorTitle":[{"text":"MultipleElevationCompositeRawTokens","kind":"identifier"}],"symbolKind":"class","externalID":"c:@M@OUDSTokensSemantic@objc(cs)MultipleElevationCompositeRawTokens","modules":[{"name":"OUDSTokensSemantic"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic"]]},"abstract":[{"text":"Semantic tokens which will wrap a combination of ","type":"text"},{"code":"ElevationCompositeRawToken","type":"codeVoice"},{"text":" depending to color scheme (i.e. light mode or dark mode)","type":"text"},{"text":" ","type":"text"},{"text":"Kind of composite token with multiple values, but not named “composite” because this word is already used in the design system.","type":"text"},{"text":" ","type":"text"},{"text":"Allows to gather the multiple-value tokens from ","type":"text"},{"inlineContent":[{"type":"text","text":"Figma"}],"type":"emphasis"},{"text":" inside one object.","type":"text"},{"text":" ","type":"text"},{"text":"If an elevation token exists with its value depending to the color scheme, it must be packed in such ``MultipleElevationCompositeRawTokens`","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MultipleElevationCompositeRawTokens"}]}]},{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"syntax":"swift","code":["        \/\/ Assuming in Figma with have a elevation semantic token elevationNone,","        \/\/ with values depending to color scheme. These values are defined as elevation raw tokens.","        let elevationBottom_0 = ElevationCompositeRawToken(x: elevationX0, y: elevationY0, blur: elevationBlur0, color: ColorRawTokens.colorOpacityBlack0)","        let elevationBottom_1_100 = ElevationCompositeRawToken(x: elevationX0, y: elevationY100, blur: elevationBlur200, color: ColorRawTokens.colorOpacityBlack100)","","        \/\/ Then the develoment team declares an \"higher\" level elevation semantic token","        \/\/ inside ElevationCompositeSemanticTokens protocol,","        \/\/ and defined inside OrangeTheme+ElevationCompositeSemanticTokens extension","        \/\/ ElevationCompositeSemanticToken is a typealias for MultipleElevationCompositeRawTokens to keep same grammar as design kit","        var elevationNone: ElevationCompositeSemanticToken {","            ElevationCompositeSemanticToken(light: elevationBottom_0, dark: elevationBottom_1_100)","        }","","        \/\/ If the same elevation is used whatever the color scheme is","        var elevationNone: ElevationCompositeSemanticToken {","            ElevationCompositeSemanticToken(elevationBottom_0)","        }"],"type":"codeListing"},{"syntax":"swift","code":["        \/\/ The theme exposes both generated elevation semantic tokens and \"crafted\" higher level elevation semantic tokens.","        \/\/ It is recommended to use the higher level version as it is less error-prone.","","        @Environment(\\.theme) var theme","        @Environment(\\.colorScheme) var colorScheme","","        \/\/ Given you want to apply the elevation token \"elevationRaised\"","        var body: some View {","            \/\/ Apply the token of elevation for the shadow effect without managing yourself the color scheme","            Rectangle()","                .shadow(elevation: theme.elevations.elevationRaised))","        }"],"type":"codeListing"},{"syntax":"swift","code":["    \/\/ Or get the token depending to the color scheme and do whatever you want with","    theme.elevations.elevationRaised.elevation(for: colorScheme)"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"The case of this ","type":"text"},{"code":"MultipleElevationCompositeRawTokens","type":"codeVoice"},{"type":"text","text":" is quite particular because in fact it contains "},{"code":"MultipleElevationCompositeRawTokens","type":"codeVoice"},{"type":"text","text":" (i.e. raw tokens) instead of semantic tokens."},{"text":" ","type":"text"},{"text":"In fact only the ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"color"}]},{"text":" of the elevation effect vary depending to the color scheme,","type":"text"},{"text":" ","type":"text"},{"text":"but in the ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"Figma"}]},{"text":" kit this is composite raw tokens which are defined for ligh and dark mode as only one token.","type":"text"}]},{"name":"Since","content":[{"inlineContent":[{"type":"text","text":"0.8.0"}],"type":"paragraph"}],"style":"note","type":"aside"}]}],"references":{"doc://OUDSTokensSemantic/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/OUDSTokensSemantic\/SQ","type":"unresolvable"},"doc://OUDSTokensSemantic/SH":{"title":"Swift.Hashable","identifier":"doc:\/\/OUDSTokensSemantic\/SH","type":"unresolvable"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens":{"url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens","kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"MultipleElevationCompositeRawTokens","kind":"identifier"}],"abstract":[{"type":"text","text":"Semantic tokens which will wrap a combination of "},{"type":"codeVoice","code":"ElevationCompositeRawToken"},{"type":"text","text":" depending to color scheme (i.e. light mode or dark mode)"},{"type":"text","text":" "},{"type":"text","text":"Kind of composite token with multiple values, but not named “composite” because this word is already used in the design system."},{"type":"text","text":" "},{"type":"text","text":"Allows to gather the multiple-value tokens from "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Figma"}]},{"type":"text","text":" inside one object."},{"type":"text","text":" "},{"type":"text","text":"If an elevation token exists with its value depending to the color scheme, it must be packed in such ``MultipleElevationCompositeRawTokens`"}],"title":"MultipleElevationCompositeRawTokens","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultipleElevationCompositeRawTokens","kind":"identifier"}],"identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/light":{"title":"light","type":"topic","abstract":[{"type":"text","text":"For "},{"inlineContent":[{"type":"text","text":"light"}],"type":"strong"},{"type":"text","text":" mode scheme"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"light"},{"kind":"text","text":": "},{"preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken","kind":"typeIdentifier","text":"ElevationCompositeRawToken"}],"identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/light","url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/light","role":"symbol"},"doc://OUDSTokensSemantic/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","identifier":"doc:\/\/OUDSTokensSemantic\/s23CustomStringConvertibleP","type":"unresolvable"},"doc://OUDSTokensSemantic/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/OUDSTokensSemantic\/s8SendableP","type":"unresolvable"},"doc://OUDSTokensSemantic/objc(cs)NSObject":{"title":"ObjectiveC.NSObject","identifier":"doc:\/\/OUDSTokensSemantic\/objc(cs)NSObject","type":"unresolvable"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/init(light:dark:)":{"url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/init(light:dark:)","type":"topic","abstract":[{"text":"Initializes a new elevation composite raw token with two values","type":"text"}],"role":"symbol","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/init(light:dark:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"light","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ElevationCompositeRawToken","kind":"typeIdentifier","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken"},{"text":", ","kind":"text"},{"text":"dark","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ElevationCompositeRawToken","kind":"typeIdentifier","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken"},{"text":")","kind":"text"}],"title":"init(light:dark:)","kind":"symbol"},"doc://OUDSTokensSemantic/objc(pl)NSObject":{"title":"ObjectiveC.NSObjectProtocol","identifier":"doc:\/\/OUDSTokensSemantic\/objc(pl)NSObject","type":"unresolvable"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/init(_:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ElevationCompositeRawToken","kind":"typeIdentifier","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken"},{"text":")","kind":"text"}],"abstract":[{"text":"Initializes a new elevation composite raw token with the same value for light and dark modes","type":"text"}],"identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/init(_:)","kind":"symbol","type":"topic","url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/init(_:)","title":"init(_:)","role":"symbol"},"doc://OUDSTokensSemantic/s28CustomDebugStringConvertibleP":{"title":"Swift.CustomDebugStringConvertible","identifier":"doc:\/\/OUDSTokensSemantic\/s28CustomDebugStringConvertibleP","type":"unresolvable"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic":{"identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic","url":"\/documentation\/oudstokenssemantic","role":"collection","type":"topic","abstract":[{"text":"These ","type":"text"},{"inlineContent":[{"type":"text","text":"tokens"}],"type":"emphasis"},{"text":" can be used mainly for ","type":"text"},{"inlineContent":[{"text":"component tokens","type":"text"}],"type":"emphasis"},{"text":" to apply some style and configuration values ; today ","type":"text"},{"inlineContent":[{"type":"text","text":"component tokens"}],"type":"emphasis"},{"text":" or ","type":"text"},{"inlineContent":[{"type":"text","text":"components"}],"type":"emphasis"},{"text":" are not defined yet.","type":"text"},{"text":" ","type":"text"},{"text":"They can be seen as an high level of usage with functional meanings.","type":"text"}],"title":"OUDSTokensSemantic","kind":"symbol"},"doc://OUDSTokensSemantic/s7CVarArgP":{"title":"Swift.CVarArg","identifier":"doc:\/\/OUDSTokensSemantic\/s7CVarArgP","type":"unresolvable"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/elevation(for:)":{"identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/elevation(for:)","abstract":[{"type":"text","text":"Returns the right elevation according to the "},{"type":"codeVoice","code":"colorScheme"},{"type":"text","text":"."}],"title":"elevation(for:)","url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/elevation(for:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"elevation"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ColorScheme","preciseIdentifier":"s:7SwiftUI11ColorSchemeO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ElevationCompositeRawToken","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken"}],"kind":"symbol","type":"topic","role":"symbol"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/isEqual(_:)":{"title":"isEqual(_:)","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isEqual"},{"kind":"text","text":"("},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic","url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/isequal(_:)","abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if "},{"type":"codeVoice","code":"self"},{"type":"text","text":" and "},{"type":"codeVoice","code":"object"},{"type":"text","text":" has the same "},{"type":"codeVoice","code":"light"},{"type":"text","text":" and "},{"type":"codeVoice","code":"dark"},{"type":"text","text":" values and with "},{"type":"codeVoice","code":"object"},{"type":"text","text":" "},{"type":"text","text":"as a "},{"type":"codeVoice","code":"MultipleElevationCompositeRawTokens"},{"type":"text","text":". Otherwise returns "},{"type":"codeVoice","code":"false"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"codeVoice","code":"isEqual"},{"type":"text","text":" override is preferred for "},{"type":"codeVoice","code":"NSObject"},{"type":"text","text":"."}],"identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/isEqual(_:)"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/dark":{"title":"dark","type":"topic","abstract":[{"text":"For ","type":"text"},{"inlineContent":[{"type":"text","text":"dark"}],"type":"strong"},{"text":" mode scheme","type":"text"}],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dark","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken","text":"ElevationCompositeRawToken","kind":"typeIdentifier"}],"identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/dark","kind":"symbol","url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/dark","role":"symbol"}}}