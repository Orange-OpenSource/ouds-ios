{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens"]}],"abstract":[{"type":"text","text":"Semantic tokens which will wrap a combination of "},{"type":"codeVoice","code":"ElevationCompositeRawToken"},{"type":"text","text":" depending to color scheme (i.e. light mode or dark mode)"},{"type":"text","text":" "},{"type":"text","text":"Kind of composite token with multiple values, but not named “composite” because this word is already used in the design system."},{"type":"text","text":" "},{"type":"text","text":"Allows to gather the multiple-value tokens from "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Figma"}]},{"type":"text","text":" inside one object."},{"type":"text","text":" "},{"type":"text","text":"If an elevation token exists with its value depending to the color scheme, it must be packed in such ``MultipleElevationCompositeRawTokens`"}],"kind":"symbol","topicSections":[{"generated":true,"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/init(_:)","doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/init(light:dark:)"]},{"generated":true,"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/dark","doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/light"]},{"generated":true,"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/elevation(for:)","doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/isEqual(_:)"]}],"metadata":{"role":"symbol","symbolKind":"class","externalID":"c:@M@OUDSTokensSemantic@objc(cs)MultipleElevationCompositeRawTokens","title":"MultipleElevationCompositeRawTokens","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultipleElevationCompositeRawTokens","kind":"identifier"}],"modules":[{"name":"Tokens for semantics"}],"navigatorTitle":[{"text":"MultipleElevationCompositeRawTokens","kind":"identifier"}],"roleHeading":"Class"},"relationshipsSections":[{"kind":"relationships","type":"inheritsFrom","title":"Inherits From","identifiers":["doc:\/\/OUDSTokensSemantic\/objc(cs)NSObject"]},{"kind":"relationships","type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/OUDSTokensSemantic\/objc(pl)NSObject","doc:\/\/OUDSTokensSemantic\/s7CVarArgP","doc:\/\/OUDSTokensSemantic\/s28CustomDebugStringConvertibleP","doc:\/\/OUDSTokensSemantic\/s23CustomStringConvertibleP","doc:\/\/OUDSTokensSemantic\/SQ","doc:\/\/OUDSTokensSemantic\/SH","doc:\/\/OUDSTokensSemantic\/s8SendableP","doc:\/\/OUDSTokensSemantic\/s16SendableMetatypeP"]}],"identifier":{"url":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MultipleElevationCompositeRawTokens"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"type":"codeListing","syntax":"swift","code":["        \/\/ Assuming in Figma with have a elevation semantic token elevationNone,","        \/\/ with values depending to color scheme. These values are defined as elevation raw tokens.","        let elevationBottom_0 = ElevationCompositeRawToken(x: elevationX0, y: elevationY0, blur: elevationBlur0, color: ColorRawTokens.colorOpacityBlack0)","        let elevationBottom_1_100 = ElevationCompositeRawToken(x: elevationX0, y: elevationY100, blur: elevationBlur200, color: ColorRawTokens.colorOpacityBlack100)","","        \/\/ Then the develoment team declares an \"higher\" level elevation semantic token","        \/\/ inside ElevationCompositeSemanticTokens protocol,","        \/\/ and defined inside OrangeTheme+ElevationCompositeSemanticTokens extension","        \/\/ ElevationCompositeSemanticToken is a typealias for MultipleElevationCompositeRawTokens to keep same grammar as design kit","        var elevationNone: ElevationCompositeSemanticToken {","            ElevationCompositeSemanticToken(light: elevationBottom_0, dark: elevationBottom_1_100)","        }","","        \/\/ If the same elevation is used whatever the color scheme is","        var elevationNone: ElevationCompositeSemanticToken {","            ElevationCompositeSemanticToken(elevationBottom_0)","        }"]},{"type":"codeListing","syntax":"swift","code":["        \/\/ The theme exposes both generated elevation semantic tokens and \"crafted\" higher level elevation semantic tokens.","        \/\/ It is recommended to use the higher level version as it is less error-prone.","","        @Environment(\\.theme) var theme","        @Environment(\\.colorScheme) var colorScheme","","        \/\/ Given you want to apply the elevation token \"elevationRaised\"","        var body: some View {","            \/\/ Apply the token of elevation for the shadow effect without managing yourself the color scheme","            Rectangle()","                .shadow(elevation: theme.elevations.elevationRaised))","        }"]},{"type":"codeListing","syntax":"swift","code":["    \/\/ Or get the token depending to the color scheme and do whatever you want with","    theme.elevations.elevationRaised.elevation(for: colorScheme)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The case of this "},{"type":"codeVoice","code":"MultipleElevationCompositeRawTokens"},{"type":"text","text":" is quite particular because in fact it contains "},{"type":"codeVoice","code":"MultipleElevationCompositeRawTokens"},{"type":"text","text":" (i.e. raw tokens) instead of semantic tokens."},{"type":"text","text":" "},{"type":"text","text":"In fact only the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"color"}]},{"type":"text","text":" of the elevation effect vary depending to the color scheme,"},{"type":"text","text":" "},{"type":"text","text":"but in the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Figma"}]},{"type":"text","text":" kit this is composite raw tokens which are defined for ligh and dark mode as only one token."}]},{"style":"note","name":"Since","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"0.8.0","type":"text"}]}]}]}],"sections":[],"references":{"doc://OUDSTokensSemantic/s7CVarArgP":{"type":"unresolvable","identifier":"doc:\/\/OUDSTokensSemantic\/s7CVarArgP","title":"Swift.CVarArg"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/dark":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"For "},{"type":"strong","inlineContent":[{"type":"text","text":"dark"}]},{"type":"text","text":" mode scheme"}],"url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/dark","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dark","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ElevationCompositeRawToken","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken","kind":"typeIdentifier"}],"title":"dark","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/dark"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/elevation(for:)":{"type":"topic","url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/elevation(for:)","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/elevation(for:)","title":"elevation(for:)","abstract":[{"type":"text","text":"Returns the right elevation according to the "},{"code":"colorScheme","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"elevation"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI11ColorSchemeO","text":"ColorScheme"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken","text":"ElevationCompositeRawToken"}],"kind":"symbol"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/init(_:)":{"kind":"symbol","abstract":[{"type":"text","text":"Initializes a new elevation composite raw token with the same value for light and dark modes"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken","kind":"typeIdentifier","text":"ElevationCompositeRawToken"},{"kind":"text","text":")"}],"type":"topic","role":"symbol","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/init(_:)","title":"init(_:)","url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/init(_:)"},"doc://OUDSTokensSemantic/SH":{"type":"unresolvable","identifier":"doc:\/\/OUDSTokensSemantic\/SH","title":"Swift.Hashable"},"ic_design_token_figma_semantic.svg":{"type":"image","identifier":"ic_design_token_figma_semantic.svg","alt":null,"variants":[{"url":"\/images\/OUDSTokensSemantic\/ic_design_token_figma_semantic.svg","traits":["1x","light"]}]},"doc://OUDSTokensSemantic/s28CustomDebugStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/OUDSTokensSemantic\/s28CustomDebugStringConvertibleP","title":"Swift.CustomDebugStringConvertible"},"doc://OUDSTokensSemantic/s16SendableMetatypeP":{"type":"unresolvable","identifier":"doc:\/\/OUDSTokensSemantic\/s16SendableMetatypeP","title":"Swift.SendableMetatype"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/init(light:dark:)":{"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"light"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken","text":"ElevationCompositeRawToken"},{"kind":"text","text":", "},{"kind":"externalParam","text":"dark"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken","text":"ElevationCompositeRawToken"},{"kind":"text","text":")"}],"title":"init(light:dark:)","type":"topic","url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/init(light:dark:)","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/init(light:dark:)","kind":"symbol","abstract":[{"type":"text","text":"Initializes a new elevation composite raw token with two values"}]},"doc://OUDSTokensSemantic/s23CustomStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/OUDSTokensSemantic\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens":{"navigatorTitle":[{"kind":"identifier","text":"MultipleElevationCompositeRawTokens"}],"abstract":[{"type":"text","text":"Semantic tokens which will wrap a combination of "},{"type":"codeVoice","code":"ElevationCompositeRawToken"},{"type":"text","text":" depending to color scheme (i.e. light mode or dark mode)"},{"type":"text","text":" "},{"type":"text","text":"Kind of composite token with multiple values, but not named “composite” because this word is already used in the design system."},{"type":"text","text":" "},{"type":"text","text":"Allows to gather the multiple-value tokens from "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Figma"}]},{"type":"text","text":" inside one object."},{"type":"text","text":" "},{"type":"text","text":"If an elevation token exists with its value depending to the color scheme, it must be packed in such ``MultipleElevationCompositeRawTokens`"}],"title":"MultipleElevationCompositeRawTokens","kind":"symbol","type":"topic","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MultipleElevationCompositeRawTokens"}],"url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens","role":"symbol"},"doc://OUDSTokensSemantic/SQ":{"type":"unresolvable","identifier":"doc:\/\/OUDSTokensSemantic\/SQ","title":"Swift.Equatable"},"doc://OUDSTokensSemantic/objc(pl)NSObject":{"type":"unresolvable","identifier":"doc:\/\/OUDSTokensSemantic\/objc(pl)NSObject","title":"ObjectiveC.NSObjectProtocol"},"doc://OUDSTokensSemantic/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/OUDSTokensSemantic\/s8SendableP","title":"Swift.Sendable"},"doc://OUDSTokensSemantic/objc(cs)NSObject":{"type":"unresolvable","identifier":"doc:\/\/OUDSTokensSemantic\/objc(cs)NSObject","title":"ObjectiveC.NSObject"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic":{"url":"\/documentation\/oudstokenssemantic","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"These "},{"type":"emphasis","inlineContent":[{"type":"text","text":"tokens"}]},{"type":"text","text":" can be used mainly for "},{"type":"emphasis","inlineContent":[{"type":"text","text":"component tokens"}]},{"type":"text","text":" to apply some style and configuration values ; today "},{"type":"emphasis","inlineContent":[{"type":"text","text":"component tokens"}]},{"type":"text","text":" or "},{"type":"emphasis","inlineContent":[{"text":"components","type":"text"}]},{"type":"text","text":" are not defined yet."},{"type":"text","text":" "},{"type":"text","text":"They can be seen as an high level of usage with functional meanings."}],"type":"topic","title":"Tokens for semantics","images":[{"identifier":"ic_design_token_figma_semantic.svg","type":"icon"}],"identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/isEqual(_:)":{"url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/isequal(_:)","type":"topic","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/isEqual(_:)","title":"isEqual(_:)","abstract":[{"type":"text","text":"Returns "},{"code":"true","type":"codeVoice"},{"type":"text","text":" if "},{"code":"self","type":"codeVoice"},{"type":"text","text":" and "},{"code":"object","type":"codeVoice"},{"type":"text","text":" has the same "},{"code":"light","type":"codeVoice"},{"type":"text","text":" and "},{"code":"dark","type":"codeVoice"},{"type":"text","text":" values and with "},{"code":"object","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"as a "},{"code":"MultipleElevationCompositeRawTokens","type":"codeVoice"},{"type":"text","text":". Otherwise returns "},{"code":"false","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"code":"isEqual","type":"codeVoice"},{"type":"text","text":" override is preferred for "},{"code":"NSObject","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isEqual"},{"kind":"text","text":"("},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/light":{"title":"light","role":"symbol","url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/light","abstract":[{"type":"text","text":"For "},{"type":"strong","inlineContent":[{"type":"text","text":"light"}]},{"type":"text","text":" mode scheme"}],"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"light"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ElevationCompositeRawToken","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken"}],"identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/light","kind":"symbol","type":"topic"}}}