{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens"},"relationshipsSections":[{"type":"inheritsFrom","identifiers":["doc:\/\/OUDSTokensSemantic\/objc(cs)NSObject"],"kind":"relationships","title":"Inherits From"},{"type":"conformsTo","identifiers":["doc:\/\/OUDSTokensSemantic\/objc(pl)NSObject","doc:\/\/OUDSTokensSemantic\/s7CVarArgP","doc:\/\/OUDSTokensSemantic\/s28CustomDebugStringConvertibleP","doc:\/\/OUDSTokensSemantic\/s23CustomStringConvertibleP","doc:\/\/OUDSTokensSemantic\/SQ","doc:\/\/OUDSTokensSemantic\/SH","doc:\/\/OUDSTokensSemantic\/s8SendableP","doc:\/\/OUDSTokensSemantic\/s16SendableMetatypeP"],"kind":"relationships","title":"Conforms To"}],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"MultipleElevationCompositeRawTokens"}],"modules":[{"name":"Tokens for semantics"}],"title":"MultipleElevationCompositeRawTokens","roleHeading":"Class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultipleElevationCompositeRawTokens","kind":"identifier"}],"externalID":"c:@M@OUDSTokensSemantic@objc(cs)MultipleElevationCompositeRawTokens","symbolKind":"class","role":"symbol"},"topicSections":[{"generated":true,"anchor":"Initializers","identifiers":["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/init(_:)","doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/init(light:dark:)"],"title":"Initializers"},{"generated":true,"anchor":"Instance-Properties","identifiers":["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/dark","doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/light"],"title":"Instance Properties"},{"generated":true,"anchor":"Instance-Methods","identifiers":["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/elevation(for:)","doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/isEqual(_:)"],"title":"Instance Methods"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MultipleElevationCompositeRawTokens"}],"platforms":["macOS"]}]},{"content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"code":["        \/\/ Assuming in Figma with have a elevation semantic token elevationNone,","        \/\/ with values depending to color scheme. These values are defined as elevation raw tokens.","        let elevationBottom_0 = ElevationCompositeRawToken(x: elevationX0, y: elevationY0, blur: elevationBlur0, color: ColorRawTokens.colorOpacityBlack0)","        let elevationBottom_1_100 = ElevationCompositeRawToken(x: elevationX0, y: elevationY100, blur: elevationBlur200, color: ColorRawTokens.colorOpacityBlack100)","","        \/\/ Then the develoment team declares an \"higher\" level elevation semantic token","        \/\/ inside ElevationCompositeSemanticTokens protocol,","        \/\/ and defined inside OrangeTheme+ElevationCompositeSemanticTokens extension","        \/\/ ElevationCompositeSemanticToken is a typealias for MultipleElevationCompositeRawTokens to keep same grammar as design kit","        var elevationNone: ElevationCompositeSemanticToken {","            ElevationCompositeSemanticToken(light: elevationBottom_0, dark: elevationBottom_1_100)","        }","","        \/\/ If the same elevation is used whatever the color scheme is","        var elevationNone: ElevationCompositeSemanticToken {","            ElevationCompositeSemanticToken(elevationBottom_0)","        }"],"type":"codeListing","syntax":"swift"},{"code":["        \/\/ The theme exposes both generated elevation semantic tokens and \"crafted\" higher level elevation semantic tokens.","        \/\/ It is recommended to use the higher level version as it is less error-prone.","","        @Environment(\\.theme) var theme","        @Environment(\\.colorScheme) var colorScheme","","        \/\/ Given you want to apply the elevation token \"elevationRaised\"","        var body: some View {","            \/\/ Apply the token of elevation for the shadow effect without managing yourself the color scheme","            Rectangle()","                .shadow(elevation: theme.elevations.elevationRaised))","        }"],"type":"codeListing","syntax":"swift"},{"code":["    \/\/ Or get the token depending to the color scheme and do whatever you want with","    theme.elevations.elevationRaised.elevation(for: colorScheme)"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"The case of this "},{"type":"codeVoice","code":"MultipleElevationCompositeRawTokens"},{"type":"text","text":" is quite particular because in fact it contains "},{"type":"codeVoice","code":"MultipleElevationCompositeRawTokens"},{"type":"text","text":" (i.e. raw tokens) instead of semantic tokens."},{"type":"text","text":" "},{"type":"text","text":"In fact only the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"color"}]},{"type":"text","text":" of the elevation effect vary depending to the color scheme,"},{"type":"text","text":" "},{"type":"text","text":"but in the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Figma"}]},{"type":"text","text":" kit this is composite raw tokens which are defined for ligh and dark mode as only one token."}],"type":"paragraph"},{"style":"note","name":"Since","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"0.8.0"}]}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","abstract":[{"type":"text","text":"Semantic tokens which will wrap a combination of "},{"type":"codeVoice","code":"ElevationCompositeRawToken"},{"type":"text","text":" depending to color scheme (i.e. light mode or dark mode)"},{"type":"text","text":" "},{"type":"text","text":"Kind of composite token with multiple values, but not named “composite” because this word is already used in the design system."},{"type":"text","text":" "},{"type":"text","text":"Allows to gather the multiple-value tokens from "},{"type":"emphasis","inlineContent":[{"text":"Figma","type":"text"}]},{"text":" inside one object.","type":"text"},{"text":" ","type":"text"},{"text":"If an elevation token exists with its value depending to the color scheme, it must be packed in such ``MultipleElevationCompositeRawTokens`","type":"text"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic"]]},"references":{"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/init(light:dark:)":{"role":"symbol","abstract":[{"type":"text","text":"Initializes a new elevation composite raw token with two values"}],"type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"light","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ElevationCompositeRawToken","kind":"typeIdentifier","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken"},{"text":", ","kind":"text"},{"text":"dark","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ElevationCompositeRawToken","kind":"typeIdentifier","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken"},{"text":")","kind":"text"}],"title":"init(light:dark:)","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/init(light:dark:)","url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/init(light:dark:)","kind":"symbol"},"doc://OUDSTokensSemantic/s23CustomStringConvertibleP":{"identifier":"doc:\/\/OUDSTokensSemantic\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible","type":"unresolvable"},"ic_design_token_figma_semantic.png":{"alt":null,"identifier":"ic_design_token_figma_semantic.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/OUDSTokensSemantic\/ic_design_token_figma_semantic.png"}]},"doc://OUDSTokensSemantic/objc(pl)NSObject":{"identifier":"doc:\/\/OUDSTokensSemantic\/objc(pl)NSObject","title":"ObjectiveC.NSObjectProtocol","type":"unresolvable"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/init(_:)":{"title":"init(_:)","kind":"symbol","abstract":[{"text":"Initializes a new elevation composite raw token with the same value for light and dark modes","type":"text"}],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ElevationCompositeRawToken","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/init(_:)","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/init(_:)","type":"topic"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/light":{"title":"light","kind":"symbol","abstract":[{"type":"text","text":"For "},{"inlineContent":[{"text":"light","type":"text"}],"type":"strong"},{"type":"text","text":" mode scheme"}],"role":"symbol","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/light","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"light"},{"kind":"text","text":": "},{"preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken","kind":"typeIdentifier","text":"ElevationCompositeRawToken"}],"url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/light","type":"topic"},"doc://OUDSTokensSemantic/s8SendableP":{"identifier":"doc:\/\/OUDSTokensSemantic\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://OUDSTokensSemantic/objc(cs)NSObject":{"type":"unresolvable","identifier":"doc:\/\/OUDSTokensSemantic\/objc(cs)NSObject","title":"ObjectiveC.NSObject"},"doc://OUDSTokensSemantic/s28CustomDebugStringConvertibleP":{"identifier":"doc:\/\/OUDSTokensSemantic\/s28CustomDebugStringConvertibleP","title":"Swift.CustomDebugStringConvertible","type":"unresolvable"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/dark":{"kind":"symbol","type":"topic","title":"dark","url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/dark","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/dark","role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"dark"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken","text":"ElevationCompositeRawToken"}],"abstract":[{"text":"For ","type":"text"},{"inlineContent":[{"text":"dark","type":"text"}],"type":"strong"},{"text":" mode scheme","type":"text"}]},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/elevation(for:)":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"elevation"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI11ColorSchemeO","text":"ColorScheme"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken","text":"ElevationCompositeRawToken"}],"url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/elevation(for:)","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/elevation(for:)","role":"symbol","kind":"symbol","abstract":[{"text":"Returns the right elevation according to the ","type":"text"},{"code":"colorScheme","type":"codeVoice"},{"text":".","type":"text"}],"title":"elevation(for:)"},"doc://OUDSTokensSemantic/SH":{"identifier":"doc:\/\/OUDSTokensSemantic\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic":{"kind":"symbol","type":"topic","role":"collection","title":"Tokens for semantics","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic","images":[{"identifier":"ic_design_token_figma_semantic.png","type":"icon"}],"abstract":[{"text":"These ","type":"text"},{"inlineContent":[{"type":"text","text":"tokens"}],"type":"emphasis"},{"text":" can be used mainly for ","type":"text"},{"inlineContent":[{"type":"text","text":"component tokens"}],"type":"emphasis"},{"text":" to apply some style and configuration values ; today ","type":"text"},{"inlineContent":[{"type":"text","text":"component tokens"}],"type":"emphasis"},{"text":" or ","type":"text"},{"inlineContent":[{"type":"text","text":"components"}],"type":"emphasis"},{"text":" are not defined yet.","type":"text"},{"text":" ","type":"text"},{"text":"They can be seen as an high level of usage with functional meanings.","type":"text"}],"url":"\/documentation\/oudstokenssemantic"},"doc://OUDSTokensSemantic/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/OUDSTokensSemantic\/SQ","type":"unresolvable"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/isEqual(_:)":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isEqual"},{"kind":"text","text":"("},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"symbol","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/isEqual(_:)","title":"isEqual(_:)","url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/isequal(_:)","role":"symbol","abstract":[{"type":"text","text":"Returns "},{"code":"true","type":"codeVoice"},{"type":"text","text":" if "},{"code":"self","type":"codeVoice"},{"type":"text","text":" and "},{"code":"object","type":"codeVoice"},{"type":"text","text":" has the same "},{"code":"light","type":"codeVoice"},{"type":"text","text":" and "},{"code":"dark","type":"codeVoice"},{"type":"text","text":" values and with "},{"code":"object","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"as a "},{"code":"MultipleElevationCompositeRawTokens","type":"codeVoice"},{"type":"text","text":". Otherwise returns "},{"code":"false","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"code":"isEqual","type":"codeVoice"},{"type":"text","text":" override is preferred for "},{"code":"NSObject","type":"codeVoice"},{"type":"text","text":"."}]},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens":{"title":"MultipleElevationCompositeRawTokens","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens","role":"symbol","navigatorTitle":[{"text":"MultipleElevationCompositeRawTokens","kind":"identifier"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultipleElevationCompositeRawTokens","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Semantic tokens which will wrap a combination of "},{"type":"codeVoice","code":"ElevationCompositeRawToken"},{"type":"text","text":" depending to color scheme (i.e. light mode or dark mode)"},{"type":"text","text":" "},{"type":"text","text":"Kind of composite token with multiple values, but not named “composite” because this word is already used in the design system."},{"type":"text","text":" "},{"type":"text","text":"Allows to gather the multiple-value tokens from "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Figma"}]},{"type":"text","text":" inside one object."},{"type":"text","text":" "},{"type":"text","text":"If an elevation token exists with its value depending to the color scheme, it must be packed in such ``MultipleElevationCompositeRawTokens`"}],"url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens"},"doc://OUDSTokensSemantic/s16SendableMetatypeP":{"title":"Swift.SendableMetatype","identifier":"doc:\/\/OUDSTokensSemantic\/s16SendableMetatypeP","type":"unresolvable"},"doc://OUDSTokensSemantic/s7CVarArgP":{"identifier":"doc:\/\/OUDSTokensSemantic\/s7CVarArgP","title":"Swift.CVarArg","type":"unresolvable"}}}