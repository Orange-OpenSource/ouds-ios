{"abstract":[{"text":"Semantic tokens which will wrap a combination of ","type":"text"},{"code":"ElevationCompositeRawToken","type":"codeVoice"},{"text":" depending to color scheme (i.e. light mode or dark mode)","type":"text"},{"text":" ","type":"text"},{"text":"Kind of composite token with multiple values, but not named “composite” because this word is already used in the design system.","type":"text"},{"text":" ","type":"text"},{"text":"Allows to gather the multiple-value tokens from ","type":"text"},{"inlineContent":[{"text":"Figma","type":"text"}],"type":"emphasis"},{"text":" inside one object.","type":"text"},{"text":" ","type":"text"},{"text":"If an elevation token exists with its value depending to the color scheme, it must be packed in such ``MultipleElevationCompositeRawTokens`","type":"text"}],"metadata":{"externalID":"c:@M@OUDSTokensSemantic@objc(cs)MultipleElevationCompositeRawTokens","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"MultipleElevationCompositeRawTokens","kind":"identifier"}],"symbolKind":"class","title":"MultipleElevationCompositeRawTokens","roleHeading":"Class","modules":[{"name":"Tokens for semantics"}],"role":"symbol","navigatorTitle":[{"text":"MultipleElevationCompositeRawTokens","kind":"identifier"}]},"relationshipsSections":[{"kind":"relationships","title":"Inherits From","identifiers":["doc:\/\/OUDSTokensSemantic\/objc(cs)NSObject"],"type":"inheritsFrom"},{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/OUDSTokensSemantic\/objc(pl)NSObject","doc:\/\/OUDSTokensSemantic\/s7CVarArgP","doc:\/\/OUDSTokensSemantic\/s28CustomDebugStringConvertibleP","doc:\/\/OUDSTokensSemantic\/s23CustomStringConvertibleP","doc:\/\/OUDSTokensSemantic\/SQ","doc:\/\/OUDSTokensSemantic\/SH","doc:\/\/OUDSTokensSemantic\/s8SendableP","doc:\/\/OUDSTokensSemantic\/s16SendableMetatypeP"],"type":"conformsTo"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens"},"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic"]]},"topicSections":[{"generated":true,"title":"Initializers","identifiers":["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/init(_:)","doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/init(light:dark:)"],"anchor":"Initializers"},{"generated":true,"title":"Instance Properties","identifiers":["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/dark","doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/light"],"anchor":"Instance-Properties"},{"generated":true,"title":"Instance Methods","identifiers":["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/elevation(for:)","doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/isEqual(_:)"],"anchor":"Instance-Methods"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultipleElevationCompositeRawTokens","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"overview","text":"Overview","level":2,"type":"heading"},{"code":["        \/\/ Assuming in Figma with have a elevation semantic token elevationNone,","        \/\/ with values depending to color scheme. These values are defined as elevation raw tokens.","        let elevationBottom_0 = ElevationCompositeRawToken(x: elevationX0, y: elevationY0, blur: elevationBlur0, color: ColorRawTokens.colorOpacityBlack0)","        let elevationBottom_1_100 = ElevationCompositeRawToken(x: elevationX0, y: elevationY100, blur: elevationBlur200, color: ColorRawTokens.colorOpacityBlack100)","","        \/\/ Then the develoment team declares an \"higher\" level elevation semantic token","        \/\/ inside ElevationCompositeSemanticTokens protocol,","        \/\/ and defined inside OrangeTheme+ElevationCompositeSemanticTokens extension","        \/\/ ElevationCompositeSemanticToken is a typealias for MultipleElevationCompositeRawTokens to keep same grammar as design kit","        var elevationNone: ElevationCompositeSemanticToken {","            ElevationCompositeSemanticToken(light: elevationBottom_0, dark: elevationBottom_1_100)","        }","","        \/\/ If the same elevation is used whatever the color scheme is","        var elevationNone: ElevationCompositeSemanticToken {","            ElevationCompositeSemanticToken(elevationBottom_0)","        }"],"syntax":"swift","type":"codeListing"},{"code":["        \/\/ The theme exposes both generated elevation semantic tokens and \"crafted\" higher level elevation semantic tokens.","        \/\/ It is recommended to use the higher level version as it is less error-prone.","","        @Environment(\\.theme) var theme","        @Environment(\\.colorScheme) var colorScheme","","        \/\/ Given you want to apply the elevation token \"elevationRaised\"","        var body: some View {","            \/\/ Apply the token of elevation for the shadow effect without managing yourself the color scheme","            Rectangle()","                .shadow(elevation: theme.elevations.elevationRaised))","        }"],"syntax":"swift","type":"codeListing"},{"code":["    \/\/ Or get the token depending to the color scheme and do whatever you want with","    theme.elevations.elevationRaised.elevation(for: colorScheme)"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"The case of this ","type":"text"},{"code":"MultipleElevationCompositeRawTokens","type":"codeVoice"},{"text":" is quite particular because in fact it contains ","type":"text"},{"code":"MultipleElevationCompositeRawTokens","type":"codeVoice"},{"text":" (i.e. raw tokens) instead of semantic tokens.","type":"text"},{"text":" ","type":"text"},{"text":"In fact only the ","type":"text"},{"inlineContent":[{"type":"text","text":"color"}],"type":"emphasis"},{"text":" of the elevation effect vary depending to the color scheme,","type":"text"},{"text":" ","type":"text"},{"text":"but in the ","type":"text"},{"inlineContent":[{"type":"text","text":"Figma"}],"type":"emphasis"},{"text":" kit this is composite raw tokens which are defined for ligh and dark mode as only one token.","type":"text"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"0.8.0","type":"text"}]}],"style":"note","type":"aside","name":"Since"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens"]}],"references":{"doc://OUDSTokensSemantic/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/OUDSTokensSemantic\/SH"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic":{"title":"Tokens for semantics","images":[{"identifier":"ic_design_token_figma_semantic.png","type":"icon"}],"kind":"symbol","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic","role":"collection","abstract":[{"type":"text","text":"These "},{"inlineContent":[{"text":"tokens","type":"text"}],"type":"emphasis"},{"type":"text","text":" can be used mainly for "},{"inlineContent":[{"text":"component tokens","type":"text"}],"type":"emphasis"},{"type":"text","text":" to apply some style and configuration values ; today "},{"type":"emphasis","inlineContent":[{"type":"text","text":"component tokens"}]},{"text":" or ","type":"text"},{"inlineContent":[{"type":"text","text":"components"}],"type":"emphasis"},{"text":" are not defined yet.","type":"text"},{"text":" ","type":"text"},{"text":"They can be seen as an high level of usage with functional meanings.","type":"text"}],"type":"topic","url":"\/documentation\/oudstokenssemantic"},"doc://OUDSTokensSemantic/s28CustomDebugStringConvertibleP":{"title":"Swift.CustomDebugStringConvertible","identifier":"doc:\/\/OUDSTokensSemantic\/s28CustomDebugStringConvertibleP","type":"unresolvable"},"doc://OUDSTokensSemantic/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/OUDSTokensSemantic\/SQ"},"doc://OUDSTokensSemantic/objc(pl)NSObject":{"title":"ObjectiveC.NSObjectProtocol","identifier":"doc:\/\/OUDSTokensSemantic\/objc(pl)NSObject","type":"unresolvable"},"doc://OUDSTokensSemantic/s7CVarArgP":{"type":"unresolvable","title":"Swift.CVarArg","identifier":"doc:\/\/OUDSTokensSemantic\/s7CVarArgP"},"ic_design_token_figma_semantic.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/OUDSTokensSemantic\/ic_design_token_figma_semantic.png"}],"alt":null,"identifier":"ic_design_token_figma_semantic.png","type":"image"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens":{"identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"MultipleElevationCompositeRawTokens","kind":"identifier"}],"url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens","kind":"symbol","role":"symbol","abstract":[{"text":"Semantic tokens which will wrap a combination of ","type":"text"},{"code":"ElevationCompositeRawToken","type":"codeVoice"},{"text":" depending to color scheme (i.e. light mode or dark mode)","type":"text"},{"text":" ","type":"text"},{"text":"Kind of composite token with multiple values, but not named “composite” because this word is already used in the design system.","type":"text"},{"text":" ","type":"text"},{"text":"Allows to gather the multiple-value tokens from ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"Figma"}]},{"text":" inside one object.","type":"text"},{"text":" ","type":"text"},{"text":"If an elevation token exists with its value depending to the color scheme, it must be packed in such ``MultipleElevationCompositeRawTokens`","type":"text"}],"title":"MultipleElevationCompositeRawTokens","navigatorTitle":[{"text":"MultipleElevationCompositeRawTokens","kind":"identifier"}]},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/init(_:)":{"title":"init(_:)","type":"topic","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/init(_:)","abstract":[{"text":"Initializes a new elevation composite raw token with the same value for light and dark modes","type":"text"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken","text":"ElevationCompositeRawToken"},{"kind":"text","text":")"}],"role":"symbol","kind":"symbol","url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/init(_:)"},"doc://OUDSTokensSemantic/s16SendableMetatypeP":{"title":"Swift.SendableMetatype","identifier":"doc:\/\/OUDSTokensSemantic\/s16SendableMetatypeP","type":"unresolvable"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/light":{"url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/light","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"light"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken","text":"ElevationCompositeRawToken"}],"role":"symbol","title":"light","type":"topic","kind":"symbol","abstract":[{"text":"For ","type":"text"},{"inlineContent":[{"text":"light","type":"text"}],"type":"strong"},{"text":" mode scheme","type":"text"}],"identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/light"},"doc://OUDSTokensSemantic/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","identifier":"doc:\/\/OUDSTokensSemantic\/s23CustomStringConvertibleP","type":"unresolvable"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/elevation(for:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"elevation"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI11ColorSchemeO","text":"ColorScheme"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken","text":"ElevationCompositeRawToken"}],"title":"elevation(for:)","kind":"symbol","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/elevation(for:)","role":"symbol","type":"topic","abstract":[{"text":"Returns the right elevation according to the ","type":"text"},{"code":"colorScheme","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/elevation(for:)"},"doc://OUDSTokensSemantic/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/OUDSTokensSemantic\/s8SendableP","type":"unresolvable"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/dark":{"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"dark"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ElevationCompositeRawToken","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken"}],"abstract":[{"text":"For ","type":"text"},{"inlineContent":[{"text":"dark","type":"text"}],"type":"strong"},{"text":" mode scheme","type":"text"}],"url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/dark","role":"symbol","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/dark","kind":"symbol","title":"dark","type":"topic"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/init(light:dark:)":{"title":"init(light:dark:)","url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/init(light:dark:)","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/init(light:dark:)","abstract":[{"type":"text","text":"Initializes a new elevation composite raw token with two values"}],"type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"light","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ElevationCompositeRawToken","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"dark","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ElevationCompositeRawToken","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/isEqual(_:)":{"title":"isEqual(_:)","kind":"symbol","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/isEqual(_:)","abstract":[{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if ","type":"text"},{"code":"self","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"object","type":"codeVoice"},{"text":" has the same ","type":"text"},{"code":"light","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"dark","type":"codeVoice"},{"text":" values and with ","type":"text"},{"type":"codeVoice","code":"object"},{"type":"text","text":" "},{"type":"text","text":"as a "},{"type":"codeVoice","code":"MultipleElevationCompositeRawTokens"},{"type":"text","text":". Otherwise returns "},{"type":"codeVoice","code":"false"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"codeVoice","code":"isEqual"},{"type":"text","text":" override is preferred for "},{"type":"codeVoice","code":"NSObject"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isEqual"},{"kind":"text","text":"("},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/isequal(_:)","role":"symbol","type":"topic"},"doc://OUDSTokensSemantic/objc(cs)NSObject":{"identifier":"doc:\/\/OUDSTokensSemantic\/objc(cs)NSObject","title":"ObjectiveC.NSObject","type":"unresolvable"}}}