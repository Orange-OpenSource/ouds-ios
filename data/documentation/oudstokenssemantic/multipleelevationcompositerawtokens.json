{"kind":"symbol","relationshipsSections":[{"identifiers":["doc:\/\/OUDSTokensSemantic\/objc(cs)NSObject"],"type":"inheritsFrom","kind":"relationships","title":"Inherits From"},{"identifiers":["doc:\/\/OUDSTokensSemantic\/objc(pl)NSObject","doc:\/\/OUDSTokensSemantic\/s7CVarArgP","doc:\/\/OUDSTokensSemantic\/s28CustomDebugStringConvertibleP","doc:\/\/OUDSTokensSemantic\/s23CustomStringConvertibleP","doc:\/\/OUDSTokensSemantic\/SQ","doc:\/\/OUDSTokensSemantic\/SH","doc:\/\/OUDSTokensSemantic\/s8SendableP"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"topicSections":[{"identifiers":["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/init(_:)","doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/init(light:dark:)"],"generated":true,"anchor":"Initializers","title":"Initializers"},{"identifiers":["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/dark","doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/light"],"generated":true,"anchor":"Instance-Properties","title":"Instance Properties"},{"identifiers":["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/elevation(for:)","doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/isEqual(_:)"],"generated":true,"anchor":"Instance-Methods","title":"Instance Methods"}],"identifier":{"url":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MultipleElevationCompositeRawTokens"}],"symbolKind":"class","title":"MultipleElevationCompositeRawTokens","modules":[{"name":"OUDSTokensSemantic"}],"navigatorTitle":[{"kind":"identifier","text":"MultipleElevationCompositeRawTokens"}],"role":"symbol","roleHeading":"Class","externalID":"c:@M@OUDSTokensSemantic@objc(cs)MultipleElevationCompositeRawTokens"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultipleElevationCompositeRawTokens","kind":"identifier"}]}]},{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"syntax":"swift","type":"codeListing","code":["        \/\/ Assuming in Figma with have a elevation semantic token elevationNone,","        \/\/ with values depending to color scheme. These values are defined as elevation raw tokens.","        let elevationBottom_0 = ElevationCompositeRawToken(x: elevationX0, y: elevationY0, blur: elevationBlur0, color: ColorRawTokens.colorOpacityBlack0)","        let elevationBottom_1_100 = ElevationCompositeRawToken(x: elevationX0, y: elevationY100, blur: elevationBlur200, color: ColorRawTokens.colorOpacityBlack100)","","        \/\/ Then the develoment team declares an \"higher\" level elevation semantic token","        \/\/ inside ElevationCompositeSemanticTokens protocol,","        \/\/ and defined inside OrangeTheme+ElevationCompositeSemanticTokens extension","        \/\/ ElevationCompositeSemanticToken is a typealias for MultipleElevationCompositeRawTokens to keep same grammar as design kit","        var elevationNone: ElevationCompositeSemanticToken {","            ElevationCompositeSemanticToken(light: elevationBottom_0, dark: elevationBottom_1_100)","        }","","        \/\/ If the same elevation is used whatever the color scheme is","        var elevationNone: ElevationCompositeSemanticToken {","            ElevationCompositeSemanticToken(elevationBottom_0)","        }"]},{"syntax":"swift","type":"codeListing","code":["        \/\/ The theme exposes both generated elevation semantic tokens and \"crafted\" higher level elevation semantic tokens.","        \/\/ It is recommended to use the higher level version as it is less error-prone.","","        @Environment(\\.theme) var theme","        @Environment(\\.colorScheme) var colorScheme","","        \/\/ Given you want to apply the elevation token \"elevationRaised\"","        var body: some View {","            \/\/ Apply the token of elevation for the shadow effect without managing yourself the color scheme","            Rectangle()","                .shadow(elevation: theme.elevations.elevationRaised))","        }"]},{"syntax":"swift","type":"codeListing","code":["    \/\/ Or get the token depending to the color scheme and do whatever you want with","    theme.elevations.elevationRaised.elevation(for: colorScheme)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The case of this "},{"code":"MultipleElevationCompositeRawTokens","type":"codeVoice"},{"type":"text","text":" is quite particular because in fact it contains "},{"code":"MultipleElevationCompositeRawTokens","type":"codeVoice"},{"type":"text","text":" (i.e. raw tokens) instead of semantic tokens."},{"type":"text","text":" "},{"type":"text","text":"In fact only the "},{"type":"emphasis","inlineContent":[{"text":"color","type":"text"}]},{"type":"text","text":" of the elevation effect vary depending to the color scheme,"},{"type":"text","text":" "},{"type":"text","text":"but in the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Figma"}]},{"type":"text","text":" kit this is composite raw tokens which are defined for ligh and dark mode as only one token."}]},{"name":"Since","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"0.8.0"}]}]}]}],"variants":[{"paths":["\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Semantic tokens which will wrap a combination of "},{"type":"codeVoice","code":"ElevationCompositeRawToken"},{"type":"text","text":" depending to color scheme (i.e. light mode or dark mode)"},{"type":"text","text":" "},{"type":"text","text":"Kind of composite token with multiple values, but not named “composite” because this word is already used in the design system."},{"type":"text","text":" "},{"type":"text","text":"Allows to gather the multiple-value tokens from "},{"type":"emphasis","inlineContent":[{"text":"Figma","type":"text"}]},{"type":"text","text":" inside one object."},{"type":"text","text":" "},{"type":"text","text":"If an elevation token exists with its value depending to the color scheme, it must be packed in such ``MultipleElevationCompositeRawTokens`"}],"references":{"ic_design_token_figma_semantic.png":{"type":"image","alt":null,"variants":[{"url":"\/images\/OUDSTokensSemantic\/ic_design_token_figma_semantic.png","traits":["1x","light"]}],"identifier":"ic_design_token_figma_semantic.png"},"doc://OUDSTokensSemantic/s8SendableP":{"identifier":"doc:\/\/OUDSTokensSemantic\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://OUDSTokensSemantic/objc(pl)NSObject":{"title":"ObjectiveC.NSObjectProtocol","type":"unresolvable","identifier":"doc:\/\/OUDSTokensSemantic\/objc(pl)NSObject"},"doc://OUDSTokensSemantic/objc(cs)NSObject":{"identifier":"doc:\/\/OUDSTokensSemantic\/objc(cs)NSObject","title":"ObjectiveC.NSObject","type":"unresolvable"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/elevation(for:)":{"kind":"symbol","abstract":[{"text":"Returns the right elevation according to the ","type":"text"},{"type":"codeVoice","code":"colorScheme"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"elevation"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ColorScheme","preciseIdentifier":"s:7SwiftUI11ColorSchemeO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ElevationCompositeRawToken","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken"}],"type":"topic","url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/elevation(for:)","role":"symbol","title":"elevation(for:)","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/elevation(for:)"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/isEqual(_:)":{"title":"isEqual(_:)","url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/isequal(_:)","role":"symbol","abstract":[{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if ","type":"text"},{"code":"self","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"object","type":"codeVoice"},{"text":" has the same ","type":"text"},{"code":"light","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"dark","type":"codeVoice"},{"text":" values and with ","type":"text"},{"code":"object","type":"codeVoice"},{"text":" ","type":"text"},{"text":"as a ","type":"text"},{"code":"MultipleElevationCompositeRawTokens","type":"codeVoice"},{"text":". Otherwise returns ","type":"text"},{"code":"false","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"code":"isEqual","type":"codeVoice"},{"text":" override is preferred for ","type":"text"},{"code":"NSObject","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/isEqual(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isEqual","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","kind":"symbol"},"doc://OUDSTokensSemantic/s23CustomStringConvertibleP":{"identifier":"doc:\/\/OUDSTokensSemantic\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible","type":"unresolvable"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/dark":{"kind":"symbol","abstract":[{"type":"text","text":"For "},{"type":"strong","inlineContent":[{"text":"dark","type":"text"}]},{"type":"text","text":" mode scheme"}],"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"dark"},{"kind":"text","text":": "},{"preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken","kind":"typeIdentifier","text":"ElevationCompositeRawToken"}],"title":"dark","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/dark","role":"symbol","type":"topic","url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/dark"},"doc://OUDSTokensSemantic/s7CVarArgP":{"identifier":"doc:\/\/OUDSTokensSemantic\/s7CVarArgP","title":"Swift.CVarArg","type":"unresolvable"},"doc://OUDSTokensSemantic/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/OUDSTokensSemantic\/SQ"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens":{"url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens","kind":"symbol","title":"MultipleElevationCompositeRawTokens","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultipleElevationCompositeRawTokens","kind":"identifier"}],"navigatorTitle":[{"text":"MultipleElevationCompositeRawTokens","kind":"identifier"}],"abstract":[{"text":"Semantic tokens which will wrap a combination of ","type":"text"},{"code":"ElevationCompositeRawToken","type":"codeVoice"},{"text":" depending to color scheme (i.e. light mode or dark mode)","type":"text"},{"text":" ","type":"text"},{"text":"Kind of composite token with multiple values, but not named “composite” because this word is already used in the design system.","type":"text"},{"text":" ","type":"text"},{"text":"Allows to gather the multiple-value tokens from ","type":"text"},{"inlineContent":[{"type":"text","text":"Figma"}],"type":"emphasis"},{"text":" inside one object.","type":"text"},{"text":" ","type":"text"},{"text":"If an elevation token exists with its value depending to the color scheme, it must be packed in such ``MultipleElevationCompositeRawTokens`","type":"text"}],"role":"symbol","type":"topic"},"doc://OUDSTokensSemantic/SH":{"identifier":"doc:\/\/OUDSTokensSemantic\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://OUDSTokensSemantic/s28CustomDebugStringConvertibleP":{"title":"Swift.CustomDebugStringConvertible","type":"unresolvable","identifier":"doc:\/\/OUDSTokensSemantic\/s28CustomDebugStringConvertibleP"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/init(light:dark:)":{"title":"init(light:dark:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"light","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ElevationCompositeRawToken","kind":"typeIdentifier","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken"},{"text":", ","kind":"text"},{"text":"dark","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ElevationCompositeRawToken","kind":"typeIdentifier","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken"},{"text":")","kind":"text"}],"kind":"symbol","url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/init(light:dark:)","abstract":[{"text":"Initializes a new elevation composite raw token with two values","type":"text"}],"role":"symbol","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/init(light:dark:)","type":"topic"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic":{"images":[{"type":"icon","identifier":"ic_design_token_figma_semantic.png"}],"type":"topic","kind":"symbol","title":"OUDSTokensSemantic","url":"\/documentation\/oudstokenssemantic","abstract":[{"type":"text","text":"These "},{"type":"emphasis","inlineContent":[{"text":"tokens","type":"text"}]},{"type":"text","text":" can be used mainly for "},{"type":"emphasis","inlineContent":[{"type":"text","text":"component tokens"}]},{"type":"text","text":" to apply some style and configuration values ; today "},{"type":"emphasis","inlineContent":[{"text":"component tokens","type":"text"}]},{"type":"text","text":" or "},{"type":"emphasis","inlineContent":[{"type":"text","text":"components"}]},{"type":"text","text":" are not defined yet."},{"type":"text","text":" "},{"type":"text","text":"They can be seen as an high level of usage with functional meanings."}],"identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic","role":"collection"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/light":{"abstract":[{"type":"text","text":"For "},{"inlineContent":[{"type":"text","text":"light"}],"type":"strong"},{"type":"text","text":" mode scheme"}],"url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/light","kind":"symbol","type":"topic","role":"symbol","title":"light","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/light","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"light"},{"kind":"text","text":": "},{"preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken","kind":"typeIdentifier","text":"ElevationCompositeRawToken"}]},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/init(_:)":{"kind":"symbol","title":"init(_:)","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ElevationCompositeRawToken","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Initializes a new elevation composite raw token with the same value for light and dark modes"}],"url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/init(_:)","role":"symbol","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/init(_:)"}}}