{"sections":[],"abstract":[{"text":"Semantic tokens which will wrap a combination of ","type":"text"},{"code":"ElevationCompositeRawToken","type":"codeVoice"},{"text":" depending to color scheme (i.e. light mode or dark mode)","type":"text"},{"text":" ","type":"text"},{"text":"Kind of composite token with multiple values, but not named “composite” because this word is already used in the design system.","type":"text"},{"text":" ","type":"text"},{"text":"Allows to gather the multiple-value tokens from ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"Figma"}]},{"text":" inside one object.","type":"text"},{"text":" ","type":"text"},{"text":"If an elevation token exists with its value depending to the color scheme, it must be packed in such ``MultipleElevationCompositeRawTokens`","type":"text"}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/OUDSTokensSemantic\/objc(cs)NSObject"],"title":"Inherits From","type":"inheritsFrom"},{"kind":"relationships","identifiers":["doc:\/\/OUDSTokensSemantic\/objc(pl)NSObject","doc:\/\/OUDSTokensSemantic\/s7CVarArgP","doc:\/\/OUDSTokensSemantic\/s28CustomDebugStringConvertibleP","doc:\/\/OUDSTokensSemantic\/s23CustomStringConvertibleP","doc:\/\/OUDSTokensSemantic\/SQ","doc:\/\/OUDSTokensSemantic\/SH","doc:\/\/OUDSTokensSemantic\/s8SendableP"],"title":"Conforms To","type":"conformsTo"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultipleElevationCompositeRawTokens","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"codeListing","code":["        \/\/ Assuming in Figma with have a elevation semantic token elevationNone,","        \/\/ with values depending to color scheme. These values are defined as elevation raw tokens.","        let elevationBottom_0 = ElevationCompositeRawToken(x: elevationX0, y: elevationY0, blur: elevationBlur0, color: ColorRawTokens.colorOpacityBlack0)","        let elevationBottom_1_100 = ElevationCompositeRawToken(x: elevationX0, y: elevationY100, blur: elevationBlur200, color: ColorRawTokens.colorOpacityBlack100)","","        \/\/ Then the develoment team declares an \"higher\" level elevation semantic token","        \/\/ inside ElevationCompositeSemanticTokens protocol,","        \/\/ and defined inside OrangeTheme+ElevationCompositeSemanticTokens extension","        \/\/ ElevationCompositeSemanticToken is a typealias for MultipleElevationCompositeRawTokens to keep same grammar as design kit","        var elevationNone: ElevationCompositeSemanticToken {","            ElevationCompositeSemanticToken(light: elevationBottom_0, dark: elevationBottom_1_100)","        }","","        \/\/ If the same elevation is used whatever the color scheme is","        var elevationNone: ElevationCompositeSemanticToken {","            ElevationCompositeSemanticToken(elevationBottom_0)","        }"],"syntax":"swift"},{"type":"codeListing","code":["        \/\/ The theme exposes both generated elevation semantic tokens and \"crafted\" higher level elevation semantic tokens.","        \/\/ It is recommended to use the higher level version as it is less error-prone.","","        @Environment(\\.theme) var theme","        @Environment(\\.colorScheme) var colorScheme","","        \/\/ Given you want to apply the elevation token \"elevationRaised\"","        var body: some View {","            \/\/ Apply the token of elevation for the shadow effect without managing yourself the color scheme","            Rectangle()","                .shadow(elevation: theme.elevations.elevationRaised))","        }"],"syntax":"swift"},{"type":"codeListing","code":["    \/\/ Or get the token depending to the color scheme and do whatever you want with","    theme.elevations.elevationRaised.elevation(for: colorScheme)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"The case of this ","type":"text"},{"code":"MultipleElevationCompositeRawTokens","type":"codeVoice"},{"text":" is quite particular because in fact it contains ","type":"text"},{"code":"MultipleElevationCompositeRawTokens","type":"codeVoice"},{"text":" (i.e. raw tokens) instead of semantic tokens.","type":"text"},{"text":" ","type":"text"},{"text":"In fact only the ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"color"}]},{"text":" of the elevation effect vary depending to the color scheme,","type":"text"},{"text":" ","type":"text"},{"text":"but in the ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"Figma","type":"text"}]},{"text":" kit this is composite raw tokens which are defined for ligh and dark mode as only one token.","type":"text"}]},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"0.8.0","type":"text"}]}],"style":"note","name":"Since"}]}],"variants":[{"paths":["\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","metadata":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultipleElevationCompositeRawTokens","kind":"identifier"}],"modules":[{"name":"Tokens for semantics"}],"symbolKind":"class","externalID":"c:@M@OUDSTokensSemantic@objc(cs)MultipleElevationCompositeRawTokens","navigatorTitle":[{"text":"MultipleElevationCompositeRawTokens","kind":"identifier"}],"title":"MultipleElevationCompositeRawTokens","roleHeading":"Class","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic"]]},"topicSections":[{"identifiers":["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/init(_:)","doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/init(light:dark:)"],"generated":true,"title":"Initializers","anchor":"Initializers"},{"identifiers":["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/dark","doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/light"],"generated":true,"title":"Instance Properties","anchor":"Instance-Properties"},{"identifiers":["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/elevation(for:)","doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/isEqual(_:)"],"generated":true,"title":"Instance Methods","anchor":"Instance-Methods"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens","interfaceLanguage":"swift"},"references":{"doc://OUDSTokensSemantic/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/OUDSTokensSemantic\/SQ"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/elevation(for:)":{"title":"elevation(for:)","abstract":[{"text":"Returns the right elevation according to the ","type":"text"},{"type":"codeVoice","code":"colorScheme"},{"text":".","type":"text"}],"type":"topic","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/elevation(for:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"elevation","kind":"identifier"},{"text":"(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI11ColorSchemeO","text":"ColorScheme","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken","text":"ElevationCompositeRawToken","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/elevation(for:)"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens":{"kind":"symbol","url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens","navigatorTitle":[{"text":"MultipleElevationCompositeRawTokens","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultipleElevationCompositeRawTokens","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Semantic tokens which will wrap a combination of "},{"type":"codeVoice","code":"ElevationCompositeRawToken"},{"type":"text","text":" depending to color scheme (i.e. light mode or dark mode)"},{"type":"text","text":" "},{"type":"text","text":"Kind of composite token with multiple values, but not named “composite” because this word is already used in the design system."},{"type":"text","text":" "},{"type":"text","text":"Allows to gather the multiple-value tokens from "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Figma"}]},{"type":"text","text":" inside one object."},{"type":"text","text":" "},{"type":"text","text":"If an elevation token exists with its value depending to the color scheme, it must be packed in such ``MultipleElevationCompositeRawTokens`"}],"identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens","title":"MultipleElevationCompositeRawTokens","role":"symbol"},"doc://OUDSTokensSemantic/objc(pl)NSObject":{"type":"unresolvable","title":"ObjectiveC.NSObjectProtocol","identifier":"doc:\/\/OUDSTokensSemantic\/objc(pl)NSObject"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/isEqual(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isEqual","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"isEqual(_:)","kind":"symbol","type":"topic","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/isEqual(_:)","role":"symbol","abstract":[{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if ","type":"text"},{"code":"self","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"object","type":"codeVoice"},{"text":" has the same ","type":"text"},{"code":"light","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"dark","type":"codeVoice"},{"text":" values and with ","type":"text"},{"code":"object","type":"codeVoice"},{"text":" ","type":"text"},{"text":"as a ","type":"text"},{"code":"MultipleElevationCompositeRawTokens","type":"codeVoice"},{"text":". Otherwise returns ","type":"text"},{"code":"false","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"code":"isEqual","type":"codeVoice"},{"text":" override is preferred for ","type":"text"},{"code":"NSObject","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/isequal(_:)"},"doc://OUDSTokensSemantic/s28CustomDebugStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomDebugStringConvertible","identifier":"doc:\/\/OUDSTokensSemantic\/s28CustomDebugStringConvertibleP"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic":{"kind":"symbol","url":"\/documentation\/oudstokenssemantic","type":"topic","title":"Tokens for semantics","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic","abstract":[{"text":"These ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"tokens"}]},{"text":" can be used mainly for ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"component tokens"}]},{"text":" to apply some style and configuration values ; today ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"component tokens","type":"text"}]},{"text":" or ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"components","type":"text"}]},{"text":" are not defined yet.","type":"text"},{"text":" ","type":"text"},{"text":"They can be seen as an high level of usage with functional meanings.","type":"text"}],"role":"collection","images":[{"identifier":"ic_design_token_figma_semantic.svg","type":"icon"}]},"doc://OUDSTokensSemantic/s23CustomStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomStringConvertible","identifier":"doc:\/\/OUDSTokensSemantic\/s23CustomStringConvertibleP"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/dark":{"abstract":[{"text":"For ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"dark"}]},{"text":" mode scheme","type":"text"}],"title":"dark","role":"symbol","kind":"symbol","url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/dark","type":"topic","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/dark","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dark","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ElevationCompositeRawToken","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken","kind":"typeIdentifier"}]},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/init(_:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken","text":"ElevationCompositeRawToken"},{"kind":"text","text":")"}],"url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/init(_:)","role":"symbol","kind":"symbol","type":"topic","title":"init(_:)","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/init(_:)","abstract":[{"type":"text","text":"Initializes a new elevation composite raw token with the same value for light and dark modes"}]},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/light":{"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/light","url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/light","title":"light","abstract":[{"text":"For ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"light"}]},{"text":" mode scheme","type":"text"}],"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"light"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ElevationCompositeRawToken","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken"}]},"doc://OUDSTokensSemantic/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/OUDSTokensSemantic\/s8SendableP"},"doc://OUDSTokensSemantic/s7CVarArgP":{"type":"unresolvable","title":"Swift.CVarArg","identifier":"doc:\/\/OUDSTokensSemantic\/s7CVarArgP"},"ic_design_token_figma_semantic.svg":{"alt":null,"variants":[{"url":"\/images\/OUDSTokensSemantic\/ic_design_token_figma_semantic.svg","traits":["1x","light"]}],"type":"image","identifier":"ic_design_token_figma_semantic.svg"},"doc://OUDSTokensSemantic/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/OUDSTokensSemantic\/SH"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/init(light:dark:)":{"abstract":[{"text":"Initializes a new elevation composite raw token with two values","type":"text"}],"title":"init(light:dark:)","kind":"symbol","url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/init(light:dark:)","type":"topic","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/init(light:dark:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"light"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ElevationCompositeRawToken","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken"},{"kind":"text","text":", "},{"kind":"externalParam","text":"dark"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ElevationCompositeRawToken","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken"},{"kind":"text","text":")"}],"role":"symbol"},"doc://OUDSTokensSemantic/objc(cs)NSObject":{"type":"unresolvable","title":"ObjectiveC.NSObject","identifier":"doc:\/\/OUDSTokensSemantic\/objc(cs)NSObject"}}}