{"abstract":[{"text":"Semantic tokens which will wrap a combination of ","type":"text"},{"code":"ElevationCompositeRawToken","type":"codeVoice"},{"text":" depending to color scheme (i.e. light mode or dark mode)","type":"text"},{"text":" ","type":"text"},{"text":"Kind of composite token with multiple values, but not named “composite” because this word is already used in the design system.","type":"text"},{"text":" ","type":"text"},{"text":"Allows to gather the multiple-value tokens from ","type":"text"},{"inlineContent":[{"text":"Figma","type":"text"}],"type":"emphasis"},{"text":" inside one object.","type":"text"},{"text":" ","type":"text"},{"text":"If an elevation token exists with its value depending to the color scheme, it must be packed in such ``MultipleElevationCompositeRawTokens`","type":"text"}],"identifier":{"url":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultipleElevationCompositeRawTokens","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"type":"codeListing","syntax":"swift","code":["        \/\/ Assuming in Figma with have a elevation semantic token elevationNone,","        \/\/ with values depending to color scheme. These values are defined as elevation raw tokens.","        let elevationBottom_0 = ElevationCompositeRawToken(x: elevationX0, y: elevationY0, blur: elevationBlur0, color: ColorRawTokens.colorOpacityBlack0)","        let elevationBottom_1_100 = ElevationCompositeRawToken(x: elevationX0, y: elevationY100, blur: elevationBlur200, color: ColorRawTokens.colorOpacityBlack100)","","        \/\/ Then the develoment team declares an \"higher\" level elevation semantic token","        \/\/ inside ElevationCompositeSemanticTokens protocol,","        \/\/ and defined inside OrangeTheme+ElevationCompositeSemanticTokens extension","        \/\/ ElevationCompositeSemanticToken is a typealias for MultipleElevationCompositeRawTokens to keep same grammar as design kit","        var elevationNone: ElevationCompositeSemanticToken {","            ElevationCompositeSemanticToken(light: elevationBottom_0, dark: elevationBottom_1_100)","        }","","        \/\/ If the same elevation is used whatever the color scheme is","        var elevationNone: ElevationCompositeSemanticToken {","            ElevationCompositeSemanticToken(elevationBottom_0)","        }"]},{"type":"codeListing","syntax":"swift","code":["        \/\/ The theme exposes both generated elevation semantic tokens and \"crafted\" higher level elevation semantic tokens.","        \/\/ It is recommended to use the higher level version as it is less error-prone.","","        @Environment(\\.theme) var theme","        @Environment(\\.colorScheme) var colorScheme","","        \/\/ Given you want to apply the elevation token \"elevationRaised\"","        var body: some View {","            \/\/ Apply the token of elevation for the shadow effect without managing yourself the color scheme","            Rectangle()","                .shadow(elevation: theme.elevations.elevationRaised))","        }"]},{"type":"codeListing","syntax":"swift","code":["    \/\/ Or get the token depending to the color scheme and do whatever you want with","    theme.elevations.elevationRaised.elevation(for: colorScheme)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The case of this "},{"type":"codeVoice","code":"MultipleElevationCompositeRawTokens"},{"type":"text","text":" is quite particular because in fact it contains "},{"type":"codeVoice","code":"MultipleElevationCompositeRawTokens"},{"type":"text","text":" (i.e. raw tokens) instead of semantic tokens."},{"type":"text","text":" "},{"type":"text","text":"In fact only the "},{"type":"emphasis","inlineContent":[{"text":"color","type":"text"}]},{"type":"text","text":" of the elevation effect vary depending to the color scheme,"},{"type":"text","text":" "},{"type":"text","text":"but in the "},{"type":"emphasis","inlineContent":[{"text":"Figma","type":"text"}]},{"type":"text","text":" kit this is composite raw tokens which are defined for ligh and dark mode as only one token."}]},{"type":"aside","style":"note","name":"Since","content":[{"type":"paragraph","inlineContent":[{"text":"0.8.0","type":"text"}]}]}]}],"sections":[],"topicSections":[{"identifiers":["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/init(_:)","doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/init(light:dark:)"],"generated":true,"anchor":"Initializers","title":"Initializers"},{"identifiers":["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/dark","doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/light"],"generated":true,"anchor":"Instance-Properties","title":"Instance Properties"},{"identifiers":["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/elevation(for:)","doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/isEqual(_:)"],"generated":true,"anchor":"Instance-Methods","title":"Instance Methods"}],"relationshipsSections":[{"identifiers":["doc:\/\/OUDSTokensSemantic\/objc(cs)NSObject"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/OUDSTokensSemantic\/objc(pl)NSObject","doc:\/\/OUDSTokensSemantic\/s7CVarArgP","doc:\/\/OUDSTokensSemantic\/s28CustomDebugStringConvertibleP","doc:\/\/OUDSTokensSemantic\/s23CustomStringConvertibleP","doc:\/\/OUDSTokensSemantic\/SQ","doc:\/\/OUDSTokensSemantic\/SH","doc:\/\/OUDSTokensSemantic\/s8SendableP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic"]]},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"title":"MultipleElevationCompositeRawTokens","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultipleElevationCompositeRawTokens","kind":"identifier"}],"navigatorTitle":[{"text":"MultipleElevationCompositeRawTokens","kind":"identifier"}],"role":"symbol","symbolKind":"class","modules":[{"name":"OUDSTokensSemantic"}],"externalID":"c:@M@OUDSTokensSemantic@objc(cs)MultipleElevationCompositeRawTokens","roleHeading":"Class"},"references":{"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic":{"title":"OUDSTokensSemantic","url":"\/documentation\/oudstokenssemantic","abstract":[{"text":"These ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"tokens","type":"text"}]},{"text":" can be used mainly for ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"component tokens","type":"text"}]},{"text":" to apply some style and configuration values ; today ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"component tokens"}]},{"text":" or ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"components"}]},{"text":" are not defined yet.","type":"text"},{"text":" ","type":"text"},{"text":"They can be seen as an high level of usage with functional meanings.","type":"text"}],"identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic","images":[{"identifier":"ic_design_token_figma_sem.svg","type":"card"},{"identifier":"ic_design_token_figma_sem.svg","type":"icon"}],"role":"collection","kind":"symbol","type":"topic"},"doc://OUDSTokensSemantic/objc(cs)NSObject":{"type":"unresolvable","identifier":"doc:\/\/OUDSTokensSemantic\/objc(cs)NSObject","title":"ObjectiveC.NSObject"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens":{"url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MultipleElevationCompositeRawTokens"}],"kind":"symbol","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens","role":"symbol","type":"topic","title":"MultipleElevationCompositeRawTokens","navigatorTitle":[{"kind":"identifier","text":"MultipleElevationCompositeRawTokens"}],"abstract":[{"text":"Semantic tokens which will wrap a combination of ","type":"text"},{"code":"ElevationCompositeRawToken","type":"codeVoice"},{"text":" depending to color scheme (i.e. light mode or dark mode)","type":"text"},{"text":" ","type":"text"},{"text":"Kind of composite token with multiple values, but not named “composite” because this word is already used in the design system.","type":"text"},{"text":" ","type":"text"},{"text":"Allows to gather the multiple-value tokens from ","type":"text"},{"inlineContent":[{"text":"Figma","type":"text"}],"type":"emphasis"},{"text":" inside one object.","type":"text"},{"text":" ","type":"text"},{"text":"If an elevation token exists with its value depending to the color scheme, it must be packed in such ``MultipleElevationCompositeRawTokens`","type":"text"}]},"doc://OUDSTokensSemantic/s23CustomStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/OUDSTokensSemantic\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/dark":{"type":"topic","url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/dark","title":"dark","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dark","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken","text":"ElevationCompositeRawToken","kind":"typeIdentifier"}],"identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/dark","abstract":[{"type":"text","text":"For "},{"inlineContent":[{"type":"text","text":"dark"}],"type":"strong"},{"type":"text","text":" mode scheme"}],"kind":"symbol"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/light":{"role":"symbol","abstract":[{"type":"text","text":"For "},{"type":"strong","inlineContent":[{"type":"text","text":"light"}]},{"type":"text","text":" mode scheme"}],"url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/light","kind":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"light"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ElevationCompositeRawToken","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken"}],"identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/light","title":"light","type":"topic"},"doc://OUDSTokensSemantic/SQ":{"type":"unresolvable","identifier":"doc:\/\/OUDSTokensSemantic\/SQ","title":"Swift.Equatable"},"doc://OUDSTokensSemantic/s7CVarArgP":{"type":"unresolvable","identifier":"doc:\/\/OUDSTokensSemantic\/s7CVarArgP","title":"Swift.CVarArg"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/elevation(for:)":{"type":"topic","role":"symbol","title":"elevation(for:)","url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/elevation(for:)","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/elevation(for:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"elevation"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI11ColorSchemeO","text":"ColorScheme"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken","text":"ElevationCompositeRawToken"}],"abstract":[{"type":"text","text":"Returns the right elevation according to the "},{"type":"codeVoice","code":"colorScheme"},{"type":"text","text":"."}]},"doc://OUDSTokensSemantic/SH":{"type":"unresolvable","identifier":"doc:\/\/OUDSTokensSemantic\/SH","title":"Swift.Hashable"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/isEqual(_:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isEqual","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if ","type":"text"},{"code":"self","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"object","type":"codeVoice"},{"text":" has the same ","type":"text"},{"code":"light","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"dark","type":"codeVoice"},{"text":" values and with ","type":"text"},{"code":"object","type":"codeVoice"},{"text":" ","type":"text"},{"text":"as a ","type":"text"},{"code":"MultipleElevationCompositeRawTokens","type":"codeVoice"},{"text":". Otherwise returns ","type":"text"},{"code":"false","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"code":"isEqual","type":"codeVoice"},{"text":" override is preferred for ","type":"text"},{"code":"NSObject","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/isequal(_:)","type":"topic","kind":"symbol","title":"isEqual(_:)","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/isEqual(_:)"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/init(light:dark:)":{"abstract":[{"text":"Initializes a new elevation composite raw token with two values","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"light","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ElevationCompositeRawToken","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"dark","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ElevationCompositeRawToken","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","title":"init(light:dark:)","kind":"symbol","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/init(light:dark:)","type":"topic","url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/init(light:dark:)"},"ic_design_token_figma_sem.svg":{"type":"image","identifier":"ic_design_token_figma_sem.svg","variants":[{"traits":["1x","light"],"url":"\/images\/OUDSTokensSemantic\/ic_design_token_figma_sem.svg"}],"alt":null},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/init(_:)":{"role":"symbol","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/init(_:)","url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/init(_:)","title":"init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken","text":"ElevationCompositeRawToken","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Initializes a new elevation composite raw token with the same value for light and dark modes"}]},"doc://OUDSTokensSemantic/s28CustomDebugStringConvertibleP":{"identifier":"doc:\/\/OUDSTokensSemantic\/s28CustomDebugStringConvertibleP","type":"unresolvable","title":"Swift.CustomDebugStringConvertible"},"doc://OUDSTokensSemantic/s8SendableP":{"identifier":"doc:\/\/OUDSTokensSemantic\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://OUDSTokensSemantic/objc(pl)NSObject":{"identifier":"doc:\/\/OUDSTokensSemantic\/objc(pl)NSObject","type":"unresolvable","title":"ObjectiveC.NSObjectProtocol"}}}