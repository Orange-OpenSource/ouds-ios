{"metadata":{"modules":[{"name":"OUDSTokensSemantic"}],"role":"symbol","symbolKind":"class","externalID":"c:@M@OUDSTokensSemantic@objc(cs)MultipleElevationCompositeRawTokens","title":"MultipleElevationCompositeRawTokens","roleHeading":"Class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MultipleElevationCompositeRawTokens"}],"navigatorTitle":[{"kind":"identifier","text":"MultipleElevationCompositeRawTokens"}]},"abstract":[{"type":"text","text":"Semantic tokens which will wrap a combination of "},{"type":"codeVoice","code":"ElevationCompositeRawToken"},{"type":"text","text":" depending to color scheme (i.e. light mode or dark mode)"},{"type":"text","text":" "},{"type":"text","text":"Kind of composite token with multiple values, but not named “composite” because this word is already used in the design system."},{"type":"text","text":" "},{"type":"text","text":"Allows to gather the multiple-value tokens from "},{"inlineContent":[{"type":"text","text":"Figma"}],"type":"emphasis"},{"type":"text","text":" inside one object."},{"type":"text","text":" "},{"type":"text","text":"If an elevation token exists with its value depending to the color scheme, it must be packed in such ``MultipleElevationCompositeRawTokens`"}],"variants":[{"paths":["\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic"]]},"identifier":{"url":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens","interfaceLanguage":"swift"},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/init(_:)","doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/init(light:dark:)"],"anchor":"Initializers","generated":true,"title":"Initializers"},{"identifiers":["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/dark","doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/light"],"anchor":"Instance-Properties","generated":true,"title":"Instance Properties"},{"identifiers":["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/elevation(for:)","doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/isEqual(_:)"],"anchor":"Instance-Methods","generated":true,"title":"Instance Methods"}],"relationshipsSections":[{"identifiers":["doc:\/\/OUDSTokensSemantic\/objc(cs)NSObject"],"kind":"relationships","type":"inheritsFrom","title":"Inherits From"},{"identifiers":["doc:\/\/OUDSTokensSemantic\/objc(pl)NSObject","doc:\/\/OUDSTokensSemantic\/s7CVarArgP","doc:\/\/OUDSTokensSemantic\/s28CustomDebugStringConvertibleP","doc:\/\/OUDSTokensSemantic\/s23CustomStringConvertibleP","doc:\/\/OUDSTokensSemantic\/SQ","doc:\/\/OUDSTokensSemantic\/SH","doc:\/\/OUDSTokensSemantic\/s8SendableP"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MultipleElevationCompositeRawTokens"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"codeListing","code":["        \/\/ Assuming in Figma with have a elevation semantic token elevationNone,","        \/\/ with values depending to color scheme. These values are defined as elevation raw tokens.","        let elevationBottom_0 = ElevationCompositeRawToken(x: elevationX0, y: elevationY0, blur: elevationBlur0, color: ColorRawTokens.colorOpacityBlack0)","        let elevationBottom_1_100 = ElevationCompositeRawToken(x: elevationX0, y: elevationY100, blur: elevationBlur200, color: ColorRawTokens.colorOpacityBlack100)","","        \/\/ Then the develoment team declares an \"higher\" level elevation semantic token","        \/\/ inside ElevationCompositeSemanticTokens protocol,","        \/\/ and defined inside OrangeTheme+ElevationCompositeSemanticTokens extension","        \/\/ ElevationCompositeSemanticToken is a typealias for MultipleElevationCompositeRawTokens to keep same grammar as design kit","        var elevationNone: ElevationCompositeSemanticToken {","            ElevationCompositeSemanticToken(light: elevationBottom_0, dark: elevationBottom_1_100)","        }","","        \/\/ If the same elevation is used whatever the color scheme is","        var elevationNone: ElevationCompositeSemanticToken {","            ElevationCompositeSemanticToken(elevationBottom_0)","        }"],"syntax":"swift"},{"type":"codeListing","code":["        \/\/ The theme exposes both generated elevation semantic tokens and \"crafted\" higher level elevation semantic tokens.","        \/\/ It is recommended to use the higher level version as it is less error-prone.","","        @Environment(\\.theme) var theme","        @Environment(\\.colorScheme) var colorScheme","","        \/\/ Given you want to apply the elevation token \"elevationRaised\"","        var body: some View {","            \/\/ Apply the token of elevation for the shadow effect without managing yourself the color scheme","            Rectangle()","                .shadow(elevation: theme.elevations.elevationRaised))","        }"],"syntax":"swift"},{"type":"codeListing","code":["    \/\/ Or get the token depending to the color scheme and do whatever you want with","    theme.elevations.elevationRaised.elevation(for: colorScheme)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The case of this "},{"type":"codeVoice","code":"MultipleElevationCompositeRawTokens"},{"type":"text","text":" is quite particular because in fact it contains "},{"type":"codeVoice","code":"MultipleElevationCompositeRawTokens"},{"type":"text","text":" (i.e. raw tokens) instead of semantic tokens."},{"type":"text","text":" "},{"type":"text","text":"In fact only the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"color"}]},{"type":"text","text":" of the elevation effect vary depending to the color scheme,"},{"type":"text","text":" "},{"type":"text","text":"but in the "},{"inlineContent":[{"text":"Figma","type":"text"}],"type":"emphasis"},{"text":" kit this is composite raw tokens which are defined for ligh and dark mode as only one token.","type":"text"}]},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":"0.8.0"}],"type":"paragraph"}],"style":"note","name":"Since"}]}],"references":{"doc://OUDSTokensSemantic/s8SendableP":{"identifier":"doc:\/\/OUDSTokensSemantic\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://OUDSTokensSemantic/objc(pl)NSObject":{"title":"ObjectiveC.NSObjectProtocol","type":"unresolvable","identifier":"doc:\/\/OUDSTokensSemantic\/objc(pl)NSObject"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/dark":{"title":"dark","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/dark","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dark","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ElevationCompositeRawToken","kind":"typeIdentifier","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken"}],"role":"symbol","abstract":[{"type":"text","text":"For "},{"type":"strong","inlineContent":[{"text":"dark","type":"text"}]},{"type":"text","text":" mode scheme"}],"url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/dark","kind":"symbol","type":"topic"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/light":{"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"light"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ElevationCompositeRawToken","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken"}],"abstract":[{"type":"text","text":"For "},{"type":"strong","inlineContent":[{"type":"text","text":"light"}]},{"type":"text","text":" mode scheme"}],"title":"light","type":"topic","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/light","kind":"symbol","url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/light","role":"symbol"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/init(light:dark:)":{"url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/init(light:dark:)","abstract":[{"type":"text","text":"Initializes a new elevation composite raw token with two values"}],"identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/init(light:dark:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"light","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken","text":"ElevationCompositeRawToken","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"dark","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken","text":"ElevationCompositeRawToken","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","role":"symbol","title":"init(light:dark:)","kind":"symbol"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/elevation(for:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"elevation"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI11ColorSchemeO","kind":"typeIdentifier","text":"ColorScheme"},{"kind":"text","text":") -> "},{"preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken","kind":"typeIdentifier","text":"ElevationCompositeRawToken"}],"abstract":[{"type":"text","text":"Returns the right elevation according to the "},{"type":"codeVoice","code":"colorScheme"},{"type":"text","text":"."}],"role":"symbol","title":"elevation(for:)","url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/elevation(for:)","type":"topic","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/elevation(for:)","kind":"symbol"},"doc://OUDSTokensSemantic/SH":{"type":"unresolvable","identifier":"doc:\/\/OUDSTokensSemantic\/SH","title":"Swift.Hashable"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/isEqual(_:)":{"role":"symbol","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/isEqual(_:)","url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/isequal(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isEqual","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"isEqual(_:)","abstract":[{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if ","type":"text"},{"code":"self","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"object","type":"codeVoice"},{"text":" has the same ","type":"text"},{"code":"light","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"dark","type":"codeVoice"},{"text":" values and with ","type":"text"},{"code":"object","type":"codeVoice"},{"text":" ","type":"text"},{"text":"as a ","type":"text"},{"code":"MultipleElevationCompositeRawTokens","type":"codeVoice"},{"text":". Otherwise returns ","type":"text"},{"code":"false","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"code":"isEqual","type":"codeVoice"},{"text":" override is preferred for ","type":"text"},{"code":"NSObject","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol"},"doc://OUDSTokensSemantic/SQ":{"type":"unresolvable","identifier":"doc:\/\/OUDSTokensSemantic\/SQ","title":"Swift.Equatable"},"doc://OUDSTokensSemantic/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","type":"unresolvable","identifier":"doc:\/\/OUDSTokensSemantic\/s23CustomStringConvertibleP"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens":{"navigatorTitle":[{"text":"MultipleElevationCompositeRawTokens","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultipleElevationCompositeRawTokens","kind":"identifier"}],"title":"MultipleElevationCompositeRawTokens","kind":"symbol","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens","abstract":[{"type":"text","text":"Semantic tokens which will wrap a combination of "},{"code":"ElevationCompositeRawToken","type":"codeVoice"},{"type":"text","text":" depending to color scheme (i.e. light mode or dark mode)"},{"type":"text","text":" "},{"type":"text","text":"Kind of composite token with multiple values, but not named “composite” because this word is already used in the design system."},{"type":"text","text":" "},{"type":"text","text":"Allows to gather the multiple-value tokens from "},{"type":"emphasis","inlineContent":[{"text":"Figma","type":"text"}]},{"type":"text","text":" inside one object."},{"type":"text","text":" "},{"type":"text","text":"If an elevation token exists with its value depending to the color scheme, it must be packed in such ``MultipleElevationCompositeRawTokens`"}],"type":"topic","role":"symbol","url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/init(_:)":{"identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken","text":"ElevationCompositeRawToken","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Initializes a new elevation composite raw token with the same value for light and dark modes","type":"text"}],"url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/init(_:)","title":"init(_:)","kind":"symbol","role":"symbol","type":"topic"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic":{"type":"topic","abstract":[{"type":"text","text":"These "},{"type":"emphasis","inlineContent":[{"type":"text","text":"tokens"}]},{"type":"text","text":" can be used mainly for "},{"type":"emphasis","inlineContent":[{"type":"text","text":"component tokens"}]},{"type":"text","text":" to apply some style and configuration values ; today "},{"type":"emphasis","inlineContent":[{"text":"component tokens","type":"text"}]},{"type":"text","text":" or "},{"type":"emphasis","inlineContent":[{"text":"components","type":"text"}]},{"type":"text","text":" are not defined yet."},{"type":"text","text":" "},{"type":"text","text":"They can be seen as an high level of usage with functional meanings."}],"role":"collection","kind":"symbol","url":"\/documentation\/oudstokenssemantic","title":"OUDSTokensSemantic","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic"},"doc://OUDSTokensSemantic/s7CVarArgP":{"type":"unresolvable","identifier":"doc:\/\/OUDSTokensSemantic\/s7CVarArgP","title":"Swift.CVarArg"},"doc://OUDSTokensSemantic/objc(cs)NSObject":{"title":"ObjectiveC.NSObject","type":"unresolvable","identifier":"doc:\/\/OUDSTokensSemantic\/objc(cs)NSObject"},"doc://OUDSTokensSemantic/s28CustomDebugStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/OUDSTokensSemantic\/s28CustomDebugStringConvertibleP","title":"Swift.CustomDebugStringConvertible"}}}