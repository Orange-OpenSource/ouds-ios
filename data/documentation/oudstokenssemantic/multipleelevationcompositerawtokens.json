{"relationshipsSections":[{"kind":"relationships","type":"inheritsFrom","identifiers":["doc:\/\/OUDSTokensSemantic\/objc(cs)NSObject"],"title":"Inherits From"},{"kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/OUDSTokensSemantic\/objc(pl)NSObject","doc:\/\/OUDSTokensSemantic\/s7CVarArgP","doc:\/\/OUDSTokensSemantic\/s28CustomDebugStringConvertibleP","doc:\/\/OUDSTokensSemantic\/s23CustomStringConvertibleP","doc:\/\/OUDSTokensSemantic\/SQ","doc:\/\/OUDSTokensSemantic\/SH","doc:\/\/OUDSTokensSemantic\/s8SendableP","doc:\/\/OUDSTokensSemantic\/s16SendableMetatypeP"],"title":"Conforms To"}],"metadata":{"role":"symbol","roleHeading":"Class","externalID":"c:@M@OUDSTokensSemantic@objc(cs)MultipleElevationCompositeRawTokens","symbolKind":"class","title":"MultipleElevationCompositeRawTokens","navigatorTitle":[{"text":"MultipleElevationCompositeRawTokens","kind":"identifier"}],"modules":[{"name":"Tokens for semantics"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultipleElevationCompositeRawTokens","kind":"identifier"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Semantic tokens which will wrap a combination of ","type":"text"},{"type":"codeVoice","code":"ElevationCompositeRawToken"},{"text":" depending to color scheme (i.e. light mode or dark mode)","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Kind of composite token with multiple values, but not named “composite” because this word is already used in the design system."},{"type":"text","text":" "},{"type":"text","text":"Allows to gather the multiple-value tokens from "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Figma"}]},{"type":"text","text":" inside one object."},{"type":"text","text":" "},{"type":"text","text":"If an elevation token exists with its value depending to the color scheme, it must be packed in such ``MultipleElevationCompositeRawTokens`"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens"]}],"topicSections":[{"anchor":"Initializers","identifiers":["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/init(_:)","doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/init(light:dark:)"],"title":"Initializers","generated":true},{"anchor":"Instance-Properties","identifiers":["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/dark","doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/light"],"title":"Instance Properties","generated":true},{"anchor":"Instance-Methods","identifiers":["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/elevation(for:)","doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/isEqual(_:)"],"title":"Instance Methods","generated":true}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultipleElevationCompositeRawTokens","kind":"identifier"}]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"syntax":"swift","code":["        \/\/ Assuming in Figma with have a elevation semantic token elevationNone,","        \/\/ with values depending to color scheme. These values are defined as elevation raw tokens.","        let elevationBottom_0 = ElevationCompositeRawToken(x: elevationX0, y: elevationY0, blur: elevationBlur0, color: ColorRawTokens.colorOpacityBlack0)","        let elevationBottom_1_100 = ElevationCompositeRawToken(x: elevationX0, y: elevationY100, blur: elevationBlur200, color: ColorRawTokens.colorOpacityBlack100)","","        \/\/ Then the develoment team declares an \"higher\" level elevation semantic token","        \/\/ inside ElevationCompositeSemanticTokens protocol,","        \/\/ and defined inside OrangeTheme+ElevationCompositeSemanticTokens extension","        \/\/ ElevationCompositeSemanticToken is a typealias for MultipleElevationCompositeRawTokens to keep same grammar as design kit","        var elevationNone: ElevationCompositeSemanticToken {","            ElevationCompositeSemanticToken(light: elevationBottom_0, dark: elevationBottom_1_100)","        }","","        \/\/ If the same elevation is used whatever the color scheme is","        var elevationNone: ElevationCompositeSemanticToken {","            ElevationCompositeSemanticToken(elevationBottom_0)","        }"],"type":"codeListing"},{"syntax":"swift","code":["        \/\/ The theme exposes both generated elevation semantic tokens and \"crafted\" higher level elevation semantic tokens.","        \/\/ It is recommended to use the higher level version as it is less error-prone.","","        @Environment(\\.theme) var theme","        @Environment(\\.colorScheme) var colorScheme","","        \/\/ Given you want to apply the elevation token \"elevationRaised\"","        var body: some View {","            \/\/ Apply the token of elevation for the shadow effect without managing yourself the color scheme","            Rectangle()","                .shadow(elevation: theme.elevations.elevationRaised))","        }"],"type":"codeListing"},{"syntax":"swift","code":["    \/\/ Or get the token depending to the color scheme and do whatever you want with","    theme.elevations.elevationRaised.elevation(for: colorScheme)"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"The case of this ","type":"text"},{"type":"codeVoice","code":"MultipleElevationCompositeRawTokens"},{"text":" is quite particular because in fact it contains ","type":"text"},{"type":"codeVoice","code":"MultipleElevationCompositeRawTokens"},{"text":" (i.e. raw tokens) instead of semantic tokens.","type":"text"},{"text":" ","type":"text"},{"text":"In fact only the ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"color","type":"text"}]},{"text":" of the elevation effect vary depending to the color scheme,","type":"text"},{"text":" ","type":"text"},{"text":"but in the ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"Figma","type":"text"}]},{"type":"text","text":" kit this is composite raw tokens which are defined for ligh and dark mode as only one token."}]},{"content":[{"inlineContent":[{"type":"text","text":"0.8.0"}],"type":"paragraph"}],"type":"aside","name":"Since","style":"note"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic"]]},"identifier":{"url":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens","interfaceLanguage":"swift"},"references":{"doc://OUDSTokensSemantic/SQ":{"type":"unresolvable","identifier":"doc:\/\/OUDSTokensSemantic\/SQ","title":"Swift.Equatable"},"doc://OUDSTokensSemantic/SH":{"title":"Swift.Hashable","type":"unresolvable","identifier":"doc:\/\/OUDSTokensSemantic\/SH"},"doc://OUDSTokensSemantic/s16SendableMetatypeP":{"type":"unresolvable","identifier":"doc:\/\/OUDSTokensSemantic\/s16SendableMetatypeP","title":"Swift.SendableMetatype"},"doc://OUDSTokensSemantic/s7CVarArgP":{"title":"Swift.CVarArg","type":"unresolvable","identifier":"doc:\/\/OUDSTokensSemantic\/s7CVarArgP"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/init(_:)":{"title":"init(_:)","kind":"symbol","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/init(_:)","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ElevationCompositeRawToken","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Initializes a new elevation composite raw token with the same value for light and dark modes","type":"text"}],"role":"symbol","url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/init(_:)"},"ic_design_token_figma_semantic.png":{"alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/OUDSTokensSemantic\/ic_design_token_figma_semantic.png"}],"type":"image","identifier":"ic_design_token_figma_semantic.png"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens":{"navigatorTitle":[{"kind":"identifier","text":"MultipleElevationCompositeRawTokens"}],"kind":"symbol","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens","abstract":[{"text":"Semantic tokens which will wrap a combination of ","type":"text"},{"type":"codeVoice","code":"ElevationCompositeRawToken"},{"text":" depending to color scheme (i.e. light mode or dark mode)","type":"text"},{"text":" ","type":"text"},{"text":"Kind of composite token with multiple values, but not named “composite” because this word is already used in the design system.","type":"text"},{"text":" ","type":"text"},{"text":"Allows to gather the multiple-value tokens from ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"Figma"}]},{"text":" inside one object.","type":"text"},{"text":" ","type":"text"},{"text":"If an elevation token exists with its value depending to the color scheme, it must be packed in such ``MultipleElevationCompositeRawTokens`","type":"text"}],"type":"topic","title":"MultipleElevationCompositeRawTokens","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MultipleElevationCompositeRawTokens"}],"url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens"},"doc://OUDSTokensSemantic/s23CustomStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/OUDSTokensSemantic\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/elevation(for:)":{"title":"elevation(for:)","abstract":[{"type":"text","text":"Returns the right elevation according to the "},{"type":"codeVoice","code":"colorScheme"},{"type":"text","text":"."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"elevation","kind":"identifier"},{"text":"(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI11ColorSchemeO","text":"ColorScheme","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken","text":"ElevationCompositeRawToken","kind":"typeIdentifier"}],"role":"symbol","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/elevation(for:)","type":"topic","url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/elevation(for:)","kind":"symbol"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/isEqual(_:)":{"identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/isEqual(_:)","title":"isEqual(_:)","type":"topic","url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/isequal(_:)","abstract":[{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if ","type":"text"},{"code":"self","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"object","type":"codeVoice"},{"text":" has the same ","type":"text"},{"code":"light","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"dark","type":"codeVoice"},{"text":" values and with ","type":"text"},{"type":"codeVoice","code":"object"},{"text":" ","type":"text"},{"text":"as a ","type":"text"},{"type":"codeVoice","code":"MultipleElevationCompositeRawTokens"},{"text":". Otherwise returns ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"isEqual"},{"text":" override is preferred for ","type":"text"},{"type":"codeVoice","code":"NSObject"},{"text":".","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isEqual","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol"},"doc://OUDSTokensSemantic/objc(cs)NSObject":{"type":"unresolvable","identifier":"doc:\/\/OUDSTokensSemantic\/objc(cs)NSObject","title":"ObjectiveC.NSObject"},"doc://OUDSTokensSemantic/objc(pl)NSObject":{"title":"ObjectiveC.NSObjectProtocol","type":"unresolvable","identifier":"doc:\/\/OUDSTokensSemantic\/objc(pl)NSObject"},"doc://OUDSTokensSemantic/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/OUDSTokensSemantic\/s8SendableP","title":"Swift.Sendable"},"doc://OUDSTokensSemantic/s28CustomDebugStringConvertibleP":{"title":"Swift.CustomDebugStringConvertible","type":"unresolvable","identifier":"doc:\/\/OUDSTokensSemantic\/s28CustomDebugStringConvertibleP"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/init(light:dark:)":{"kind":"symbol","abstract":[{"text":"Initializes a new elevation composite raw token with two values","type":"text"}],"role":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"light","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ElevationCompositeRawToken","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"dark","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ElevationCompositeRawToken","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(light:dark:)","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/init(light:dark:)","url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/init(light:dark:)"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/dark":{"type":"topic","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dark","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ElevationCompositeRawToken","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken","kind":"typeIdentifier"}],"abstract":[{"text":"For ","type":"text"},{"inlineContent":[{"type":"text","text":"dark"}],"type":"strong"},{"text":" mode scheme","type":"text"}],"url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/dark","kind":"symbol","title":"dark","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/dark","role":"symbol"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic":{"abstract":[{"text":"These ","type":"text"},{"inlineContent":[{"type":"text","text":"tokens"}],"type":"emphasis"},{"text":" can be used mainly for ","type":"text"},{"inlineContent":[{"text":"component tokens","type":"text"}],"type":"emphasis"},{"text":" to apply some style and configuration values ; today ","type":"text"},{"inlineContent":[{"text":"component tokens","type":"text"}],"type":"emphasis"},{"text":" or ","type":"text"},{"inlineContent":[{"type":"text","text":"components"}],"type":"emphasis"},{"text":" are not defined yet.","type":"text"},{"text":" ","type":"text"},{"text":"They can be seen as an high level of usage with functional meanings.","type":"text"}],"role":"collection","title":"Tokens for semantics","url":"\/documentation\/oudstokenssemantic","kind":"symbol","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic","type":"topic","images":[{"identifier":"ic_design_token_figma_semantic.png","type":"icon"}]},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/light":{"abstract":[{"text":"For ","type":"text"},{"inlineContent":[{"type":"text","text":"light"}],"type":"strong"},{"text":" mode scheme","type":"text"}],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"light","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ElevationCompositeRawToken","preciseIdentifier":"c:@M@OUDSTokensRaw@objc(cs)ElevationCompositeRawToken","kind":"typeIdentifier"}],"identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/light","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/light","title":"light"}}}