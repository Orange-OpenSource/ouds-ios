{"kind":"symbol","metadata":{"role":"symbol","externalID":"c:@M@OUDSTokensSemantic@objc(cs)MultipleElevationCompositeRawTokens(im)isEqual:","title":"isEqual(_:)","modules":[{"name":"Tokens for semantics"}],"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isEqual"},{"kind":"text","text":"("},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?) -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic","doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens"]]},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/isequal(_:)"]}],"identifier":{"url":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/isEqual(_:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"override","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isEqual","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"object","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]}],"kind":"declarations"}],"abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if "},{"type":"codeVoice","code":"self"},{"type":"text","text":" and "},{"type":"codeVoice","code":"object"},{"type":"text","text":" has the same "},{"type":"codeVoice","code":"light"},{"type":"text","text":" and "},{"type":"codeVoice","code":"dark"},{"type":"text","text":" values and with "},{"type":"codeVoice","code":"object"},{"type":"text","text":" "},{"type":"text","text":"as a "},{"type":"codeVoice","code":"MultipleElevationCompositeRawTokens"},{"type":"text","text":". Otherwise returns "},{"type":"codeVoice","code":"false"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"codeVoice","code":"isEqual"},{"type":"text","text":" override is preferred for "},{"type":"codeVoice","code":"NSObject"},{"type":"text","text":"."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic":{"url":"\/documentation\/oudstokenssemantic","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"These "},{"type":"emphasis","inlineContent":[{"type":"text","text":"tokens"}]},{"type":"text","text":" can be used mainly for "},{"type":"emphasis","inlineContent":[{"type":"text","text":"component tokens"}]},{"type":"text","text":" to apply some style and configuration values ; today "},{"type":"emphasis","inlineContent":[{"type":"text","text":"component tokens"}]},{"type":"text","text":" or "},{"type":"emphasis","inlineContent":[{"text":"components","type":"text"}]},{"type":"text","text":" are not defined yet."},{"type":"text","text":" "},{"type":"text","text":"They can be seen as an high level of usage with functional meanings."}],"type":"topic","title":"Tokens for semantics","images":[{"identifier":"ic_design_token_figma_semantic.svg","type":"icon"}],"identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic"},"ic_design_token_figma_semantic.svg":{"identifier":"ic_design_token_figma_semantic.svg","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/OUDSTokensSemantic\/ic_design_token_figma_semantic.svg"}],"alt":null},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens":{"navigatorTitle":[{"kind":"identifier","text":"MultipleElevationCompositeRawTokens"}],"abstract":[{"type":"text","text":"Semantic tokens which will wrap a combination of "},{"type":"codeVoice","code":"ElevationCompositeRawToken"},{"type":"text","text":" depending to color scheme (i.e. light mode or dark mode)"},{"type":"text","text":" "},{"type":"text","text":"Kind of composite token with multiple values, but not named “composite” because this word is already used in the design system."},{"type":"text","text":" "},{"type":"text","text":"Allows to gather the multiple-value tokens from "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Figma"}]},{"type":"text","text":" inside one object."},{"type":"text","text":" "},{"type":"text","text":"If an elevation token exists with its value depending to the color scheme, it must be packed in such ``MultipleElevationCompositeRawTokens`"}],"title":"MultipleElevationCompositeRawTokens","kind":"symbol","type":"topic","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MultipleElevationCompositeRawTokens"}],"url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens","role":"symbol"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleElevationCompositeRawTokens/isEqual(_:)":{"url":"\/documentation\/oudstokenssemantic\/multipleelevationcompositerawtokens\/isequal(_:)","type":"topic","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleElevationCompositeRawTokens\/isEqual(_:)","title":"isEqual(_:)","abstract":[{"type":"text","text":"Returns "},{"code":"true","type":"codeVoice"},{"type":"text","text":" if "},{"code":"self","type":"codeVoice"},{"type":"text","text":" and "},{"code":"object","type":"codeVoice"},{"type":"text","text":" has the same "},{"code":"light","type":"codeVoice"},{"type":"text","text":" and "},{"code":"dark","type":"codeVoice"},{"type":"text","text":" values and with "},{"code":"object","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"as a "},{"code":"MultipleElevationCompositeRawTokens","type":"codeVoice"},{"type":"text","text":". Otherwise returns "},{"code":"false","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"code":"isEqual","type":"codeVoice"},{"type":"text","text":" override is preferred for "},{"code":"NSObject","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isEqual"},{"kind":"text","text":"("},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]}}}