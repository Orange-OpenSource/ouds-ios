{"abstract":[{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if ","type":"text"},{"code":"self","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"object","type":"codeVoice"},{"text":" has the same ","type":"text"},{"code":"compact","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"regular","type":"codeVoice"},{"text":" values and with ","type":"text"},{"code":"object","type":"codeVoice"},{"text":" ","type":"text"},{"text":"as a ","type":"text"},{"code":"MultipleSpaceSemanticTokens","type":"codeVoice"},{"text":". Otherwise returns ","type":"text"},{"code":"false","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"code":"isEqual","type":"codeVoice"},{"text":" override is preferred for ","type":"text"},{"code":"NSObject","type":"codeVoice"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic","doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleSpaceSemanticTokens"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"override","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isEqual","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"object","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"platforms":["macOS"],"languages":["swift"]}]}],"variants":[{"paths":["\/documentation\/oudstokenssemantic\/multiplespacesemantictokens\/isequal(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleSpaceSemanticTokens\/isEqual(_:)"},"metadata":{"modules":[{"name":"OUDSTokensSemantic"}],"externalID":"c:@M@OUDSTokensSemantic@objc(cs)MultipleSpaceSemanticTokens(im)isEqual:","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isEqual","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"roleHeading":"Instance Method","symbolKind":"method","role":"symbol","title":"isEqual(_:)"},"references":{"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleSpaceSemanticTokens":{"url":"\/documentation\/oudstokenssemantic\/multiplespacesemantictokens","abstract":[{"type":"text","text":"Kind of semantic tokens which will wrap a combination of "},{"type":"codeVoice","code":"DimensionRawToken"},{"type":"text","text":" depending to size classes."},{"type":"text","text":" "},{"type":"text","text":"Kind of composite token with multiple values, but not named “composite” because this word is already used in the design system."},{"type":"text","text":" "},{"type":"text","text":"Allows to gather the multiple-value tokens from Figma inside one object."},{"type":"text","text":" "},{"type":"text","text":"If a space token exists with its value depending to the size class, it must be packed in such "},{"isActive":true,"type":"reference","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleSpaceSemanticTokens"},{"type":"text","text":"."}],"title":"MultipleSpaceSemanticTokens","navigatorTitle":[{"kind":"identifier","text":"MultipleSpaceSemanticTokens"}],"role":"symbol","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleSpaceSemanticTokens","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultipleSpaceSemanticTokens","kind":"identifier"}],"kind":"symbol","type":"topic"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic":{"title":"OUDSTokensSemantic","abstract":[{"type":"text","text":"These "},{"type":"emphasis","inlineContent":[{"text":"tokens","type":"text"}]},{"type":"text","text":" can be used mainly for "},{"type":"emphasis","inlineContent":[{"type":"text","text":"component tokens"}]},{"type":"text","text":" to apply some style and configuration values ; today "},{"type":"emphasis","inlineContent":[{"text":"component tokens","type":"text"}]},{"type":"text","text":" or "},{"type":"emphasis","inlineContent":[{"type":"text","text":"components"}]},{"type":"text","text":" are not defined yet."},{"type":"text","text":" "},{"type":"text","text":"They can be seen as an high level of usage with functional meanings."}],"identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic","url":"\/documentation\/oudstokenssemantic","role":"collection","type":"topic","kind":"symbol"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleSpaceSemanticTokens/isEqual(_:)":{"type":"topic","kind":"symbol","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleSpaceSemanticTokens\/isEqual(_:)","role":"symbol","url":"\/documentation\/oudstokenssemantic\/multiplespacesemantictokens\/isequal(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isEqual","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"isEqual(_:)","abstract":[{"type":"text","text":"Returns "},{"code":"true","type":"codeVoice"},{"type":"text","text":" if "},{"code":"self","type":"codeVoice"},{"type":"text","text":" and "},{"code":"object","type":"codeVoice"},{"type":"text","text":" has the same "},{"code":"compact","type":"codeVoice"},{"type":"text","text":" and "},{"code":"regular","type":"codeVoice"},{"type":"text","text":" values and with "},{"code":"object","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"as a "},{"code":"MultipleSpaceSemanticTokens","type":"codeVoice"},{"type":"text","text":". Otherwise returns "},{"code":"false","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"code":"isEqual","type":"codeVoice"},{"type":"text","text":" override is preferred for "},{"code":"NSObject","type":"codeVoice"},{"type":"text","text":"."}]}}}