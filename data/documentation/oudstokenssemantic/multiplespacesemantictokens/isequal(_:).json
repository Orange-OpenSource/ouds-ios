{"metadata":{"roleHeading":"Instance Method","role":"symbol","externalID":"c:@M@OUDSTokensSemantic@objc(cs)MultipleSpaceSemanticTokens(im)isEqual:","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isEqual"},{"kind":"text","text":"("},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"modules":[{"name":"OUDSTokensSemantic"}],"title":"isEqual(_:)","symbolKind":"method"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"override","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isEqual","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"object"},{"kind":"text","text":": "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"platforms":["macOS"]}]}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic","doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleSpaceSemanticTokens"]]},"abstract":[{"type":"text","text":"Returns "},{"code":"true","type":"codeVoice"},{"type":"text","text":" if "},{"code":"self","type":"codeVoice"},{"type":"text","text":" and "},{"code":"object","type":"codeVoice"},{"type":"text","text":" has the same "},{"code":"compact","type":"codeVoice"},{"type":"text","text":" and "},{"code":"regular","type":"codeVoice"},{"type":"text","text":" values and with "},{"code":"object","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"as a "},{"code":"MultipleSpaceSemanticTokens","type":"codeVoice"},{"type":"text","text":". Otherwise returns "},{"code":"false","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"code":"isEqual","type":"codeVoice"},{"type":"text","text":" override is preferred for "},{"code":"NSObject","type":"codeVoice"},{"type":"text","text":"."}],"variants":[{"paths":["\/documentation\/oudstokenssemantic\/multiplespacesemantictokens\/isequal(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleSpaceSemanticTokens\/isEqual(_:)"},"references":{"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleSpaceSemanticTokens":{"abstract":[{"type":"text","text":"Kind of semantic tokens which will wrap a combination of "},{"type":"codeVoice","code":"DimensionRawToken"},{"type":"text","text":" depending to size classes."},{"type":"text","text":" "},{"type":"text","text":"Kind of composite token with multiple values, but not named “composite” because this word is already used in the design system."},{"type":"text","text":" "},{"type":"text","text":"Allows to gather the multiple-value tokens from Figma inside one object."},{"type":"text","text":" "},{"type":"text","text":"If a space token exists with its value depending to the size class, it must be packed in such "},{"type":"reference","isActive":true,"identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleSpaceSemanticTokens"},{"type":"text","text":"."}],"type":"topic","url":"\/documentation\/oudstokenssemantic\/multiplespacesemantictokens","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleSpaceSemanticTokens","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MultipleSpaceSemanticTokens"}],"kind":"symbol","title":"MultipleSpaceSemanticTokens","navigatorTitle":[{"kind":"identifier","text":"MultipleSpaceSemanticTokens"}],"role":"symbol"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic":{"identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"These "},{"inlineContent":[{"text":"tokens","type":"text"}],"type":"emphasis"},{"type":"text","text":" can be used mainly for "},{"inlineContent":[{"type":"text","text":"component tokens"}],"type":"emphasis"},{"type":"text","text":" to apply some style and configuration values ; today "},{"inlineContent":[{"type":"text","text":"component tokens"}],"type":"emphasis"},{"type":"text","text":" or "},{"inlineContent":[{"text":"components","type":"text"}],"type":"emphasis"},{"type":"text","text":" are not defined yet."},{"type":"text","text":" "},{"type":"text","text":"They can be seen as an high level of usage with functional meanings."}],"url":"\/documentation\/oudstokenssemantic","title":"OUDSTokensSemantic","type":"topic"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleSpaceSemanticTokens/isEqual(_:)":{"title":"isEqual(_:)","kind":"symbol","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleSpaceSemanticTokens\/isEqual(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isEqual"},{"kind":"text","text":"("},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"role":"symbol","url":"\/documentation\/oudstokenssemantic\/multiplespacesemantictokens\/isequal(_:)","type":"topic","abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if "},{"type":"codeVoice","code":"self"},{"type":"text","text":" and "},{"type":"codeVoice","code":"object"},{"type":"text","text":" has the same "},{"type":"codeVoice","code":"compact"},{"type":"text","text":" and "},{"type":"codeVoice","code":"regular"},{"type":"text","text":" values and with "},{"type":"codeVoice","code":"object"},{"type":"text","text":" "},{"type":"text","text":"as a "},{"type":"codeVoice","code":"MultipleSpaceSemanticTokens"},{"type":"text","text":". Otherwise returns "},{"type":"codeVoice","code":"false"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"codeVoice","code":"isEqual"},{"type":"text","text":" override is preferred for "},{"type":"codeVoice","code":"NSObject"},{"type":"text","text":"."}]}}}