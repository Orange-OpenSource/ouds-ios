{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"override","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isEqual","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"object","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}]}],"variants":[{"paths":["\/documentation\/oudstokenssemantic\/multiplespacesemantictokens\/isequal(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if "},{"type":"codeVoice","code":"self"},{"type":"text","text":" and "},{"type":"codeVoice","code":"object"},{"type":"text","text":" has the same "},{"type":"codeVoice","code":"compact"},{"type":"text","text":" and "},{"type":"codeVoice","code":"regular"},{"type":"text","text":" values and with "},{"type":"codeVoice","code":"object"},{"type":"text","text":" "},{"type":"text","text":"as a "},{"type":"codeVoice","code":"MultipleSpaceSemanticTokens"},{"type":"text","text":". Otherwise returns "},{"type":"codeVoice","code":"false"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"codeVoice","code":"isEqual"},{"type":"text","text":" override is preferred for "},{"type":"codeVoice","code":"NSObject"},{"type":"text","text":"."}],"identifier":{"url":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleSpaceSemanticTokens\/isEqual(_:)","interfaceLanguage":"swift"},"sections":[],"metadata":{"title":"isEqual(_:)","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isEqual","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"role":"symbol","externalID":"c:@M@OUDSTokensSemantic@objc(cs)MultipleSpaceSemanticTokens(im)isEqual:","modules":[{"name":"OUDSTokensSemantic"}],"roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic","doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleSpaceSemanticTokens"]]},"references":{"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic":{"abstract":[{"text":"These ","type":"text"},{"inlineContent":[{"type":"text","text":"tokens"}],"type":"emphasis"},{"text":" can be used mainly for ","type":"text"},{"inlineContent":[{"text":"component tokens","type":"text"}],"type":"emphasis"},{"text":" to apply some style and configuration values ; today ","type":"text"},{"inlineContent":[{"type":"text","text":"component tokens"}],"type":"emphasis"},{"text":" or ","type":"text"},{"inlineContent":[{"type":"text","text":"components"}],"type":"emphasis"},{"text":" are not defined yet.","type":"text"},{"text":" ","type":"text"},{"text":"They can be seen as an high level of usage with functional meanings.","type":"text"}],"kind":"symbol","role":"collection","url":"\/documentation\/oudstokenssemantic","title":"OUDSTokensSemantic","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic","type":"topic"},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleSpaceSemanticTokens":{"kind":"symbol","identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleSpaceSemanticTokens","title":"MultipleSpaceSemanticTokens","url":"\/documentation\/oudstokenssemantic\/multiplespacesemantictokens","navigatorTitle":[{"kind":"identifier","text":"MultipleSpaceSemanticTokens"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Kind of semantic tokens which will wrap a combination of "},{"type":"codeVoice","code":"DimensionRawToken"},{"type":"text","text":" depending to size classes."},{"type":"text","text":" "},{"type":"text","text":"Kind of composite token with multiple values, but not named “composite” because this word is already used in the design system."},{"type":"text","text":" "},{"type":"text","text":"Allows to gather the multiple-value tokens from Figma inside one object."},{"type":"text","text":" "},{"type":"text","text":"If a space token exists with its value depending to the size class, it must be packed in such "},{"type":"reference","isActive":true,"identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleSpaceSemanticTokens"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MultipleSpaceSemanticTokens"}]},"doc://OUDSTokensSemantic/documentation/OUDSTokensSemantic/MultipleSpaceSemanticTokens/isEqual(_:)":{"url":"\/documentation\/oudstokenssemantic\/multiplespacesemantictokens\/isequal(_:)","kind":"symbol","type":"topic","abstract":[{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if ","type":"text"},{"code":"self","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"object","type":"codeVoice"},{"text":" has the same ","type":"text"},{"code":"compact","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"regular","type":"codeVoice"},{"text":" values and with ","type":"text"},{"code":"object","type":"codeVoice"},{"text":" ","type":"text"},{"text":"as a ","type":"text"},{"code":"MultipleSpaceSemanticTokens","type":"codeVoice"},{"text":". Otherwise returns ","type":"text"},{"code":"false","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"code":"isEqual","type":"codeVoice"},{"text":" override is preferred for ","type":"text"},{"code":"NSObject","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/OUDSTokensSemantic\/documentation\/OUDSTokensSemantic\/MultipleSpaceSemanticTokens\/isEqual(_:)","title":"isEqual(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isEqual","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]}}}