{"sections":[],"abstract":[{"type":"text","text":"Has for value  colors.colorOpacityTransparent"}],"variants":[{"paths":["\/documentation\/oudsthemesorange\/orangethemebuttoncomponenttokensprovider\/buttoncolorborderminimalhovermono"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","metadata":{"role":"symbol","externalID":"s:16OUDSThemesOrange0B34ThemeButtonComponentTokensProviderC33buttonColorBorderMinimalHoverMono18OUDSTokensSemantic08MultipleioF0Cvp","symbolKind":"property","extendedModule":"OUDSThemesOrange","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"buttonColorBorderMinimalHoverMono"},{"kind":"text","text":": "},{"preciseIdentifier":"c:@M@OUDSTokensSemantic@objc(cs)MultipleColorSemanticTokens","kind":"typeIdentifier","text":"MultipleColorSemanticTokens"}],"modules":[{"name":"OUDSThemesOrange"}],"title":"buttonColorBorderMinimalHoverMono","roleHeading":"Instance Property"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@objc","kind":"attribute"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buttonColorBorderMinimalHoverMono","kind":"identifier"},{"text":": ","kind":"text"},{"text":"MultipleColorSemanticTokens","preciseIdentifier":"c:@M@OUDSTokensSemantic@objc(cs)MultipleColorSemanticTokens","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"identifier":{"url":"doc:\/\/OUDSThemesOrange\/documentation\/OUDSThemesOrange\/OrangeThemeButtonComponentTokensProvider\/buttonColorBorderMinimalHoverMono","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/OUDSThemesOrange\/documentation\/OUDSThemesOrange","doc:\/\/OUDSThemesOrange\/documentation\/OUDSThemesOrange\/OrangeThemeButtonComponentTokensProvider"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://OUDSThemesOrange/documentation/OUDSThemesOrange/OrangeThemeButtonComponentTokensProvider":{"navigatorTitle":[{"text":"OrangeThemeButtonComponentTokensProvider","kind":"identifier"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OrangeThemeButtonComponentTokensProvider","kind":"identifier"}],"abstract":[{"type":"text","text":"A class which wraps all "},{"type":"strong","inlineContent":[{"text":"component  tokens of buttons","type":"text"}]},{"type":"text","text":" for "},{"type":"emphasis","inlineContent":[{"text":"button","type":"text"}]},{"type":"text","text":" objects like "},{"code":"OUDSButton","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Contains also references to semantic tokens providers so as to be able to use them to define the component tokens."},{"type":"text","text":" "},{"type":"text","text":"This provider should be integrated as a "},{"type":"codeVoice","code":"AllButtonComponentTokensProvider"},{"type":"text","text":" implementation inside "},{"type":"codeVoice","code":"OUDSTheme"},{"type":"text","text":" so as to provide"},{"type":"text","text":" "},{"type":"text","text":"all tokens to the users. It helps users to override some of the tokens and assign them to an "},{"type":"codeVoice","code":"OUDSTheme"},{"type":"text","text":" implementation to use."},{"type":"text","text":" "},{"type":"text","text":"Custom themes can use subclass of "},{"identifier":"doc:\/\/OUDSThemesOrange\/documentation\/OUDSThemesOrange\/OrangeThemeButtonComponentTokensProvider","type":"reference","isActive":true},{"type":"text","text":" and apply the provider they need."},{"type":"text","text":" "},{"type":"text","text":"It implements also the protocol "},{"code":"ButtonComponentTokens","type":"codeVoice"},{"type":"text","text":" so as to expose the component tokens for "},{"type":"emphasis","inlineContent":[{"type":"text","text":"buttons"}]},{"type":"text","text":" through any "},{"code":"OUDSTheme","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Button"}]},{"type":"text","text":" components tokens are defined with raw and semantic tokens of sizes (from "},{"code":"AllSizeSemanticTokensProvider","type":"codeVoice"},{"type":"text","text":"), borders"},{"type":"text","text":" "},{"type":"text","text":"spaces (from "},{"code":"AllSpaceSemanticTokensProvider","type":"codeVoice"},{"type":"text","text":")."}],"kind":"symbol","identifier":"doc:\/\/OUDSThemesOrange\/documentation\/OUDSThemesOrange\/OrangeThemeButtonComponentTokensProvider","role":"symbol","title":"OrangeThemeButtonComponentTokensProvider","url":"\/documentation\/oudsthemesorange\/orangethemebuttoncomponenttokensprovider"},"doc://OUDSThemesOrange/documentation/OUDSThemesOrange":{"type":"topic","role":"collection","abstract":[{"type":"text","text":"The Orange theme overrides some tokens from the basic "},{"type":"codeVoice","code":"OUDSTheme"},{"type":"text","text":" and should be seen as the default theme for the OUDS library with the Orange brand colors for example."}],"kind":"symbol","url":"\/documentation\/oudsthemesorange","title":"OUDSThemesOrange","identifier":"doc:\/\/OUDSThemesOrange\/documentation\/OUDSThemesOrange"},"doc://OUDSThemesOrange/documentation/OUDSThemesOrange/OrangeThemeButtonComponentTokensProvider/buttonColorBorderMinimalHoverMono":{"type":"topic","role":"symbol","identifier":"doc:\/\/OUDSThemesOrange\/documentation\/OUDSThemesOrange\/OrangeThemeButtonComponentTokensProvider\/buttonColorBorderMinimalHoverMono","url":"\/documentation\/oudsthemesorange\/orangethemebuttoncomponenttokensprovider\/buttoncolorborderminimalhovermono","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buttonColorBorderMinimalHoverMono","kind":"identifier"},{"text":": ","kind":"text"},{"text":"MultipleColorSemanticTokens","preciseIdentifier":"c:@M@OUDSTokensSemantic@objc(cs)MultipleColorSemanticTokens","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Has for value  colors.colorOpacityTransparent"}],"title":"buttonColorBorderMinimalHoverMono","kind":"symbol"}}}