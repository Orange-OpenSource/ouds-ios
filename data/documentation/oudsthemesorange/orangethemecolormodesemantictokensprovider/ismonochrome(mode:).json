{"kind":"symbol","abstract":[{"type":"text","text":"Depending to the given "},{"type":"codeVoice","code":"mode"},{"type":"text","text":", should return a flag saying if monochrome mode must be considered."},{"type":"text","text":" "},{"type":"text","text":"For Orange theme, the rule is :"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isMonochrome","kind":"identifier"},{"text":"(","kind":"text"},{"text":"mode","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@M@OUDSTokensSemantic@objc(cs)MultipleColorModeSemanticTokens","text":"MultipleColorModeSemanticTokens","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The color mode token to test","type":"text"}]}],"name":"mode"}]},{"content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"inlineContent":[{"text":"The flag for monochrome mode depending to the theme rules","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"if both light and dark versions are monochrome, returns true, otherwise false"}],"type":"paragraph"}]}]}],"kind":"content"}],"metadata":{"externalID":"s:16OUDSThemesOrange0B36ThemeColorModeSemanticTokensProviderC12isMonochrome4modeSb010OUDSTokensF008MultipledefG0C_tF","title":"isMonochrome(mode:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isMonochrome","kind":"identifier"},{"text":"(","kind":"text"},{"text":"mode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"MultipleColorModeSemanticTokens","kind":"typeIdentifier","preciseIdentifier":"c:@M@OUDSTokensSemantic@objc(cs)MultipleColorModeSemanticTokens"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol","modules":[{"name":"OUDSThemesOrange"}],"extendedModule":"OUDSThemesOrange","roleHeading":"Instance Method","symbolKind":"method"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/OUDSThemesOrange\/documentation\/OUDSThemesOrange\/OrangeThemeColorModeSemanticTokensProvider\/isMonochrome(mode:)"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/oudsthemesorange\/orangethemecolormodesemantictokensprovider\/ismonochrome(mode:)"]}],"hierarchy":{"paths":[["doc:\/\/OUDSThemesOrange\/documentation\/OUDSThemesOrange","doc:\/\/OUDSThemesOrange\/documentation\/OUDSThemesOrange\/OrangeThemeColorModeSemanticTokensProvider"]]},"references":{"doc://OUDSThemesOrange/documentation/OUDSThemesOrange/OrangeThemeColorModeSemanticTokensProvider":{"identifier":"doc:\/\/OUDSThemesOrange\/documentation\/OUDSThemesOrange\/OrangeThemeColorModeSemanticTokensProvider","title":"OrangeThemeColorModeSemanticTokensProvider","type":"topic","navigatorTitle":[{"text":"OrangeThemeColorModeSemanticTokensProvider","kind":"identifier"}],"url":"\/documentation\/oudsthemesorange\/orangethemecolormodesemantictokensprovider","abstract":[{"text":"A class which wraps all ","type":"text"},{"inlineContent":[{"text":"color mode semantic tokens","type":"text"}],"type":"strong"},{"text":", ","type":"text"},{"inlineContent":[{"text":"multiple","type":"text"}],"type":"emphasis"},{"text":" or not, and expose them.","type":"text"},{"text":" ","type":"text"},{"text":"This provider should be integrated as a ","type":"text"},{"code":"AllColorModeSemanticTokensProvider","type":"codeVoice"},{"text":" implementation inside ","type":"text"},{"code":"OUDSTheme","type":"codeVoice"},{"text":" so as to provide","type":"text"},{"text":" ","type":"text"},{"text":"all tokens to the users. It helps users to override some of the tokens and assign them to an ","type":"text"},{"code":"OUDSTheme","type":"codeVoice"},{"text":" implementation to use.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OrangeThemeColorModeSemanticTokensProvider","kind":"identifier"}]},"doc://OUDSThemesOrange/documentation/OUDSThemesOrange/OrangeThemeColorModeSemanticTokensProvider/isMonochrome(mode:)":{"url":"\/documentation\/oudsthemesorange\/orangethemecolormodesemantictokensprovider\/ismonochrome(mode:)","title":"isMonochrome(mode:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isMonochrome"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@OUDSTokensSemantic@objc(cs)MultipleColorModeSemanticTokens","text":"MultipleColorModeSemanticTokens"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"type":"text","text":"Depending to the given "},{"code":"mode","type":"codeVoice"},{"type":"text","text":", should return a flag saying if monochrome mode must be considered."},{"type":"text","text":" "},{"type":"text","text":"For Orange theme, the rule is :"}],"type":"topic","identifier":"doc:\/\/OUDSThemesOrange\/documentation\/OUDSThemesOrange\/OrangeThemeColorModeSemanticTokensProvider\/isMonochrome(mode:)"},"doc://OUDSThemesOrange/documentation/OUDSThemesOrange":{"type":"topic","role":"collection","title":"OUDSThemesOrange","kind":"symbol","identifier":"doc:\/\/OUDSThemesOrange\/documentation\/OUDSThemesOrange","url":"\/documentation\/oudsthemesorange","abstract":[{"type":"text","text":"The Orange theme overrides some tokens from the basic "},{"type":"codeVoice","code":"OUDSTheme"},{"type":"text","text":" and should be seen as the default theme for the OUDS library with the Orange brand colors for example."}]}}}