//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
// 
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
// 
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System 
//

import OUDSTokensRaw
import OUDSTokensSemantic

// [File not generated by the tokenator]
// WARNING: Not synchronized anymore with the Figjam / Figma by developers team
// Create an issue for update https://github.com/Orange-OpenSource/ouds-ios/issues/new?template=token_update.yml

// swiftlint:disable line_length

/// Overrides some color tokens using values available in ``OrangeBrandColorRawTokens``.
/// In fact the *tokenator* is not able to do the magic needed using the JSON file produced by *Figma*.
/// Some color tokens are not isolated by theme in *Figma*, thus the abstract ``OUDSTheme`` faces issues by defining tokens with raw tokens not defined in ``OrangeBrandColorRawTokens`` but in ``OrangeBrandColorRawTokens``. Thus when the ``OUDSTheme``has its colors tokens updated, a manual update must be done to replace unknown tokens by `fatalError` (i.e. must be overriden somewhere somehow) in that file and in this ``OrangeTheme`` files tokens must be overriden and manualy updated with the expected values.
///
///     // For example, in OUDSTheme colors:
///
///     // This token can be defined because uses colorFunctionalDarkGray400 defined in OrangeBrandColorRawTokens, that's ok
///     override open var colorActionPrimaryHoverLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorFunctionalDarkGray400 }
///
///     // This token does not compile because colorOrange500 is in OrangeBrandOrangeBrandColorRawTokens and not OrangeBrandColorRawTokens
///     // but Figma cannot manage them so the JSON is wrong and the tokenator cannot guess the trick
///     override open var colorActionPrimaryLoadingOnBgEmphasizedLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange500 }
///
///     // So it must be replaced by to prevent themes to use bad tokens
///     // and ensure they will be defined somewhere somehow
///     override open var colorActionPrimaryLoadingOnBgEmphasizedLight: ColorSemanticToken { fatalError("ðŸ¤– Raw token unavailable for colorActionPrimaryLoadingOnBgEmphasizedLight!") }
///
///     // And in OrangeTheme colors:
///
///     // Token must be overriden
///     override open var colorActionPrimaryLoadingOnBgEmphasizedLight: ColorSemanticToken { OrangeBrandOrangeBrandColorRawTokens.colorOrange500 }
///
///     // And use the suitable reference in the multiple if existing
///     override open var colorActionPrimaryLoadingOnBgEmphasized: MultipleColorSemanticTokens { MultipleColorSemanticTokens(light: colorActionPrimaryLoadingOnBgEmphasizedLight, dark: ...) }
///
///     // "open" keyword allows subtheme like e.g. InverseTheme to override if needed
///
/// In few words, we need to keep isolated tokens and brand colors, provide kind of abstract architecture with isolated and overridable themes, but face troubles with *Figma* design kit having conception issues and producing JSON not reflecting the reality making *tokenator* unable to build the expected Swift code.
/// We get uncompilable code for color tokens update and need to make the merge manualy.
extension OrangeTheme {

    // NOTE: Picked from OUDSTheme since tokenator update
    // Define here because using raw tokens not defined in OUDSTheme module

    override open var colorActionLoadingLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange550 }

    override open var colorActionPressedLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange550 }

    override open var colorActionSelectedLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange550 }

    override open var colorActionLoadingDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange500 }

    override open var colorActionPressedDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange500 }

    override open var colorActionSelectedDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange500 }

    override open var colorBgTertiaryLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorWarmGray100 }

    override open var colorBgTertiaryDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorWarmGray900 }

    override open var colorBorderBrandPrimaryLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange550 }

    override open var colorBorderBrandPrimaryDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange500 }

    override open var colorContentBrandPrimaryLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange550 }

    override open var colorContentBrandPrimaryDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange500 }

    override open var colorSurfaceBrandPrimaryLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange500 }

    override open var colorSurfaceBrandPrimaryDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange500 }

    override open var colorSurfaceStatusAccentMutedDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorWarmGray900 }

    override open var colorDecorativeBrandPrimaryLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange500 }

    override open var colorDecorativeBrandPrimaryDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange500 }

    override open var colorChartHighlightLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange550 }

    override open var colorChartHighlightDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange500 }

    override open var colorRepositoryAccentHighestLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorWarmGray900 }

    override open var colorRepositoryAccentLowestLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorWarmGray100 }

    override open var colorRepositoryAccentHighestDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorWarmGray900 }

    override open var colorRepositoryAccentLowestDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorWarmGray100 }

    override open var colorRepositoryPrimaryDefaultLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange550 }

    override open var colorRepositoryPrimaryLowLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange500 }

    override open var colorRepositoryPrimaryDefaultDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange550 }

    override open var colorRepositoryPrimaryLowDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange500 }
}

// swiftlint:enable line_length
