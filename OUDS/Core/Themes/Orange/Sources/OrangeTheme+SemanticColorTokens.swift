//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
// 
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
// 
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System 
//

import OUDSTokensRaw
import OUDSTokensSemantic

// [File not generated by the tokenator]
// WARNING: Not synchronized anymore with the Figjam / Figma by developers team
// Create an issue for update https://github.com/Orange-OpenSource/ouds-ios/issues/new?template=token_update.yml

// swiftlint:disable line_length

/// Overrides some color tokens using values available in ``OrangeBrandColorRawTokens``.
/// In fact the *tokenator* is not able to do the magic needed using the JSON file produced by *Figma*.
/// Some color tokens are not isolated by theme in *Figma*, thus the abstract ``OUDSTheme`` faces issues by defining tokens with raw tokens not defined in ``ColorRawTokens`` but in ``OrangeBrandColorRawTokens``. Thus when the ``OUDSTheme``has its colors tokens updated, a manual update must be done to replace unknown tokens by `fatalError` (i.e. must be overriden somewhere somehow) in that file and in this ``OrangeTheme`` files tokens must be overriden and manualy updated with the expected values.
///
///     // For example, in OUDSTheme colors:
///
///     // This token can be defined because uses colorFunctionalDarkGray400 defined in ColorRawTokens, that's ok
///     @objc open var colorActionPrimaryHoverLight: ColorSemanticToken { ColorRawTokens.colorFunctionalDarkGray400 }
///
///     // This token does not compile because colorOrange500 is in OrangeBrandColorRawTokens and not ColorRawTokens
///     // but Figma cannot manage them so the JSON is wrong and the tokenator cannot guess the trick
///     @objc open var colorActionPrimaryLoadingOnBgEmphasizedLight: ColorSemanticToken { ColorRawTokens.colorOrange500 }
///
///     // So it must be replaced by to prevent themes to use bad tokens
///     // and ensure they will be defined somewhere somehow
///     @objc open var colorActionPrimaryLoadingOnBgEmphasizedLight: ColorSemanticToken { fatalError("ðŸ¤– Raw token unavailable for colorActionPrimaryLoadingOnBgEmphasizedLight!") }
///
///     // And in OrangeTheme colors:
///
///     // Token must be overriden
///     override open var colorActionPrimaryLoadingOnBgEmphasizedLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange500 }
///
///     // And use the suitable reference in the multiple if existing
///     override open var colorActionPrimaryLoadingOnBgEmphasized: MultipleColorSemanticTokens { MultipleColorSemanticTokens(light: colorActionPrimaryLoadingOnBgEmphasizedLight, dark: ...) }
///
///     // "open" keyword allows subtheme like e.g. InverseTheme to override if needed
///
/// In few words, we need to keep isolated tokens and brand colors, provide kind of abstract architecture with isolated and overridable themes, but face troubles with *Figma* design kit having conception issues and producing JSON not reflecting the reality making *tokenator* unable to build the expected Swift code.
/// We get uncompilable code for color tokens update and need to make the merge manualy.
extension OrangeTheme {

    // MARK: Semantic token - Colors - Background

    // NOTE: Picked from OUDSTheme since tokenator update
    override open var colorBgTertiaryLight: ColorSemanticToken {
        OrangeBrandColorRawTokens.colorWarmGray100 }

    // NOTE: Picked from OUDSTheme since tokenator update
    override open var colorBgTertiaryDark: ColorSemanticToken {
        OrangeBrandColorRawTokens.colorWarmGray900 }

    override open var colorBgTertiary: MultipleColorSemanticTokens { MultipleColorSemanticTokens(light: colorBgTertiaryLight, dark: colorBgTertiaryDark) }

    // NOTE: Picked from OUDSTheme since tokenator update
    override open var colorBgBrandPrimaryLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange550 }

    // NOTE: Picked from OUDSTheme since tokenator update
    override open var colorBgBrandPrimaryDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange500 }

    override open var colorBgBrandPrimary: MultipleColorSemanticTokens { MultipleColorSemanticTokens(light: colorBgBrandPrimaryLight, dark: colorBgBrandPrimaryDark) }

    // NOTE: Picked from OUDSTheme since tokenator update
    override open var colorBgStatusAccentMutedLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorWarmGray100 }

    // NOTE: Picked from OUDSTheme since tokenator update
    override open var colorBgStatusAccentMutedDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorWarmGray900 }

    override open var colorBgStatusAccentMuted: MultipleColorSemanticTokens { MultipleColorSemanticTokens(light: colorBgStatusAccentMutedLight, dark: colorBgStatusAccentMutedDark) }

    override open var colorBgStatusAccentMutedOnBgEmphasizedLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorWarmGray900 }

    override open var colorBgStatusAccentMutedOnBgEmphasizedDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorWarmGray900 }

    override open var colorBgStatusAccentMutedOnBgEmphasized: MultipleColorSemanticTokens { MultipleColorSemanticTokens(light: colorBgStatusAccentMutedOnBgEmphasizedLight, dark: colorBgStatusAccentMutedOnBgEmphasizedDark) }

    // MARK: Semantic token - Colors - Content

    // NOTE: Picked from OUDSTheme since tokenator update
    override open var colorContentBrandPrimaryLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange550 }

    // NOTE: Picked from OUDSTheme since tokenator update
    override open var colorContentBrandPrimaryDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange550 }

    override open var colorContentBrandPrimary: MultipleColorSemanticTokens { MultipleColorSemanticTokens(light: colorContentBrandPrimaryLight, dark: colorContentBrandPrimaryDark) }

    // NOTE: Picked from OUDSTheme since tokenator update
    override open var colorContentBrandPrimaryOnBgEmphasizedLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange500 }

    // NOTE: Picked from OUDSTheme since tokenator update
    override open var colorContentBrandPrimaryOnBgEmphasizedDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange500 }

    override open var colorContentBrandPrimaryOnBgEmphasized: MultipleColorSemanticTokens { MultipleColorSemanticTokens(light: colorContentBrandPrimaryOnBgEmphasizedLight, dark: colorContentBrandPrimaryOnBgEmphasizedDark) }

    // MARK: Semantic token - Colors - Border

    // NOTE: Picked from OUDSTheme since tokenator update
    override open var colorBorderBrandPrimaryOnBgEmphasizedLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange500 }

    // NOTE: Picked from OUDSTheme since tokenator update
    override open var colorBorderBrandPrimaryOnBgEmphasizedDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange500 }

    override open var colorBorderBrandPrimaryOnBgEmphasized: MultipleColorSemanticTokens { MultipleColorSemanticTokens(light: colorBorderBrandPrimaryOnBgEmphasizedLight, dark: colorBorderBrandPrimaryOnBgEmphasizedDark) }

    // NOTE: Picked from OUDSTheme since tokenator update
    override open var colorBorderBrandPrimaryLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange550 }

    // NOTE: Picked from OUDSTheme since tokenator update
    override open var colorBorderBrandPrimaryDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange500 }

    override open var colorBorderBrandPrimary: MultipleColorSemanticTokens { MultipleColorSemanticTokens(light: colorBorderBrandPrimaryLight, dark: colorBorderBrandPrimaryDark) }

    // MARK: Semantic token - Colors - Action

    // NOTE: Picked from OUDSTheme since tokenator update
    override open var colorActionSelectedLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange550 }

    // NOTE: Picked from OUDSTheme since tokenator update
    override open var colorActionSelectedDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange500 }

    override open var colorActionSelected: MultipleColorSemanticTokens { MultipleColorSemanticTokens(light: colorActionSelectedLight, dark: colorActionSelectedDark) }

    // NOTE: Picked from OUDSTheme since tokenator update
    override open var colorActionSelectedOnBgEmphasizedLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange500 }

    // NOTE: Picked from OUDSTheme since tokenator update
    override open var colorActionSelectedOnBgEmphasizedDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange500 }

    override open var colorActionSelectedOnBgEmphasized: MultipleColorSemanticTokens { MultipleColorSemanticTokens(OrangeBrandColorRawTokens.colorOrange500) }

    // NOTE: Picked from OUDSTheme since tokenator update
    override open var colorActionPrimaryPressedLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange550 }

    override open var colorActionPrimaryPressedDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange500 }

    override open var colorActionPrimaryPressed: MultipleColorSemanticTokens { MultipleColorSemanticTokens(light: colorActionPrimaryPressedLight, dark: colorActionPrimaryPressedDark) }

    // NOTE: Picked from OUDSTheme since tokenator update
    override open var colorActionPrimaryPressedOnBgEmphasizedLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange500 }

    // NOTE: Picked from OUDSTheme since tokenator update
    override open var colorActionPrimaryPressedOnBgEmphasizedDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange500 }

    override open var colorActionPrimaryPressedOnBgEmphasized: MultipleColorSemanticTokens { MultipleColorSemanticTokens(light: colorActionPrimaryPressedOnBgEmphasizedLight, dark: colorActionPrimaryPressedOnBgEmphasizedDark) }

    // NOTE: Picked from OUDSTheme since tokenator update
    override open var colorActionPrimaryLoadingLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange550 }

    // NOTE: Picked from OUDSTheme since tokenator update
    override open var colorActionPrimaryLoadingDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange500 }

    override open var colorActionPrimaryLoading: MultipleColorSemanticTokens { MultipleColorSemanticTokens(light: colorActionPrimaryLoadingLight, dark: colorActionPrimaryLoadingDark) }

    // NOTE: Picked from OUDSTheme since tokenator update
    override open var colorActionPrimaryLoadingOnBgEmphasizedLight: ColorRawToken { OrangeBrandColorRawTokens.colorOrange500 }

    // NOTE: Picked from OUDSTheme since tokenator update
    override open var colorActionPrimaryLoadingOnBgEmphasizedDark: ColorRawToken { OrangeBrandColorRawTokens.colorOrange500 }

    override open var colorActionPrimaryLoadingOnBgEmphasized: MultipleColorSemanticTokens { MultipleColorSemanticTokens(light: colorActionPrimaryLoadingOnBgEmphasizedLight, dark: colorActionPrimaryLoadingOnBgEmphasizedDark) }

    override open var colorActionPrimaryFocus: MultipleColorSemanticTokens { MultipleColorSemanticTokens(light: ColorRawTokens.colorFunctionalDarkGray400, dark: ColorRawTokens.colorFunctionalLightGray400) }

    override open var colorActionPrimaryFocusOnBgEmphasized: MultipleColorSemanticTokens { MultipleColorSemanticTokens(ColorRawTokens.colorFunctionalLightGray400) }

    // MARK: Semantic token - Colors - Decorative

    // NOTE: Picked from OUDSTheme since tokenator update
    override open var colorDecorativeBrandPrimaryLight: ColorRawToken { OrangeBrandColorRawTokens.colorOrange500 }

    // NOTE: Picked from OUDSTheme since tokenator update
    override open var colorDecorativeBrandPrimaryDark: ColorRawToken { OrangeBrandColorRawTokens.colorOrange500 }

    override open var colorDecorativeBrandPrimary: MultipleColorSemanticTokens { MultipleColorSemanticTokens(light: colorDecorativeBrandPrimaryLight, dark: colorDecorativeBrandPrimaryDark) }

    override open var colorDecorativeBrandSecondary: MultipleColorSemanticTokens { MultipleColorSemanticTokens(light: colorDecorativeBrandSecondaryLight, dark: colorDecorativeBrandSecondaryDark) }

    override open var colorDecorativeBrandTertiary: MultipleColorSemanticTokens { MultipleColorSemanticTokens(light: colorDecorativeBrandTertiaryLight, dark: colorDecorativeBrandTertiaryDark) }

    // MARK: Semantic token - Colors - Chart

    // NOTE: Picked from OUDSTheme since tokenator update
    override open var colorChartCategoricalBrandLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange550 }

    // NOTE: Picked from OUDSTheme since tokenator update
    override open var colorChartCategoricalBrandDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange500 }

    override open var colorChartCategoricalBrand: MultipleColorSemanticTokens { MultipleColorSemanticTokens(light: colorChartCategoricalBrandLight, dark: colorChartCategoricalBrandDark) }
}

// swiftlint:enable line_length
