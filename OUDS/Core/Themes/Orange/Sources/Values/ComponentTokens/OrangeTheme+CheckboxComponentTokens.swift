//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System
//

import Foundation
import OUDSTokensComponent
import OUDSTokensRaw
import OUDSTokensSemantic

// ðŸ§± Tokens version: 1.1.0
// ðŸ¤– Generated by Tokenator

extension OrangeThemeCheckboxComponentTokensProvider: CheckboxComponentTokens {
    /// Has for value token borders.borderRadiusDefault
    @objc open var checkboxBorderRadius: BorderRadiusSemanticToken { borders.borderRadiusDefault }
    /// Has for value token borders.borderWidthMedium
    @objc open var checkboxBorderWidthSelected: BorderWidthSemanticToken { borders.borderWidthMedium }
    /// Has for value token borders.borderWidthMedium
    @objc open var checkboxBorderWidthSelectedHover: BorderWidthSemanticToken { borders.borderWidthMedium }
    /// Has for value token borders.borderWidthMedium
    @objc open var checkboxBorderWidthSelectedPressed: BorderWidthSemanticToken { borders.borderWidthMedium }
    /// Has for value token borders.borderWidthMedium
    @objc open var checkboxBorderWidthSelectedFocus: BorderWidthSemanticToken { borders.borderWidthMedium }
    /// Has for value token borders.borderWidthThin
    @objc open var checkboxBorderWidthUnselected: BorderWidthSemanticToken { borders.borderWidthThin }
    /// Has for value token borders.borderWidthMedium
    @objc open var checkboxBorderWidthUnselectedHover: BorderWidthSemanticToken { borders.borderWidthMedium }
    /// Has for value token borders.borderWidthMedium
    @objc open var checkboxBorderWidthUnselectedPressed: BorderWidthSemanticToken { borders.borderWidthMedium }
    /// Has for value token borders.borderWidthMedium
    @objc open var checkboxBorderWidthUnselectedFocus: BorderWidthSemanticToken { borders.borderWidthMedium }
    /// Has for value token sizes.sizeIconWithLabelLargeSizeXs
    @objc open var checkboxSizeIndicator: SizeSemanticToken { sizes.sizeIconWithLabelLargeSizeXs }
    /// Has for value token sizes.sizeMinInteractiveArea
    @objc open var checkboxSizeMinHeight: SizeSemanticToken { sizes.sizeMinInteractiveArea }
    /// Has for value token sizes.sizeMinInteractiveArea
    @objc open var checkboxSizeMinWidth: SizeSemanticToken { sizes.sizeMinInteractiveArea }
    /// Has for value token sizes.sizeMinInteractiveArea
    @objc open var checkboxSizeMaxHeight: SizeSemanticToken { sizes.sizeMinInteractiveArea }
}
