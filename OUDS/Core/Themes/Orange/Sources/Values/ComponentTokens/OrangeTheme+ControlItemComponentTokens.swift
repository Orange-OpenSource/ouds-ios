//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System
//

import Foundation
import OUDSTokensComponent
import OUDSTokensRaw
import OUDSTokensSemantic

// ðŸ§¬ Tokens version: 1.5.0 (Orange brand)
// ðŸ¤– Generated by Tokenator

extension OrangeThemeControlItemComponentTokensProvider: ControlItemComponentTokens {
    /// Has for value token colors.colorActionSupportHover
    @objc open var controlItemColorBgHover: MultipleColorSemanticTokens { colors.colorActionSupportHover }
    /// Has for value token colors.colorActionSupportPressed
    @objc open var controlItemColorBgPressed: MultipleColorSemanticTokens { colors.colorActionSupportPressed }
    /// Has for value token colors.colorActionSupportLoading
    @objc open var controlItemColorBgLoading: MultipleColorSemanticTokens { colors.colorActionSupportLoading }
    /// Has for value token colors.colorActionSupportFocus
    @objc open var controlItemColorBgFocus: MultipleColorSemanticTokens { colors.colorActionSupportFocus }
    /// Has for value token colors.colorContentDefault
    @objc open var controlItemColorContentLoader: MultipleColorSemanticTokens { colors.colorContentDefault }
    /// Has for value token borders.borderRadiusNone
    @objc open var controlItemBorderRadius: BorderRadiusSemanticToken { borders.borderRadiusNone }
    /// Has for value token borders.borderRadiusDefault
    @objc open var controlItemBorderRadiusItemOnly: BorderRadiusSemanticToken { borders.borderRadiusDefault }
    /// Has for value token spaces.spaceInsetMd
    @objc open var controlItemSpaceInset: SpaceSemanticToken { spaces.spaceInsetMd }
    /// Has for value token spaces.spaceColumnGapLg
    @objc open var controlItemSpaceColumnGap: SpaceSemanticToken { spaces.spaceColumnGapLg }
    /// Has for value token spaces.spaceRowGapNone
    @objc open var controlItemSpaceRowGap: SpaceSemanticToken { spaces.spaceRowGapNone }
    /// Has for value token sizes.sizeIconWithLabelLargeSizeMd
    @objc open var controlItemSizeIcon: SizeSemanticToken { sizes.sizeIconWithLabelLargeSizeMd }
    /// Has for value token sizes.sizeIconWithLabelLargeSizeSm
    @objc open var controlItemSizeLoader: SizeSemanticToken { sizes.sizeIconWithLabelLargeSizeSm }
    /// Has for value token DimensionRawTokens.dimension650
    @objc open var controlItemSizeMinHeight: SizeSemanticToken { DimensionRawTokens.dimension650 }
    /// Has for value token DimensionRawTokens.dimension1200
    @objc open var controlItemSizeMaxHeightAssetsContainer: SizeSemanticToken { DimensionRawTokens.dimension1200 }
    /// Has for value token DimensionRawTokens.dimension2000
    @objc open var controlItemSizeMinWidth: SizeSemanticToken { DimensionRawTokens.dimension2000 }
}
