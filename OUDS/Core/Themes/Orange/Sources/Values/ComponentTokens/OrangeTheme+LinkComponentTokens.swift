//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System
//

import Foundation
import OUDSTokensComponent
import OUDSTokensRaw
import OUDSTokensSemantic

// ðŸ§± Tokens version: 0.11.0
// ðŸ¤– Generated by Tokenator

extension OrangeThemeLinkComponentTokensProvider: LinkComponentTokens {
    /// Has for value  colors.colorContentBrandPrimary
    @objc open var linkColorArrowEnabled: MultipleColorSemanticTokens { colors.colorContentBrandPrimary }
    /// Has for value  colors.colorContentBrandPrimary
    @objc open var linkColorArrowFocus: MultipleColorSemanticTokens { colors.colorContentBrandPrimary }
    /// Has for value  colors.colorContentBrandPrimary
    @objc open var linkColorArrowHover: MultipleColorSemanticTokens { colors.colorContentBrandPrimary }
    /// Has for value  colors.colorContentBrandPrimary
    @objc open var linkColorArrowPressed: MultipleColorSemanticTokens { colors.colorContentBrandPrimary }
    /// Has for value  colors.colorRepositoryOpacityBlackMedium
    @objc open var linkColorContentDisabledMono: MultipleColorSemanticTokens { colors.colorRepositoryOpacityBlackMedium }
    /// Has for value  colors.colorActionEnabled
    @objc open var linkColorContentEnabled: MultipleColorSemanticTokens { colors.colorActionEnabled }
    /// Has for value  colors.colorRepositoryNeutralEmphasizedBlack
    @objc open var linkColorContentEnabledMono: MultipleColorSemanticTokens { colors.colorRepositoryNeutralEmphasizedBlack }
    /// Has for value  colors.colorActionFocus
    @objc open var linkColorContentFocus: MultipleColorSemanticTokens { colors.colorActionFocus }
    /// Has for value  colors.colorRepositoryNeutralEmphasizedBlack
    @objc open var linkColorContentFocusMono: MultipleColorSemanticTokens { colors.colorRepositoryNeutralEmphasizedBlack }
    /// Has for value  colors.colorActionHover
    @objc open var linkColorContentHover: MultipleColorSemanticTokens { colors.colorActionHover }
    /// Has for value  colors.colorRepositoryNeutralEmphasizedBlack
    @objc open var linkColorContentHoverMono: MultipleColorSemanticTokens { colors.colorRepositoryNeutralEmphasizedBlack }
    /// Has for value  colors.colorActionPressed
    @objc open var linkColorContentPressed: MultipleColorSemanticTokens { colors.colorActionPressed }
    /// Has for value  colors.colorRepositoryOpacityBlackHigher
    @objc open var linkColorContentPressedMono: MultipleColorSemanticTokens { colors.colorRepositoryOpacityBlackHigher }
    /// Has for value token sizes.sizeIconWithLabelLargeSizeXs
    @objc open var linkSizeIconMedium: SizeSemanticToken { sizes.sizeIconWithLabelLargeSizeXs }
    /// Has for value token sizes.sizeIconWithLabelMediumSizeSm
    @objc open var linkSizeIconSmall: SizeSemanticToken { sizes.sizeIconWithLabelMediumSizeSm }
    /// Has for value token DimensionRawTokens.dimension600
    @objc open var linkSizeMinHeightMedium: SizeSemanticToken { DimensionRawTokens.dimension600 }
    /// Has for value token DimensionRawTokens.dimension550
    @objc open var linkSizeMinHeightSmall: SizeSemanticToken { DimensionRawTokens.dimension550 }
    /// Has for value token DimensionRawTokens.dimension600
    @objc open var linkSizeMinWidthMedium: SizeSemanticToken { DimensionRawTokens.dimension600 }
    /// Has for value token DimensionRawTokens.dimension550
    @objc open var linkSizeMinWidthSmall: SizeSemanticToken { DimensionRawTokens.dimension550 }
    /// Has for value token spaces.spaceColumnGapXs
    @objc open var linkSpaceColumnGapArrowMedium: SpaceSemanticToken { spaces.spaceColumnGapXs }
    /// Has for value token spaces.spaceColumnGap2xs
    @objc open var linkSpaceColumnGapArrowSmall: SpaceSemanticToken { spaces.spaceColumnGap2xs }
    /// Has for value token spaces.spaceColumnGapSm
    @objc open var linkSpaceColumnGapIconMedium: SpaceSemanticToken { spaces.spaceColumnGapSm }
    /// Has for value token spaces.spaceColumnGapXs
    @objc open var linkSpaceColumnGapIconSmall: SpaceSemanticToken { spaces.spaceColumnGapXs }
    /// Has for value token spaces.spacePaddingBlockMedium
    @objc open var linkSpacePaddingBlock: SpaceSemanticToken { spaces.spacePaddingBlockMd }
    /// Has for value token spaces.spacePaddingInlineNone
    @objc open var linkSpacePaddingInline: SpaceSemanticToken { spaces.spacePaddingInlineNone }
}
