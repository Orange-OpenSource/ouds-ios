//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System
//

import Foundation
import OUDSTokensComponent
import OUDSTokensRaw
import OUDSTokensSemantic

// ðŸ§± Tokens version: 0.11.0
// ðŸ¤– Generated by Tokenator

extension OrangeThemeTagComponentTokensProvider: TagComponentTokens {
    @objc open var tagBorderRadiusPill: BorderRadiusSemanticToken { borders.borderRadiusPill }
    @objc open var tagBorderWidthDefault: BorderWidthSemanticToken { borders.borderWidthDefault }
    @objc open var tagBorderWidthDefaultInteraction: BorderWidthSemanticToken { borders.borderWidthMedium }
    @objc open var tagColorBgEnabled: MultipleColorSemanticTokens { colors.colorActionSupportEnabled }
    @objc open var tagColorBgFocus: MultipleColorSemanticTokens { colors.colorActionSupportFocus }
    @objc open var tagColorBgHover: MultipleColorSemanticTokens { colors.colorActionSupportHover }
    @objc open var tagColorBgPressed: MultipleColorSemanticTokens { colors.colorActionSupportPressed }
    @objc open var tagColorBorderDisabled: MultipleColorSemanticTokens { colors.colorActionDisabled }
    @objc open var tagColorBorderEnabled: MultipleColorSemanticTokens { colors.colorBorderDefault }
    @objc open var tagColorBorderFocus: MultipleColorSemanticTokens { colors.colorActionFocus }
    @objc open var tagColorBorderHover: MultipleColorSemanticTokens { colors.colorActionHover }
    @objc open var tagColorBorderPressed: MultipleColorSemanticTokens { colors.colorActionPressed }
    @objc open var tagColorContentDisabled: MultipleColorSemanticTokens { colors.colorActionDisabled }
    @objc open var tagColorContentEnabled: MultipleColorSemanticTokens { colors.colorActionEnabled }
    @objc open var tagColorContentFocus: MultipleColorSemanticTokens { colors.colorActionFocus }
    @objc open var tagColorContentHover: MultipleColorSemanticTokens { colors.colorActionHover }
    @objc open var tagColorContentPressed: MultipleColorSemanticTokens { colors.colorActionPressed }
    @objc open var tagSizeIconMedium: SizeSemanticToken { sizes.sizeIconWithLabelMediumSizeSm }
    @objc open var tagSizeIconSmall: SizeSemanticToken { sizes.sizeIconWithLabelSmallSizeSm }
    @objc open var tagSizeMinHeightMedium: SizeSemanticToken { DimensionRawTokens.dimension400 }
    @objc open var tagSizeMinHeightSmall: SizeSemanticToken { DimensionRawTokens.dimension300 }
    @objc open var tagSizeMinWidthMedium: SizeSemanticToken { DimensionRawTokens.dimension600 }
    @objc open var tagSizeMinWidthSmall: SizeSemanticToken { DimensionRawTokens.dimension550 }
    @objc open var tagSpaceColumnGapColumnGapMedium: SpaceSemanticToken { spaces.spaceColumnGapShorter }
    @objc open var tagSpaceColumnGapColumnGapSmall: SpaceSemanticToken { spaces.spaceColumnGapShortest }
    @objc open var tagSpacePaddingBlockMedium: SpaceSemanticToken { spaces.spacePaddingBlockShorter }
    @objc open var tagSpacePaddingBlockSmall: SpaceSemanticToken { spaces.spacePaddingBlockShortest }
    @objc open var tagSpacePaddingInlineIconEndMedium: SpaceSemanticToken { spaces.spacePaddingInlineMedium }
    @objc open var tagSpacePaddingInlineIconEndSmall: SpaceSemanticToken { spaces.spacePaddingInlineShort }
    @objc open var tagSpacePaddingInlineIconStartMedium: SpaceSemanticToken { spaces.spacePaddingInlineMedium }
    @objc open var tagSpacePaddingInlineIconStartSmall: SpaceSemanticToken { spaces.spacePaddingInlineShort }
    @objc open var tagSpacePaddingInlineLabelEndMedium: SpaceSemanticToken { spaces.spacePaddingInlineTall }
    @objc open var tagSpacePaddingInlineLabelEndSmall: SpaceSemanticToken { spaces.spacePaddingInlineMedium }
    @objc open var tagSpacePaddingInlineLabelStartMedium: SpaceSemanticToken { spaces.spacePaddingInlineTall }
    @objc open var tagSpacePaddingInlineLabelStartSmall: SpaceSemanticToken { spaces.spacePaddingInlineMedium }
}
