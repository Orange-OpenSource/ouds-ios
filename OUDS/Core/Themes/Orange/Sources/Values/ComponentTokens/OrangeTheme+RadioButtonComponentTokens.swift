//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System
//

import Foundation
import OUDSTokensComponent
import OUDSTokensRaw
import OUDSTokensSemantic

// ðŸ§± Tokens version: 0.11.0
// ðŸ¤– Generated by Tokenator

extension OrangeThemeRadioButtonComponentTokensProvider: RadioButtonComponentTokens {
    /// Has for value token borders.borderRadiusPill
    @objc open var radioButtonBorderRadius: BorderRadiusSemanticToken { borders.borderRadiusPill }
    /// Has for value token borders.borderWidthMedium
    @objc open var radioButtonBorderWidthSelected: BorderWidthSemanticToken { borders.borderWidthMedium }
    /// Has for value token borders.borderWidthMedium
    @objc open var radioButtonBorderWidthSelectedFocus: BorderWidthSemanticToken { borders.borderWidthMedium }
    /// Has for value token borders.borderWidthMedium
    @objc open var radioButtonBorderWidthSelectedHover: BorderWidthSemanticToken { borders.borderWidthMedium }
    /// Has for value token borders.borderWidthMedium
    @objc open var radioButtonBorderWidthSelectedPressed: BorderWidthSemanticToken { borders.borderWidthMedium }
    /// Has for value token borders.borderWidthThin
    @objc open var radioButtonBorderWidthUnselected: BorderWidthSemanticToken { borders.borderWidthThin }
    /// Has for value token borders.borderWidthMedium
    @objc open var radioButtonBorderWidthUnselectedFocus: BorderWidthSemanticToken { borders.borderWidthMedium }
    /// Has for value token borders.borderWidthMedium
    @objc open var radioButtonBorderWidthUnselectedHover: BorderWidthSemanticToken { borders.borderWidthMedium }
    /// Has for value token borders.borderWidthMedium
    @objc open var radioButtonBorderWidthUnselectedPressed: BorderWidthSemanticToken { borders.borderWidthMedium }
    /// Has for value token sizes.sizeIconWithLabelLargeSizeXs
    @objc open var radioButtonSizeIndicator: SizeSemanticToken { sizes.sizeIconWithLabelLargeSizeXs }
    /// Has for value token DimensionRawTokens.dimension600
    @objc open var radioButtonSizeMaxHeight: SizeSemanticToken { DimensionRawTokens.dimension600 }
    /// Has for value token DimensionRawTokens.dimension600
    @objc open var radioButtonSizeMinHeight: SizeSemanticToken { DimensionRawTokens.dimension600 }
    /// Has for value token DimensionRawTokens.dimension600
    @objc open var radioButtonSizeMinWidth: SizeSemanticToken { DimensionRawTokens.dimension600 }
}
