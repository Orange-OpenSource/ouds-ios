//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System
//

import Foundation
import OUDSTokensComponent
import OUDSTokensRaw
import OUDSTokensSemantic

// ðŸ§± Tokens version: 0.11.0
// ðŸ¤– Generated by Tokenator

extension OrangeThemeChipComponentTokensProvider: ChipComponentTokens {
    /// borders.borderRadiusPill
    @objc open var chipBorderRadiusPill: BorderRadiusSemanticToken { borders.borderRadiusPill }
    /// borders.borderWidthDefault
    @objc open var chipBorderWidthDefault: BorderWidthSemanticToken { borders.borderWidthDefault }
    /// borders.borderWidthMedium
    @objc open var chipBorderWidthDefaultInteraction: BorderWidthSemanticToken { borders.borderWidthMedium }
    /// borders.borderWidthMedium
    @objc open var chipBorderWidthSelected: BorderWidthSemanticToken { borders.borderWidthMedium }
    /// borders.borderWidthMedium
    @objc open var chipBorderWidthSelectedInteraction: BorderWidthSemanticToken { borders.borderWidthMedium }
    /// borders.borderWidthDefault
    @objc open var chipBorderWidthUnselected: BorderWidthSemanticToken { borders.borderWidthDefault }
    /// borders.borderWidthMedium
    @objc open var chipBorderWidthUnselectedInteraction: BorderWidthSemanticToken { borders.borderWidthMedium }
    ///  colors.colorOpacityTransparent 
    @objc open var chipColorBgDisabled: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    ///  colors.colorOpacityTransparent 
    @objc open var chipColorBgEnabled: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    ///  colors.colorOpacityTransparent 
    @objc open var chipColorBgFocus: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    ///  colors.colorOpacityTransparent 
    @objc open var chipColorBgHover: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    ///  colors.colorOpacityTransparent 
    @objc open var chipColorBgPressed: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    ///  colors.colorActionDisabled 
    @objc open var chipColorBorderDisabled: MultipleColorSemanticTokens { colors.colorActionDisabled }
    ///  colors.colorActionFocus 
    @objc open var chipColorBorderFocus: MultipleColorSemanticTokens { colors.colorActionFocus }
    ///  colors.colorActionHover 
    @objc open var chipColorBorderHover: MultipleColorSemanticTokens { colors.colorActionHover }
    ///  colors.colorActionPressed 
    @objc open var chipColorBorderPressed: MultipleColorSemanticTokens { colors.colorActionPressed }
    ///  colors.colorActionSelected 
    @objc open var chipColorBorderSelected: MultipleColorSemanticTokens { colors.colorActionSelected }
    ///  colors.colorBorderDefault 
    @objc open var chipColorBorderUnselected: MultipleColorSemanticTokens { colors.colorBorderDefault }
    ///  colors.colorActionDisabled 
    @objc open var chipColorContentDisabled: MultipleColorSemanticTokens { colors.colorActionDisabled }
    ///  colors.colorActionEnabled 
    @objc open var chipColorContentEnabled: MultipleColorSemanticTokens { colors.colorActionEnabled }
    ///  colors.colorActionFocus 
    @objc open var chipColorContentFocus: MultipleColorSemanticTokens { colors.colorActionFocus }
    ///  colors.colorActionHover 
    @objc open var chipColorContentHover: MultipleColorSemanticTokens { colors.colorActionHover }
    ///  colors.colorActionPressed 
    @objc open var chipColorContentPressed: MultipleColorSemanticTokens { colors.colorActionPressed }
    /// sizes.sizeIconWithLabelMediumSizeSm
    @objc open var chipSizeIcon: SizeSemanticToken { sizes.sizeIconWithLabelMediumSizeSm }
    /// DimensionRawTokens.dimension400
    @objc open var chipSizeMinHeight: SizeSemanticToken { DimensionRawTokens.dimension400 }
    /// DimensionRawTokens.dimension600
    @objc open var chipSizeMinWidth: SizeSemanticToken { DimensionRawTokens.dimension600 }
    /// spaces.spaceColumnGapShorter
    @objc open var chipSpaceColumnGapColumnGap: SpaceSemanticToken { spaces.spaceColumnGapShorter }
    /// spaces.spaceInsetMedium
    @objc open var chipSpaceInsetIconOnly: SpaceSemanticToken { spaces.spaceInsetMedium }
    /// spaces.spacePaddingBlockShorter
    @objc open var chipSpacePaddingBlock: SpaceSemanticToken { spaces.spacePaddingBlockShorter }
    /// spaces.spacePaddingInlineMedium
    @objc open var chipSpacePaddingInlineIconEnd: SpaceSemanticToken { spaces.spacePaddingInlineMedium }
    /// spaces.spacePaddingInlineTall
    @objc open var chipSpacePaddingInlineIconNone: SpaceSemanticToken { spaces.spacePaddingInlineTall }
    /// spaces.spacePaddingInlineMedium
    @objc open var chipSpacePaddingInlineIconOnly: SpaceSemanticToken { spaces.spacePaddingInlineMedium }
    /// spaces.spacePaddingInlineMedium
    @objc open var chipSpacePaddingInlineIconStart: SpaceSemanticToken { spaces.spacePaddingInlineMedium }
    /// spaces.spacePaddingInlineTall
    @objc open var chipSpacePaddingInlineLabelEnd: SpaceSemanticToken { spaces.spacePaddingInlineTall }
    /// spaces.spacePaddingInlineTall
    @objc open var chipSpacePaddingInlineLabelStart: SpaceSemanticToken { spaces.spacePaddingInlineTall }
}
