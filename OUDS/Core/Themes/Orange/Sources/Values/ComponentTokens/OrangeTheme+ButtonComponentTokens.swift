//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System
//

import Foundation
import OUDSTokensComponent
import OUDSTokensRaw
import OUDSTokensSemantic

// ðŸ§± Tokens version: 0.6.0
// ðŸ¤– Generated by Tokenator

extension OrangeThemeButtonComponentTokensProvider: ButtonComponentTokens {
    @objc open var buttonSizeMaxHeightIconOnly: SizeSemanticToken { DimensionRawTokens.dimension600 }
    @objc open var buttonSizeMinHeight: SizeSemanticToken { DimensionRawTokens.dimension600 }
    @objc open var buttonSizeMinWidth: SizeSemanticToken { DimensionRawTokens.dimension600 }
    @objc open var buttonBorderRadius: BorderRadiusSemanticToken { borders.borderRadiusNone }
    @objc open var buttonBorderWidthDefault: BorderWidthSemanticToken { borders.borderWidthDefault }
    @objc open var buttonBorderWidthDefaultInteraction: BorderWidthSemanticToken { borders.borderWidthMedium }
    @objc open var buttonBorderWidthDefaultInteractionMono: BorderWidthSemanticToken { borders.borderWidthNone }
    @objc open var buttonBorderWidthMinimal: BorderWidthSemanticToken { borders.borderWidthNone }
    @objc open var buttonBorderWidthMinimalInteraction: BorderWidthSemanticToken { borders.borderWidthNone }
    @objc open var buttonColorBgDefaultFocusMono: MultipleColorSemanticTokens { colors.colorRepositoryOpacityBlackHigher }
    @objc open var buttonColorBgDefaultHoverMono: MultipleColorSemanticTokens { colors.colorRepositoryOpacityBlackHigher }
    @objc open var buttonColorBgDefaultLoadingMono: MultipleColorSemanticTokens { colors.colorRepositoryOpacityWhiteHigher }
    @objc open var buttonColorBgDefaultPressedMono: MultipleColorSemanticTokens { colors.colorRepositoryOpacityWhiteHigher }
    @objc open var buttonColorBgMinimalFocusMono: MultipleColorSemanticTokens { colors.colorRepositoryOpacityBlackHigher }
    @objc open var buttonColorBgMinimalHoverMono: MultipleColorSemanticTokens { colors.colorRepositoryOpacityBlackHigher }
    @objc open var buttonColorBgMinimalLoadingMono: MultipleColorSemanticTokens { colors.colorRepositoryOpacityWhiteHigher }
    @objc open var buttonColorBgMinimalPressedMono: MultipleColorSemanticTokens { colors.colorRepositoryOpacityWhiteHigher }
    @objc open var buttonColorBgStrongDisabledMono: MultipleColorSemanticTokens { colors.colorRepositoryOpacityBlackSoft }
    @objc open var buttonColorBgStrongEnabledMono: MultipleColorSemanticTokens { colors.colorRepositoryNeutralEmphasizedBlack }
    @objc open var buttonColorBgStrongFocusMono: MultipleColorSemanticTokens { colors.colorRepositoryOpacityBlackHigher }
    @objc open var buttonColorBgStrongHoverMono: MultipleColorSemanticTokens { colors.colorRepositoryOpacityBlackHigher }
    @objc open var buttonColorBgStrongLoadingMono: MultipleColorSemanticTokens { colors.colorRepositoryOpacityWhiteHigher }
    @objc open var buttonColorBgStrongPressedMono: MultipleColorSemanticTokens { colors.colorRepositoryOpacityWhiteHigher }
    @objc open var buttonColorBorderDefaultDisabledMono: MultipleColorSemanticTokens { colors.colorRepositoryOpacityBlackSoft }
    @objc open var buttonColorBorderDefaultEnabledMono: MultipleColorSemanticTokens { colors.colorRepositoryNeutralEmphasizedBlack }
    @objc open var buttonColorContentDefaultDisabledMono: MultipleColorSemanticTokens { colors.colorRepositoryOpacityBlackSoft }
    @objc open var buttonColorContentDefaultEnabledMono: MultipleColorSemanticTokens { colors.colorRepositoryNeutralEmphasizedBlack }
    @objc open var buttonColorContentDefaultFocusMono: MultipleColorSemanticTokens { colors.colorRepositoryNeutralMutedWhite }
    @objc open var buttonColorContentDefaultHoverMono: MultipleColorSemanticTokens { colors.colorRepositoryNeutralMutedWhite }
    @objc open var buttonColorContentDefaultLoadingMono: MultipleColorSemanticTokens { colors.colorRepositoryNeutralEmphasizedBlack }
    @objc open var buttonColorContentDefaultPressedMono: MultipleColorSemanticTokens { colors.colorRepositoryNeutralEmphasizedBlack }
    @objc open var buttonColorContentMinimalDisabledMono: MultipleColorSemanticTokens { colors.colorRepositoryOpacityBlackSoft }
    @objc open var buttonColorContentMinimalEnabledMono: MultipleColorSemanticTokens { colors.colorRepositoryNeutralEmphasizedBlack }
    @objc open var buttonColorContentMinimalFocusMono: MultipleColorSemanticTokens { colors.colorRepositoryNeutralMutedWhite }
    @objc open var buttonColorContentMinimalHoverMono: MultipleColorSemanticTokens { colors.colorRepositoryNeutralMutedWhite }
    @objc open var buttonColorContentMinimalLoadingMono: MultipleColorSemanticTokens { colors.colorRepositoryNeutralEmphasizedBlack }
    @objc open var buttonColorContentMinimalPressedMono: MultipleColorSemanticTokens { colors.colorRepositoryNeutralEmphasizedBlack }
    @objc open var buttonColorContentStrongDisabledMono: MultipleColorSemanticTokens { colors.colorRepositoryOpacityWhiteHigh }
    @objc open var buttonColorContentStrongEnabledMono: MultipleColorSemanticTokens { colors.colorRepositoryNeutralMutedWhite }
    @objc open var buttonColorContentStrongFocusMono: MultipleColorSemanticTokens { colors.colorRepositoryNeutralMutedWhite }
    @objc open var buttonColorContentStrongHoverMono: MultipleColorSemanticTokens { colors.colorRepositoryNeutralMutedWhite }
    @objc open var buttonColorContentStrongLoadingMono: MultipleColorSemanticTokens { colors.colorRepositoryNeutralEmphasizedBlack }
    @objc open var buttonColorContentStrongPressedMono: MultipleColorSemanticTokens { colors.colorRepositoryNeutralEmphasizedBlack }
    @objc open var buttonColorBgDefaultDisabled: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc open var buttonColorBgDefaultDisabledMono: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc open var buttonColorBgDefaultEnabled: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc open var buttonColorBgDefaultEnabledMono: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc open var buttonColorBgDefaultFocus: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc open var buttonColorBgDefaultHover: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc open var buttonColorBgDefaultLoading: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc open var buttonColorBgDefaultPressed: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc open var buttonColorBgMinimalDisabled: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc open var buttonColorBgMinimalDisabledMono: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc open var buttonColorBgMinimalEnabled: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc open var buttonColorBgMinimalEnabledMono: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc open var buttonColorBgMinimalFocus: MultipleColorSemanticTokens { colors.colorActionSupportFocus }
    @objc open var buttonColorBgMinimalHover: MultipleColorSemanticTokens { colors.colorActionSupportHover }
    @objc open var buttonColorBgMinimalLoading: MultipleColorSemanticTokens { colors.colorActionSupportLoading }
    @objc open var buttonColorBgMinimalPressed: MultipleColorSemanticTokens { colors.colorActionSupportPressed }
    @objc open var buttonColorBorderDefaultDisabled: MultipleColorSemanticTokens { colors.colorActionDisabled }
    @objc open var buttonColorBorderDefaultEnabled: MultipleColorSemanticTokens { colors.colorActionEnabled }
    @objc open var buttonColorBorderDefaultFocus: MultipleColorSemanticTokens { colors.colorActionFocus }
    @objc open var buttonColorBorderDefaultFocusMono: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc open var buttonColorBorderDefaultHover: MultipleColorSemanticTokens { colors.colorActionHover }
    @objc open var buttonColorBorderDefaultHoverMono: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc open var buttonColorBorderDefaultLoading: MultipleColorSemanticTokens { colors.colorActionLoading }
    @objc open var buttonColorBorderDefaultLoadingMono: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc open var buttonColorBorderDefaultPressed: MultipleColorSemanticTokens { colors.colorActionPressed }
    @objc open var buttonColorBorderDefaultPressedMono: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc open var buttonColorBorderMinimalDisabled: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc open var buttonColorBorderMinimalDisabledMono: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc open var buttonColorBorderMinimalEnabled: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc open var buttonColorBorderMinimalEnabledMono: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc open var buttonColorBorderMinimalFocus: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc open var buttonColorBorderMinimalFocusMono: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc open var buttonColorBorderMinimalHover: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc open var buttonColorBorderMinimalHoverMono: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc open var buttonColorBorderMinimalLoading: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc open var buttonColorBorderMinimalLoadingMono: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc open var buttonColorBorderMinimalPressed: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc open var buttonColorBorderMinimalPressedMono: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc open var buttonColorBorderStrongDisabledMono: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc open var buttonColorBorderStrongEnabledMono: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc open var buttonColorBorderStrongFocusMono: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc open var buttonColorBorderStrongHoverMono: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc open var buttonColorBorderStrongLoadingMono: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc open var buttonColorBorderStrongPressedMono: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc open var buttonColorContentDefaultDisabled: MultipleColorSemanticTokens { colors.colorActionDisabled }
    @objc open var buttonColorContentDefaultEnabled: MultipleColorSemanticTokens { colors.colorActionEnabled }
    @objc open var buttonColorContentDefaultFocus: MultipleColorSemanticTokens { colors.colorActionFocus }
    @objc open var buttonColorContentDefaultHover: MultipleColorSemanticTokens { colors.colorActionHover }
    @objc open var buttonColorContentDefaultLoading: MultipleColorSemanticTokens { colors.colorActionLoading }
    @objc open var buttonColorContentDefaultPressed: MultipleColorSemanticTokens { colors.colorActionPressed }
    @objc open var buttonColorContentMinimalDisabled: MultipleColorSemanticTokens { colors.colorActionDisabled }
    @objc open var buttonColorContentMinimalEnabled: MultipleColorSemanticTokens { colors.colorActionEnabled }
    @objc open var buttonColorContentMinimalFocus: MultipleColorSemanticTokens { colors.colorActionFocus }
    @objc open var buttonColorContentMinimalHover: MultipleColorSemanticTokens { colors.colorActionHover }
    @objc open var buttonColorContentMinimalLoading: MultipleColorSemanticTokens { colors.colorContentDefault }
    @objc open var buttonColorContentMinimalPressed: MultipleColorSemanticTokens { colors.colorActionPressed }
    @objc open var buttonSizeIcon: SizeSemanticToken { sizes.sizeIconWithLabelLargeSizeXs }
    @objc open var buttonSizeIconOnly: SizeSemanticToken { sizes.sizeIconWithLabelLargeSizeSm }
    @objc open var buttonSizeLoader: SizeSemanticToken { sizes.sizeIconWithLabelLargeSizeXs }
    @objc open var buttonSpaceColumnGapArrow: SpaceSemanticToken { spaces.spaceColumnGapShorter }
    @objc open var buttonSpaceColumnGapIcon: SpaceSemanticToken { spaces.spaceColumnGapShort }
    @objc open var buttonSpaceInsetIconOnly: SpaceSemanticToken { spaces.spaceInsetMedium }
    @objc open var buttonSpacePaddingBlock: SpaceSemanticToken { spaces.spacePaddingBlockMedium }
    @objc open var buttonSpacePaddingInlineArrowEnd: SpaceSemanticToken { spaces.spacePaddingInlineTall }
    @objc open var buttonSpacePaddingInlineArrowStart: SpaceSemanticToken { spaces.spacePaddingInlineTall }
    @objc open var buttonSpacePaddingInlineEndIconStart: SpaceSemanticToken { spaces.spacePaddingInlineSpacious }
    @objc open var buttonSpacePaddingInlineIconNone: SpaceSemanticToken { spaces.spacePaddingInlineHuge }
    @objc open var buttonSpacePaddingInlineIconStart: SpaceSemanticToken { spaces.spacePaddingInlineTaller }
    @objc open var buttonSpacePaddingInlineStartIconEnd: SpaceSemanticToken { spaces.spacePaddingInlineSpacious }
}
