//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System
//

import Foundation
import OUDSTokensComponent
import OUDSTokensSemantic

// ðŸ§¬ Tokens version: 1.5.0 (Orange brand)
// ðŸ¤– Generated by Tokenator

extension OrangeThemeTagInputComponentTokensProvider: TagInputComponentTokens {
    /// Has for value token colors.colorActionSupportEnabled
    @objc open var tagInputColorBgEnabled: MultipleColorSemanticTokens { colors.colorActionSupportEnabled }
    /// Has for value token colors.colorActionSupportHover
    @objc open var tagInputColorBgHover: MultipleColorSemanticTokens { colors.colorActionSupportHover }
    /// Has for value token colors.colorActionSupportPressed
    @objc open var tagInputColorBgPressed: MultipleColorSemanticTokens { colors.colorActionSupportPressed }
    /// Has for value token colors.colorActionSupportFocus
    @objc open var tagInputColorBgFocus: MultipleColorSemanticTokens { colors.colorActionSupportFocus }
    /// Has for value token colors.colorActionEnabled
    @objc open var tagInputColorContentEnabled: MultipleColorSemanticTokens { colors.colorActionEnabled }
    /// Has for value token colors.colorActionHover
    @objc open var tagInputColorContentHover: MultipleColorSemanticTokens { colors.colorActionHover }
    /// Has for value token colors.colorActionPressed
    @objc open var tagInputColorContentPressed: MultipleColorSemanticTokens { colors.colorActionPressed }
    /// Has for value token colors.colorActionFocus
    @objc open var tagInputColorContentFocus: MultipleColorSemanticTokens { colors.colorActionFocus }
    /// Has for value token colors.colorBorderDefault
    @objc open var tagInputColorBorderEnabled: MultipleColorSemanticTokens { colors.colorBorderDefault }
    /// Has for value token colors.colorActionHover
    @objc open var tagInputColorBorderHover: MultipleColorSemanticTokens { colors.colorActionHover }
    /// Has for value token colors.colorActionPressed
    @objc open var tagInputColorBorderPressed: MultipleColorSemanticTokens { colors.colorActionPressed }
    /// Has for value token colors.colorActionFocus
    @objc open var tagInputColorBorderFocus: MultipleColorSemanticTokens { colors.colorActionFocus }
    /// Has for value token borders.borderWidthDefault
    @objc open var tagInputBorderWidthDefault: BorderWidthSemanticToken { borders.borderWidthDefault }
    /// Has for value token borders.borderWidthMedium
    @objc open var tagInputBorderWidthDefaultInteraction: BorderWidthSemanticToken { borders.borderWidthMedium }
}
