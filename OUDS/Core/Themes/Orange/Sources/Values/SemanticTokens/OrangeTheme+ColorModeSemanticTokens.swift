//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System
//

import Foundation
import OUDSTokensRaw
import OUDSTokensSemantic

// ðŸ§± Tokens version: 0.11.0
// ðŸ¤– Generated by Tokenator

extension OrangeThemeColorModeSemanticTokensProvider: ColorModeSemanticTokens {
    /// ColorModeRawTokens.monochromeLight
    @objc open var modeOnBrandPrimaryLight: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight }
    /// ColorModeRawTokens.undefined
    @objc open var modeOnBrandSecondaryLight: ColorModeSemanticToken { ColorModeRawTokens.undefined }
    /// ColorModeRawTokens.undefined
    @objc open var modeOnBrandTertiaryLight: ColorModeSemanticToken { ColorModeRawTokens.undefined }
    /// ColorModeRawTokens.monochromeLight
    @objc open var modeOnStatusAccentEmphasizedLight: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight }
    /// ColorModeRawTokens.light
    @objc open var modeOnStatusAccentMutedLight: ColorModeSemanticToken { ColorModeRawTokens.light }
    /// ColorModeRawTokens.monochromeLight
    @objc open var modeOnStatusInfoEmphasizedLight: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight }
    /// ColorModeRawTokens.light
    @objc open var modeOnStatusInfoMutedLight: ColorModeSemanticToken { ColorModeRawTokens.light }
    /// ColorModeRawTokens.monochromeDark
    @objc open var modeOnStatusNegativeEmphasizedLight: ColorModeSemanticToken { ColorModeRawTokens.monochromeDark }
    /// ColorModeRawTokens.light
    @objc open var modeOnStatusNegativeMutedLight: ColorModeSemanticToken { ColorModeRawTokens.light }
    /// ColorModeRawTokens.monochromeDark
    @objc open var modeOnStatusNeutralEmphasizedLight: ColorModeSemanticToken { ColorModeRawTokens.monochromeDark }
    /// ColorModeRawTokens.light
    @objc open var modeOnStatusNeutralMutedLight: ColorModeSemanticToken { ColorModeRawTokens.light }
    /// ColorModeRawTokens.monochromeLight
    @objc open var modeOnStatusPositiveEmphasizedLight: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight }
    /// ColorModeRawTokens.light
    @objc open var modeOnStatusPositiveMutedLight: ColorModeSemanticToken { ColorModeRawTokens.light }
    /// ColorModeRawTokens.monochromeLight
    @objc open var modeOnStatusWarningEmphasizedLight: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight }
    /// ColorModeRawTokens.light
    @objc open var modeOnStatusWarningMutedLight: ColorModeSemanticToken { ColorModeRawTokens.light }
    /// ColorModeRawTokens.monochromeLight
    @objc open var modeOnBrandPrimaryDark: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight }
    /// ColorModeRawTokens.undefined
    @objc open var modeOnBrandSecondaryDark: ColorModeSemanticToken { ColorModeRawTokens.undefined }
    /// ColorModeRawTokens.undefined
    @objc open var modeOnBrandTertiaryDark: ColorModeSemanticToken { ColorModeRawTokens.undefined }
    /// ColorModeRawTokens.monochromeLight
    @objc open var modeOnStatusAccentEmphasizedDark: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight }
    /// ColorModeRawTokens.dark
    @objc open var modeOnStatusAccentMutedDark: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// ColorModeRawTokens.monochromeLight
    @objc open var modeOnStatusInfoEmphasizedDark: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight }
    /// ColorModeRawTokens.dark
    @objc open var modeOnStatusInfoMutedDark: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// ColorModeRawTokens.monochromeLight
    @objc open var modeOnStatusNegativeEmphasizedDark: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight }
    /// ColorModeRawTokens.dark
    @objc open var modeOnStatusNegativeMutedDark: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// ColorModeRawTokens.monochromeLight
    @objc open var modeOnStatusNeutralEmphasizedDark: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight }
    /// ColorModeRawTokens.dark
    @objc open var modeOnStatusNeutralMutedDark: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// ColorModeRawTokens.monochromeLight
    @objc open var modeOnStatusPositiveEmphasizedDark: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight }
    /// ColorModeRawTokens.dark
    @objc open var modeOnStatusPositiveMutedDark: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// ColorModeRawTokens.monochromeLight
    @objc open var modeOnStatusWarningEmphasizedDark: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight }
    /// ColorModeRawTokens.dark
    @objc open var modeOnStatusWarningMutedDark: ColorModeSemanticToken { ColorModeRawTokens.dark }
}
