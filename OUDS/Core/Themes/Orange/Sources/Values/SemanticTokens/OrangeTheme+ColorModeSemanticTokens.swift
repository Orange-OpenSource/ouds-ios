//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System
//

import Foundation
import OUDSTokensRaw
import OUDSTokensSemantic

// ðŸ§± Tokens version: undefined
// ðŸ¤– Generated by Tokenator

extension OrangeThemeColorModeSemanticTokensProvider: ColorModeSemanticTokens {
    /// Has for value token ColorModeRawTokens.light
    @objc open var modeOnBgPrimaryLight: ColorModeRawToken { ColorModeRawTokens.light }
    /// Has for value token ColorModeRawTokens.dark
    @objc open var modeOnBgPrimaryDark: ColorModeRawToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.light
    @objc open var modeOnBgSecondaryLight: ColorModeRawToken { ColorModeRawTokens.light }
    /// Has for value token ColorModeRawTokens.dark
    @objc open var modeOnBgSecondaryDark: ColorModeRawToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.light
    @objc open var modeOnBgTertiaryLight: ColorModeRawToken { ColorModeRawTokens.light }
    /// Has for value token ColorModeRawTokens.dark
    @objc open var modeOnBgTertiaryDark: ColorModeRawToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.dark
    @objc open var modeOnBgEmphasizedLight: ColorModeRawToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.dark
    @objc open var modeOnBgEmphasizedDark: ColorModeRawToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc open var modeOnBrandPrimaryLight: ColorModeRawToken { ColorModeRawTokens.monochromeLight }
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc open var modeOnBrandPrimaryDark: ColorModeRawToken { ColorModeRawTokens.monochromeLight }
    /// Has for value token ColorModeRawTokens.undefined
    @objc open var modeOnBrandSecondaryLight: ColorModeRawToken { ColorModeRawTokens.undefined }
    /// Has for value token ColorModeRawTokens.undefined
    @objc open var modeOnBrandSecondaryDark: ColorModeRawToken { ColorModeRawTokens.undefined }
    /// Has for value token ColorModeRawTokens.undefined
    @objc open var modeOnBrandTertiaryLight: ColorModeRawToken { ColorModeRawTokens.undefined }
    /// Has for value token ColorModeRawTokens.undefined
    @objc open var modeOnBrandTertiaryDark: ColorModeRawToken { ColorModeRawTokens.undefined }
    /// Has for value token ColorModeRawTokens.light
    @objc open var modeOnStatusNeutralMutedLight: ColorModeRawToken { ColorModeRawTokens.light }
    /// Has for value token ColorModeRawTokens.dark
    @objc open var modeOnStatusNeutralMutedDark: ColorModeRawToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.dark
    @objc open var modeOnStatusNeutralEmphasizedLight: ColorModeRawToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.light
    @objc open var modeOnStatusNeutralEmphasizedDark: ColorModeRawToken { ColorModeRawTokens.light }
    /// Has for value token ColorModeRawTokens.light
    @objc open var modeOnStatusPositiveMutedLight: ColorModeRawToken { ColorModeRawTokens.light }
    /// Has for value token ColorModeRawTokens.dark
    @objc open var modeOnStatusPositiveMutedDark: ColorModeRawToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc open var modeOnStatusPositiveEmphasizedLight: ColorModeRawToken { ColorModeRawTokens.monochromeLight }
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc open var modeOnStatusPositiveEmphasizedDark: ColorModeRawToken { ColorModeRawTokens.monochromeLight }
    /// Has for value token ColorModeRawTokens.light
    @objc open var modeOnStatusInfoMutedLight: ColorModeRawToken { ColorModeRawTokens.light }
    /// Has for value token ColorModeRawTokens.dark
    @objc open var modeOnStatusInfoMutedDark: ColorModeRawToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc open var modeOnStatusInfoEmphasizedLight: ColorModeRawToken { ColorModeRawTokens.monochromeLight }
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc open var modeOnStatusInfoEmphasizedDark: ColorModeRawToken { ColorModeRawTokens.monochromeLight }
    /// Has for value token ColorModeRawTokens.light
    @objc open var modeOnStatusWarningMutedLight: ColorModeRawToken { ColorModeRawTokens.light }
    /// Has for value token ColorModeRawTokens.dark
    @objc open var modeOnStatusWarningMutedDark: ColorModeRawToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc open var modeOnStatusWarningEmphasizedLight: ColorModeRawToken { ColorModeRawTokens.monochromeLight }
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc open var modeOnStatusWarningEmphasizedDark: ColorModeRawToken { ColorModeRawTokens.monochromeLight }
    /// Has for value token ColorModeRawTokens.light
    @objc open var modeOnStatusNegativeMutedLight: ColorModeRawToken { ColorModeRawTokens.light }
    /// Has for value token ColorModeRawTokens.dark
    @objc open var modeOnStatusNegativeMutedDark: ColorModeRawToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.monochromeDark
    @objc open var modeOnStatusNegativeEmphasizedLight: ColorModeRawToken { ColorModeRawTokens.monochromeDark }
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc open var modeOnStatusNegativeEmphasizedDark: ColorModeRawToken { ColorModeRawTokens.monochromeLight }
    /// Has for value token ColorModeRawTokens.light
    @objc open var modeOnStatusAccentMutedLight: ColorModeRawToken { ColorModeRawTokens.light }
    /// Has for value token ColorModeRawTokens.dark
    @objc open var modeOnStatusAccentMutedDark: ColorModeRawToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc open var modeOnStatusAccentEmphasizedLight: ColorModeRawToken { ColorModeRawTokens.monochromeLight }
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc open var modeOnStatusAccentEmphasizedDark: ColorModeRawToken { ColorModeRawTokens.monochromeLight }
    /// Has for value token ColorModeRawTokens.light
    @objc open var modeOnOverlayDefaultLight: ColorModeRawToken { ColorModeRawTokens.light }
    /// Has for value token ColorModeRawTokens.dark
    @objc open var modeOnOverlayDefaultDark: ColorModeRawToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.dark
    @objc open var modeOnOverlayEmphasizedLight: ColorModeRawToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.light
    @objc open var modeOnOverlayEmphasizedDark: ColorModeRawToken { ColorModeRawTokens.light }
    /// Has for value token ColorModeRawTokens.light
    @objc open var modeOnModalLight: ColorModeRawToken { ColorModeRawTokens.light }
    /// Has for value token ColorModeRawTokens.dark
    @objc open var modeOnModalDark: ColorModeRawToken { ColorModeRawTokens.dark }
}
