//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System
//

import Foundation
import OUDSTokensRaw
import OUDSTokensSemantic

// ðŸ§¬ Tokens version: 1.5.0 (Orange brand)
// ðŸ¤– Generated by Tokenator

extension OrangeThemeFontSemanticTokensProvider: FontSemanticTokens {
    /// Has for value token FontRawTokens.fontFamilySystemSfPro
    @objc open var fontFamilySystem: FontFamilySemanticToken { FontRawTokens.fontFamilySystemSfPro }
    /// Has for value token fontFamilySystem
    @objc open var fontFamilyDisplay: FontFamilySemanticToken { fontFamilySystem }
    /// Has for value token fontFamilySystem
    @objc open var fontFamilyHeading: FontFamilySemanticToken { fontFamilySystem }
    /// Has for value token fontFamilySystem
    @objc open var fontFamilyBody: FontFamilySemanticToken { fontFamilySystem }
    /// Has for value token fontFamilySystem
    @objc open var fontFamilyLabel: FontFamilySemanticToken { fontFamilySystem }
    /// Has for value token FontRawTokens.fontFamilyMonospaceSfMono
    @objc open var fontFamilyCode: FontFamilySemanticToken { FontRawTokens.fontFamilyMonospaceSfMono }
    /// Has for value token FontRawTokens.fontWeight400
    @objc open var fontWeightSystemDefault: FontWeightSemanticToken { FontRawTokens.fontWeight400 }
    /// Has for value token FontRawTokens.fontWeight700
    @objc open var fontWeightSystemStrong: FontWeightSemanticToken { FontRawTokens.fontWeight700 }
    /// Has for value token fontWeightSystemStrong
    @objc open var fontWeightDisplay: FontWeightSemanticToken { fontWeightSystemStrong }
    /// Has for value token fontWeightSystemStrong
    @objc open var fontWeightHeading: FontWeightSemanticToken { fontWeightSystemStrong }
    /// Has for value token fontWeightSystemDefault
    @objc open var fontWeightBodyDefault: FontWeightSemanticToken { fontWeightSystemDefault }
    /// Has for value token fontWeightSystemStrong
    @objc open var fontWeightBodyStrong: FontWeightSemanticToken { fontWeightSystemStrong }
    /// Has for value token fontWeightSystemDefault
    @objc open var fontWeightLabelDefault: FontWeightSemanticToken { fontWeightSystemDefault }
    /// Has for value token fontWeightSystemStrong
    @objc open var fontWeightLabelStrong: FontWeightSemanticToken { fontWeightSystemStrong }
    /// Has for value token FontRawTokens.fontWeight400
    @objc open var fontWeightCode: FontWeightSemanticToken { FontRawTokens.fontWeight400 }
    /// Has for value token FontRawTokens.fontSize850
    @objc open var fontSizeDisplayLargeMobile: FontSizeSemanticToken { FontRawTokens.fontSize850 }
    /// Has for value token FontRawTokens.fontSize1450
    @objc open var fontSizeDisplayLargeTablet: FontSizeSemanticToken { FontRawTokens.fontSize1450 }
    /// Has for value token FontRawTokens.fontSize750
    @objc open var fontSizeDisplayMediumMobile: FontSizeSemanticToken { FontRawTokens.fontSize750 }
    /// Has for value token FontRawTokens.fontSize1050
    @objc open var fontSizeDisplayMediumTablet: FontSizeSemanticToken { FontRawTokens.fontSize1050 }
    /// Has for value token FontRawTokens.fontSize650
    @objc open var fontSizeDisplaySmallMobile: FontSizeSemanticToken { FontRawTokens.fontSize650 }
    /// Has for value token FontRawTokens.fontSize850
    @objc open var fontSizeDisplaySmallTablet: FontSizeSemanticToken { FontRawTokens.fontSize850 }
    /// Has for value token FontRawTokens.fontSize550
    @objc open var fontSizeHeadingXlargeMobile: FontSizeSemanticToken { FontRawTokens.fontSize550 }
    /// Has for value token FontRawTokens.fontSize750
    @objc open var fontSizeHeadingXlargeTablet: FontSizeSemanticToken { FontRawTokens.fontSize750 }
    /// Has for value token FontRawTokens.fontSize450
    @objc open var fontSizeHeadingLargeMobile: FontSizeSemanticToken { FontRawTokens.fontSize450 }
    /// Has for value token FontRawTokens.fontSize550
    @objc open var fontSizeHeadingLargeTablet: FontSizeSemanticToken { FontRawTokens.fontSize550 }
    /// Has for value token FontRawTokens.fontSize350
    @objc open var fontSizeHeadingMediumMobile: FontSizeSemanticToken { FontRawTokens.fontSize350 }
    /// Has for value token FontRawTokens.fontSize450
    @objc open var fontSizeHeadingMediumTablet: FontSizeSemanticToken { FontRawTokens.fontSize450 }
    /// Has for value token FontRawTokens.fontSize300
    @objc open var fontSizeHeadingSmallMobile: FontSizeSemanticToken { FontRawTokens.fontSize300 }
    /// Has for value token FontRawTokens.fontSize350
    @objc open var fontSizeHeadingSmallTablet: FontSizeSemanticToken { FontRawTokens.fontSize350 }
    /// Has for value token FontRawTokens.fontSize250
    @objc open var fontSizeBodyLargeMobile: FontSizeSemanticToken { FontRawTokens.fontSize250 }
    /// Has for value token FontRawTokens.fontSize250
    @objc open var fontSizeBodyLargeTablet: FontSizeSemanticToken { FontRawTokens.fontSize250 }
    /// Has for value token FontRawTokens.fontSize200
    @objc open var fontSizeBodyMediumMobile: FontSizeSemanticToken { FontRawTokens.fontSize200 }
    /// Has for value token FontRawTokens.fontSize200
    @objc open var fontSizeBodyMediumTablet: FontSizeSemanticToken { FontRawTokens.fontSize200 }
    /// Has for value token FontRawTokens.fontSize150
    @objc open var fontSizeBodySmallMobile: FontSizeSemanticToken { FontRawTokens.fontSize150 }
    /// Has for value token FontRawTokens.fontSize150
    @objc open var fontSizeBodySmallTablet: FontSizeSemanticToken { FontRawTokens.fontSize150 }
    /// Has for value token FontRawTokens.fontSize300
    @objc open var fontSizeLabelXlarge: FontSizeSemanticToken { FontRawTokens.fontSize300 }
    /// Has for value token FontRawTokens.fontSize250
    @objc open var fontSizeLabelLarge: FontSizeSemanticToken { FontRawTokens.fontSize250 }
    /// Has for value token FontRawTokens.fontSize200
    @objc open var fontSizeLabelMedium: FontSizeSemanticToken { FontRawTokens.fontSize200 }
    /// Has for value token FontRawTokens.fontSize150
    @objc open var fontSizeLabelSmall: FontSizeSemanticToken { FontRawTokens.fontSize150 }
    /// Has for value token FontRawTokens.fontSize200
    @objc open var fontSizeCodeMedium: FontSizeSemanticToken { FontRawTokens.fontSize200 }
    /// Has for value token FontRawTokens.fontLineHeight1050
    @objc open var fontLineHeightDisplayLargeMobile: FontLineHeightSemanticToken { FontRawTokens.fontLineHeight1050 }
    /// Has for value token FontRawTokens.fontLineHeight1850
    @objc open var fontLineHeightDisplayLargeTablet: FontLineHeightSemanticToken { FontRawTokens.fontLineHeight1850 }
    /// Has for value token FontRawTokens.fontLineHeight950
    @objc open var fontLineHeightDisplayMediumMobile: FontLineHeightSemanticToken { FontRawTokens.fontLineHeight950 }
    /// Has for value token FontRawTokens.fontLineHeight1250
    @objc open var fontLineHeightDisplayMediumTablet: FontLineHeightSemanticToken { FontRawTokens.fontLineHeight1250 }
    /// Has for value token FontRawTokens.fontLineHeight850
    @objc open var fontLineHeightDisplaySmallMobile: FontLineHeightSemanticToken { FontRawTokens.fontLineHeight850 }
    /// Has for value token FontRawTokens.fontLineHeight1050
    @objc open var fontLineHeightDisplaySmallTablet: FontLineHeightSemanticToken { FontRawTokens.fontLineHeight1050 }
    /// Has for value token FontRawTokens.fontLineHeight750
    @objc open var fontLineHeightHeadingXlargeMobile: FontLineHeightSemanticToken { FontRawTokens.fontLineHeight750 }
    /// Has for value token FontRawTokens.fontLineHeight950
    @objc open var fontLineHeightHeadingXlargeTablet: FontLineHeightSemanticToken { FontRawTokens.fontLineHeight950 }
    /// Has for value token FontRawTokens.fontLineHeight650
    @objc open var fontLineHeightHeadingLargeMobile: FontLineHeightSemanticToken { FontRawTokens.fontLineHeight650 }
    /// Has for value token FontRawTokens.fontLineHeight750
    @objc open var fontLineHeightHeadingLargeTablet: FontLineHeightSemanticToken { FontRawTokens.fontLineHeight750 }
    /// Has for value token FontRawTokens.fontLineHeight550
    @objc open var fontLineHeightHeadingMediumMobile: FontLineHeightSemanticToken { FontRawTokens.fontLineHeight550 }
    /// Has for value token FontRawTokens.fontLineHeight650
    @objc open var fontLineHeightHeadingMediumTablet: FontLineHeightSemanticToken { FontRawTokens.fontLineHeight650 }
    /// Has for value token FontRawTokens.fontLineHeight450
    @objc open var fontLineHeightHeadingSmallMobile: FontLineHeightSemanticToken { FontRawTokens.fontLineHeight450 }
    /// Has for value token FontRawTokens.fontLineHeight550
    @objc open var fontLineHeightHeadingSmallTablet: FontLineHeightSemanticToken { FontRawTokens.fontLineHeight550 }
    /// Has for value token FontRawTokens.fontLineHeight450
    @objc open var fontLineHeightBodyLargeMobile: FontLineHeightSemanticToken { FontRawTokens.fontLineHeight450 }
    /// Has for value token FontRawTokens.fontLineHeight450
    @objc open var fontLineHeightBodyLargeTablet: FontLineHeightSemanticToken { FontRawTokens.fontLineHeight450 }
    /// Has for value token FontRawTokens.fontLineHeight350
    @objc open var fontLineHeightBodyMediumMobile: FontLineHeightSemanticToken { FontRawTokens.fontLineHeight350 }
    /// Has for value token FontRawTokens.fontLineHeight350
    @objc open var fontLineHeightBodyMediumTablet: FontLineHeightSemanticToken { FontRawTokens.fontLineHeight350 }
    /// Has for value token FontRawTokens.fontLineHeight250
    @objc open var fontLineHeightBodySmallMobile: FontLineHeightSemanticToken { FontRawTokens.fontLineHeight250 }
    /// Has for value token FontRawTokens.fontLineHeight250
    @objc open var fontLineHeightBodySmallTablet: FontLineHeightSemanticToken { FontRawTokens.fontLineHeight250 }
    /// Has for value token FontRawTokens.fontLineHeight450
    @objc open var fontLineHeightLabelXlarge: FontLineHeightSemanticToken { FontRawTokens.fontLineHeight450 }
    /// Has for value token FontRawTokens.fontLineHeight450
    @objc open var fontLineHeightLabelLarge: FontLineHeightSemanticToken { FontRawTokens.fontLineHeight450 }
    /// Has for value token FontRawTokens.fontLineHeight350
    @objc open var fontLineHeightLabelMedium: FontLineHeightSemanticToken { FontRawTokens.fontLineHeight350 }
    /// Has for value token FontRawTokens.fontLineHeight250
    @objc open var fontLineHeightLabelSmall: FontLineHeightSemanticToken { FontRawTokens.fontLineHeight250 }
    /// Has for value token FontRawTokens.fontLineHeight350
    @objc open var fontLineHeightCodeMedium: FontLineHeightSemanticToken { FontRawTokens.fontLineHeight350 }
    /// Has for value token FontRawTokens.fontLetterSpacing850
    @objc open var fontLetterSpacingDisplayLargeMobile: FontLetterSpacingSemanticToken { FontRawTokens.fontLetterSpacing850 }
    /// Has for value token FontRawTokens.fontLetterSpacing1450
    @objc open var fontLetterSpacingDisplayLargeTablet: FontLetterSpacingSemanticToken { FontRawTokens.fontLetterSpacing1450 }
    /// Has for value token FontRawTokens.fontLetterSpacing750
    @objc open var fontLetterSpacingDisplayMediumMobile: FontLetterSpacingSemanticToken { FontRawTokens.fontLetterSpacing750 }
    /// Has for value token FontRawTokens.fontLetterSpacing1050
    @objc open var fontLetterSpacingDisplayMediumTablet: FontLetterSpacingSemanticToken { FontRawTokens.fontLetterSpacing1050 }
    /// Has for value token FontRawTokens.fontLetterSpacing650
    @objc open var fontLetterSpacingDisplaySmallMobile: FontLetterSpacingSemanticToken { FontRawTokens.fontLetterSpacing650 }
    /// Has for value token FontRawTokens.fontLetterSpacing850
    @objc open var fontLetterSpacingDisplaySmallTablet: FontLetterSpacingSemanticToken { FontRawTokens.fontLetterSpacing850 }
    /// Has for value token FontRawTokens.fontLetterSpacing550
    @objc open var fontLetterSpacingHeadingXlargeMobile: FontLetterSpacingSemanticToken { FontRawTokens.fontLetterSpacing550 }
    /// Has for value token FontRawTokens.fontLetterSpacing750
    @objc open var fontLetterSpacingHeadingXlargeTablet: FontLetterSpacingSemanticToken { FontRawTokens.fontLetterSpacing750 }
    /// Has for value token FontRawTokens.fontLetterSpacing450
    @objc open var fontLetterSpacingHeadingLargeMobile: FontLetterSpacingSemanticToken { FontRawTokens.fontLetterSpacing450 }
    /// Has for value token FontRawTokens.fontLetterSpacing550
    @objc open var fontLetterSpacingHeadingLargeTablet: FontLetterSpacingSemanticToken { FontRawTokens.fontLetterSpacing550 }
    /// Has for value token FontRawTokens.fontLetterSpacing350
    @objc open var fontLetterSpacingHeadingMediumMobile: FontLetterSpacingSemanticToken { FontRawTokens.fontLetterSpacing350 }
    /// Has for value token FontRawTokens.fontLetterSpacing450
    @objc open var fontLetterSpacingHeadingMediumTablet: FontLetterSpacingSemanticToken { FontRawTokens.fontLetterSpacing450 }
    /// Has for value token FontRawTokens.fontLetterSpacing300
    @objc open var fontLetterSpacingHeadingSmallMobile: FontLetterSpacingSemanticToken { FontRawTokens.fontLetterSpacing300 }
    /// Has for value token FontRawTokens.fontLetterSpacing350
    @objc open var fontLetterSpacingHeadingSmallTablet: FontLetterSpacingSemanticToken { FontRawTokens.fontLetterSpacing350 }
    /// Has for value token FontRawTokens.fontLetterSpacing250
    @objc open var fontLetterSpacingBodyLargeMobile: FontLetterSpacingSemanticToken { FontRawTokens.fontLetterSpacing250 }
    /// Has for value token FontRawTokens.fontLetterSpacing250
    @objc open var fontLetterSpacingBodyLargeTablet: FontLetterSpacingSemanticToken { FontRawTokens.fontLetterSpacing250 }
    /// Has for value token FontRawTokens.fontLetterSpacing200
    @objc open var fontLetterSpacingBodyMediumMobile: FontLetterSpacingSemanticToken { FontRawTokens.fontLetterSpacing200 }
    /// Has for value token FontRawTokens.fontLetterSpacing200
    @objc open var fontLetterSpacingBodyMediumTablet: FontLetterSpacingSemanticToken { FontRawTokens.fontLetterSpacing200 }
    /// Has for value token FontRawTokens.fontLetterSpacing150
    @objc open var fontLetterSpacingBodySmallMobile: FontLetterSpacingSemanticToken { FontRawTokens.fontLetterSpacing150 }
    /// Has for value token FontRawTokens.fontLetterSpacing150
    @objc open var fontLetterSpacingBodySmallTablet: FontLetterSpacingSemanticToken { FontRawTokens.fontLetterSpacing150 }
    /// Has for value token FontRawTokens.fontLetterSpacing300
    @objc open var fontLetterSpacingLabelXlarge: FontLetterSpacingSemanticToken { FontRawTokens.fontLetterSpacing300 }
    /// Has for value token FontRawTokens.fontLetterSpacing250
    @objc open var fontLetterSpacingLabelLarge: FontLetterSpacingSemanticToken { FontRawTokens.fontLetterSpacing250 }
    /// Has for value token FontRawTokens.fontLetterSpacing200
    @objc open var fontLetterSpacingLabelMedium: FontLetterSpacingSemanticToken { FontRawTokens.fontLetterSpacing200 }
    /// Has for value token FontRawTokens.fontLetterSpacing150
    @objc open var fontLetterSpacingLabelSmall: FontLetterSpacingSemanticToken { FontRawTokens.fontLetterSpacing150 }
    /// Has for value token FontRawTokens.fontLetterSpacing200
    @objc open var fontLetterSpacingCodeMedium: FontLetterSpacingSemanticToken { FontRawTokens.fontLetterSpacing200 }
}
