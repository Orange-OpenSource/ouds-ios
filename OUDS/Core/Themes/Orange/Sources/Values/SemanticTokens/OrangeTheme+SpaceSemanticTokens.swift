//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System
//

import Foundation
import OUDSTokensRaw
import OUDSTokensSemantic

// ðŸ§± Tokens version: 1.1.0
// ðŸ¤– Generated by Tokenator

extension OrangeThemeSpaceSemanticTokensProvider: SpaceSemanticTokens {
    /// Has for value token DimensionRawTokens.dimension0
    @objc open var spaceScaledNoneMobile: SpaceSemanticToken { DimensionRawTokens.dimension0 }
    /// Has for value token DimensionRawTokens.dimension0
    @objc open var spaceScaledNoneTablet: SpaceSemanticToken { DimensionRawTokens.dimension0 }
    /// Has for value token DimensionRawTokens.dimensionOutOfSystem50
    @objc open var spaceScaled3xsMobile: SpaceSemanticToken { DimensionRawTokens.dimensionOutOfSystem50 }
    /// Has for value token DimensionRawTokens.dimension50
    @objc open var spaceScaled3xsTablet: SpaceSemanticToken { DimensionRawTokens.dimension50 }
    /// Has for value token DimensionRawTokens.dimension50
    @objc open var spaceScaled2xsMobile: SpaceSemanticToken { DimensionRawTokens.dimension50 }
    /// Has for value token DimensionRawTokens.dimension100
    @objc open var spaceScaled2xsTablet: SpaceSemanticToken { DimensionRawTokens.dimension100 }
    /// Has for value token DimensionRawTokens.dimension100
    @objc open var spaceScaledXsMobile: SpaceSemanticToken { DimensionRawTokens.dimension100 }
    /// Has for value token DimensionRawTokens.dimension150
    @objc open var spaceScaledXsTablet: SpaceSemanticToken { DimensionRawTokens.dimension150 }
    /// Has for value token DimensionRawTokens.dimension150
    @objc open var spaceScaledSmMobile: SpaceSemanticToken { DimensionRawTokens.dimension150 }
    /// Has for value token DimensionRawTokens.dimension200
    @objc open var spaceScaledSmTablet: SpaceSemanticToken { DimensionRawTokens.dimension200 }
    /// Has for value token DimensionRawTokens.dimension200
    @objc open var spaceScaledMdMobile: SpaceSemanticToken { DimensionRawTokens.dimension200 }
    /// Has for value token DimensionRawTokens.dimension300
    @objc open var spaceScaledMdTablet: SpaceSemanticToken { DimensionRawTokens.dimension300 }
    /// Has for value token DimensionRawTokens.dimension300
    @objc open var spaceScaledLgMobile: SpaceSemanticToken { DimensionRawTokens.dimension300 }
    /// Has for value token DimensionRawTokens.dimension400
    @objc open var spaceScaledLgTablet: SpaceSemanticToken { DimensionRawTokens.dimension400 }
    /// Has for value token DimensionRawTokens.dimension400
    @objc open var spaceScaledXlMobile: SpaceSemanticToken { DimensionRawTokens.dimension400 }
    /// Has for value token DimensionRawTokens.dimension500
    @objc open var spaceScaledXlTablet: SpaceSemanticToken { DimensionRawTokens.dimension500 }
    /// Has for value token DimensionRawTokens.dimension500
    @objc open var spaceScaled2xlMobile: SpaceSemanticToken { DimensionRawTokens.dimension500 }
    /// Has for value token DimensionRawTokens.dimension600
    @objc open var spaceScaled2xlTablet: SpaceSemanticToken { DimensionRawTokens.dimension600 }
    /// Has for value token DimensionRawTokens.dimension600
    @objc open var spaceScaled3xlMobile: SpaceSemanticToken { DimensionRawTokens.dimension600 }
    /// Has for value token DimensionRawTokens.dimension700
    @objc open var spaceScaled3xlTablet: SpaceSemanticToken { DimensionRawTokens.dimension700 }
    /// Has for value token DimensionRawTokens.dimension0
    @objc open var spaceFixedNone: SpaceSemanticToken { DimensionRawTokens.dimension0 }
    /// Has for value token DimensionRawTokens.dimensionOutOfSystem50
    @objc open var spaceFixed3xs: SpaceSemanticToken { DimensionRawTokens.dimensionOutOfSystem50 }
    /// Has for value token DimensionRawTokens.dimension50
    @objc open var spaceFixed2xs: SpaceSemanticToken { DimensionRawTokens.dimension50 }
    /// Has for value token DimensionRawTokens.dimension100
    @objc open var spaceFixedXs: SpaceSemanticToken { DimensionRawTokens.dimension100 }
    /// Has for value token DimensionRawTokens.dimension150
    @objc open var spaceFixedSm: SpaceSemanticToken { DimensionRawTokens.dimension150 }
    /// Has for value token DimensionRawTokens.dimension200
    @objc open var spaceFixedMd: SpaceSemanticToken { DimensionRawTokens.dimension200 }
    /// Has for value token DimensionRawTokens.dimension300
    @objc open var spaceFixedLg: SpaceSemanticToken { DimensionRawTokens.dimension300 }
    /// Has for value token DimensionRawTokens.dimension400
    @objc open var spaceFixedXl: SpaceSemanticToken { DimensionRawTokens.dimension400 }
    /// Has for value token DimensionRawTokens.dimension500
    @objc open var spaceFixed2xl: SpaceSemanticToken { DimensionRawTokens.dimension500 }
    /// Has for value token DimensionRawTokens.dimension600
    @objc open var spaceFixed3xl: SpaceSemanticToken { DimensionRawTokens.dimension600 }
    /// Has for value token DimensionRawTokens.dimension700
    @objc open var spaceFixed4xl: SpaceSemanticToken { DimensionRawTokens.dimension700 }
    /// Has for value token DimensionRawTokens.dimension800
    @objc open var spaceFixed5xl: SpaceSemanticToken { DimensionRawTokens.dimension800 }
    /// Has for value token DimensionRawTokens.dimension0
    @objc open var spacePaddingInlineNone: SpaceSemanticToken { DimensionRawTokens.dimension0 }
    /// Has for value token DimensionRawTokens.dimensionOutOfSystem50
    @objc open var spacePaddingInline4xs: SpaceSemanticToken { DimensionRawTokens.dimensionOutOfSystem50 }
    /// Has for value token DimensionRawTokens.dimension50
    @objc open var spacePaddingInline3xs: SpaceSemanticToken { DimensionRawTokens.dimension50 }
    /// Has for value token DimensionRawTokens.dimensionOutOfSystem150
    @objc open var spacePaddingInline2xs: SpaceSemanticToken { DimensionRawTokens.dimensionOutOfSystem150 }
    /// Has for value token DimensionRawTokens.dimension100
    @objc open var spacePaddingInlineXs: SpaceSemanticToken { DimensionRawTokens.dimension100 }
    /// Has for value token DimensionRawTokens.dimensionOutOfSystem250
    @objc open var spacePaddingInlineSm: SpaceSemanticToken { DimensionRawTokens.dimensionOutOfSystem250 }
    /// Has for value token DimensionRawTokens.dimension150
    @objc open var spacePaddingInlineMd: SpaceSemanticToken { DimensionRawTokens.dimension150 }
    /// Has for value token DimensionRawTokens.dimension200
    @objc open var spacePaddingInlineLg: SpaceSemanticToken { DimensionRawTokens.dimension200 }
    /// Has for value token DimensionRawTokens.dimension250
    @objc open var spacePaddingInlineXl: SpaceSemanticToken { DimensionRawTokens.dimension250 }
    /// Has for value token DimensionRawTokens.dimension300
    @objc open var spacePaddingInline2xl: SpaceSemanticToken { DimensionRawTokens.dimension300 }
    /// Has for value token DimensionRawTokens.dimension350
    @objc open var spacePaddingInline3xl: SpaceSemanticToken { DimensionRawTokens.dimension350 }
    /// Has for value token DimensionRawTokens.dimension400
    @objc open var spacePaddingInline4xl: SpaceSemanticToken { DimensionRawTokens.dimension400 }
    /// Has for value token DimensionRawTokens.dimension0
    @objc open var spacePaddingBlockNone: SpaceSemanticToken { DimensionRawTokens.dimension0 }
    /// Has for value token DimensionRawTokens.dimensionOutOfSystem50
    @objc open var spacePaddingBlock3xs: SpaceSemanticToken { DimensionRawTokens.dimensionOutOfSystem50 }
    /// Has for value token DimensionRawTokens.dimension50
    @objc open var spacePaddingBlock2xs: SpaceSemanticToken { DimensionRawTokens.dimension50 }
    /// Has for value token DimensionRawTokens.dimensionOutOfSystem150
    @objc open var spacePaddingBlockXs: SpaceSemanticToken { DimensionRawTokens.dimensionOutOfSystem150 }
    /// Has for value token DimensionRawTokens.dimension100
    @objc open var spacePaddingBlockSm: SpaceSemanticToken { DimensionRawTokens.dimension100 }
    /// Has for value token DimensionRawTokens.dimension150
    @objc open var spacePaddingBlockMd: SpaceSemanticToken { DimensionRawTokens.dimension150 }
    /// Has for value token DimensionRawTokens.dimension200
    @objc open var spacePaddingBlockLg: SpaceSemanticToken { DimensionRawTokens.dimension200 }
    /// Has for value token DimensionRawTokens.dimension250
    @objc open var spacePaddingBlockXl: SpaceSemanticToken { DimensionRawTokens.dimension250 }
    /// Has for value token DimensionRawTokens.dimension300
    @objc open var spacePaddingBlock2xl: SpaceSemanticToken { DimensionRawTokens.dimension300 }
    /// Has for value token DimensionRawTokens.dimension350
    @objc open var spacePaddingBlock3xl: SpaceSemanticToken { DimensionRawTokens.dimension350 }
    /// Has for value token DimensionRawTokens.dimension400
    @objc open var spacePaddingBlock4xl: SpaceSemanticToken { DimensionRawTokens.dimension400 }
    /// Has for value token DimensionRawTokens.dimension0
    @objc open var spaceInsetNone: SpaceSemanticToken { DimensionRawTokens.dimension0 }
    /// Has for value token DimensionRawTokens.dimensionOutOfSystem25
    @objc open var spaceInset4xs: SpaceSemanticToken { DimensionRawTokens.dimensionOutOfSystem25 }
    /// Has for value token DimensionRawTokens.dimensionOutOfSystem50
    @objc open var spaceInset3xs: SpaceSemanticToken { DimensionRawTokens.dimensionOutOfSystem50 }
    /// Has for value token DimensionRawTokens.dimension50
    @objc open var spaceInset2xs: SpaceSemanticToken { DimensionRawTokens.dimension50 }
    /// Has for value token DimensionRawTokens.dimensionOutOfSystem150
    @objc open var spaceInsetXs: SpaceSemanticToken { DimensionRawTokens.dimensionOutOfSystem150 }
    /// Has for value token DimensionRawTokens.dimension100
    @objc open var spaceInsetSm: SpaceSemanticToken { DimensionRawTokens.dimension100 }
    /// Has for value token DimensionRawTokens.dimension150
    @objc open var spaceInsetMd: SpaceSemanticToken { DimensionRawTokens.dimension150 }
    /// Has for value token DimensionRawTokens.dimension200
    @objc open var spaceInsetLg: SpaceSemanticToken { DimensionRawTokens.dimension200 }
    /// Has for value token DimensionRawTokens.dimension300
    @objc open var spaceInsetXl: SpaceSemanticToken { DimensionRawTokens.dimension300 }
    /// Has for value token DimensionRawTokens.dimension400
    @objc open var spaceInset2xl: SpaceSemanticToken { DimensionRawTokens.dimension400 }
    /// Has for value token DimensionRawTokens.dimension500
    @objc open var spaceInset3xl: SpaceSemanticToken { DimensionRawTokens.dimension500 }
    /// Has for value token DimensionRawTokens.dimension0
    @objc open var spaceColumnGapNone: SpaceSemanticToken { DimensionRawTokens.dimension0 }
    /// Has for value token DimensionRawTokens.dimensionOutOfSystem50
    @objc open var spaceColumnGap3xs: SpaceSemanticToken { DimensionRawTokens.dimensionOutOfSystem50 }
    /// Has for value token DimensionRawTokens.dimension50
    @objc open var spaceColumnGap2xs: SpaceSemanticToken { DimensionRawTokens.dimension50 }
    /// Has for value token DimensionRawTokens.dimensionOutOfSystem150
    @objc open var spaceColumnGapXs: SpaceSemanticToken { DimensionRawTokens.dimensionOutOfSystem150 }
    /// Has for value token DimensionRawTokens.dimension100
    @objc open var spaceColumnGapSm: SpaceSemanticToken { DimensionRawTokens.dimension100 }
    /// Has for value token DimensionRawTokens.dimension150
    @objc open var spaceColumnGapMd: SpaceSemanticToken { DimensionRawTokens.dimension150 }
    /// Has for value token DimensionRawTokens.dimension200
    @objc open var spaceColumnGapLg: SpaceSemanticToken { DimensionRawTokens.dimension200 }
    /// Has for value token DimensionRawTokens.dimension250
    @objc open var spaceColumnGapXl: SpaceSemanticToken { DimensionRawTokens.dimension250 }
    /// Has for value token DimensionRawTokens.dimension300
    @objc open var spaceColumnGap2xl: SpaceSemanticToken { DimensionRawTokens.dimension300 }
    /// Has for value token DimensionRawTokens.dimension0
    @objc open var spaceRowGapNone: SpaceSemanticToken { DimensionRawTokens.dimension0 }
    /// Has for value token DimensionRawTokens.dimensionOutOfSystem50
    @objc open var spaceRowGap3xs: SpaceSemanticToken { DimensionRawTokens.dimensionOutOfSystem50 }
    /// Has for value token DimensionRawTokens.dimension50
    @objc open var spaceRowGap2xs: SpaceSemanticToken { DimensionRawTokens.dimension50 }
    /// Has for value token DimensionRawTokens.dimensionOutOfSystem150
    @objc open var spaceRowGapXs: SpaceSemanticToken { DimensionRawTokens.dimensionOutOfSystem150 }
    /// Has for value token DimensionRawTokens.dimension100
    @objc open var spaceRowGapSm: SpaceSemanticToken { DimensionRawTokens.dimension100 }
    /// Has for value token DimensionRawTokens.dimension150
    @objc open var spaceRowGapMd: SpaceSemanticToken { DimensionRawTokens.dimension150 }
    /// Has for value token DimensionRawTokens.dimension200
    @objc open var spaceRowGapLg: SpaceSemanticToken { DimensionRawTokens.dimension200 }
}
