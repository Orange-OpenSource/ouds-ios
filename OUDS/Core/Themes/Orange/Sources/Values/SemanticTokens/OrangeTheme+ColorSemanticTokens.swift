//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System
//

import Foundation
import OUDSTokensRaw
import OUDSTokensSemantic

// ðŸ§± Tokens version: 1.2.0
// ðŸ¤– Generated by Tokenator

// swiftlint:disable file_length
// swiftlint:disable identifier_name

extension OrangeThemeColorSemanticTokensProvider: ColorSemanticTokens {
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryPrimaryLowest: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryPrimaryLower: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token OrangeBrandColorRawTokens.colorOrange500
    @objc public final var colorRepositoryPrimaryLow: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange500 }
    /// Has for value token OrangeBrandColorRawTokens.colorOrange550
    @objc public final var colorRepositoryPrimaryDefault: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange550 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryPrimaryHigh: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryPrimaryHigher: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryPrimaryHighest: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositorySecondaryLowest: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositorySecondaryLower: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositorySecondaryLow: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositorySecondaryDefault: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositorySecondaryHigh: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositorySecondaryHigher: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositorySecondaryHighest: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryTertiaryLowest: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryTertiaryLower: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryTertiaryLow: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryTertiaryDefault: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryTertiaryHigh: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryTertiaryHigher: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryTertiaryHighest: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalWhite
    @objc public final var colorRepositoryNeutralMutedWhite: ColorSemanticToken { ColorRawTokens.colorFunctionalWhite }
    /// Has for value token ColorRawTokens.colorFunctionalGrayLight80
    @objc public final var colorRepositoryNeutralMutedLowest: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayLight80 }
    /// Has for value token ColorRawTokens.colorFunctionalGrayLight160
    @objc public final var colorRepositoryNeutralMutedLower: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayLight160 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryNeutralMutedLow: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryNeutralMutedMedium: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryNeutralMutedHigh: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryNeutralMutedHigher: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryNeutralMutedHighest: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryNeutralEmphasizedLowest: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryNeutralEmphasizedLower: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryNeutralEmphasizedLow: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalGrayDark640
    @objc public final var colorRepositoryNeutralEmphasizedMedium: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayDark640 }
    /// Has for value token ColorRawTokens.colorFunctionalGrayDark720
    @objc public final var colorRepositoryNeutralEmphasizedHigh: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayDark720 }
    /// Has for value token ColorRawTokens.colorFunctionalGrayDark800
    @objc public final var colorRepositoryNeutralEmphasizedHigher: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayDark800 }
    /// Has for value token ColorRawTokens.colorFunctionalGrayDark880
    @objc public final var colorRepositoryNeutralEmphasizedHighest: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayDark880 }
    /// Has for value token ColorRawTokens.colorFunctionalBlack
    @objc public final var colorRepositoryNeutralEmphasizedBlack: ColorSemanticToken { ColorRawTokens.colorFunctionalBlack }
    /// Has for value token ColorRawTokens.colorFunctionalMalachite100
    @objc public final var colorRepositoryPositiveLowest: ColorSemanticToken { ColorRawTokens.colorFunctionalMalachite100 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryPositiveLower: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalMalachite300
    @objc public final var colorRepositoryPositiveLow: ColorSemanticToken { ColorRawTokens.colorFunctionalMalachite300 }
    /// Has for value token ColorRawTokens.colorFunctionalMalachite500
    @objc public final var colorRepositoryPositiveDefault: ColorSemanticToken { ColorRawTokens.colorFunctionalMalachite500 }
    /// Has for value token ColorRawTokens.colorFunctionalMalachite600
    @objc public final var colorRepositoryPositiveHigh: ColorSemanticToken { ColorRawTokens.colorFunctionalMalachite600 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryPositiveHigher: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalMalachite900
    @objc public final var colorRepositoryPositiveHighest: ColorSemanticToken { ColorRawTokens.colorFunctionalMalachite900 }
    /// Has for value token ColorRawTokens.colorFunctionalDodgerBlue100
    @objc public final var colorRepositoryInfoLowest: ColorSemanticToken { ColorRawTokens.colorFunctionalDodgerBlue100 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryInfoLower: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalDodgerBlue300
    @objc public final var colorRepositoryInfoLow: ColorSemanticToken { ColorRawTokens.colorFunctionalDodgerBlue300 }
    /// Has for value token ColorRawTokens.colorFunctionalDodgerBlue500
    @objc public final var colorRepositoryInfoDefault: ColorSemanticToken { ColorRawTokens.colorFunctionalDodgerBlue500 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryInfoHigh: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryInfoHigher: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalDodgerBlue900
    @objc public final var colorRepositoryInfoHighest: ColorSemanticToken { ColorRawTokens.colorFunctionalDodgerBlue900 }
    /// Has for value token ColorRawTokens.colorFunctionalSun100
    @objc public final var colorRepositoryWarningLowest: ColorSemanticToken { ColorRawTokens.colorFunctionalSun100 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryWarningLower: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalSun300
    @objc public final var colorRepositoryWarningLow: ColorSemanticToken { ColorRawTokens.colorFunctionalSun300 }
    /// Has for value token ColorRawTokens.colorFunctionalSun500
    @objc public final var colorRepositoryWarningDefault: ColorSemanticToken { ColorRawTokens.colorFunctionalSun500 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryWarningHigh: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryWarningHigher: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalSun900
    @objc public final var colorRepositoryWarningHighest: ColorSemanticToken { ColorRawTokens.colorFunctionalSun900 }
    /// Has for value token ColorRawTokens.colorFunctionalScarlet100
    @objc public final var colorRepositoryNegativeLowest: ColorSemanticToken { ColorRawTokens.colorFunctionalScarlet100 }
    /// Has for value token ColorRawTokens.colorFunctionalScarlet200
    @objc public final var colorRepositoryNegativeLower: ColorSemanticToken { ColorRawTokens.colorFunctionalScarlet200 }
    /// Has for value token ColorRawTokens.colorFunctionalScarlet300
    @objc public final var colorRepositoryNegativeLow: ColorSemanticToken { ColorRawTokens.colorFunctionalScarlet300 }
    /// Has for value token ColorRawTokens.colorFunctionalScarlet600
    @objc public final var colorRepositoryNegativeDefault: ColorSemanticToken { ColorRawTokens.colorFunctionalScarlet600 }
    /// Has for value token ColorRawTokens.colorFunctionalScarlet700
    @objc public final var colorRepositoryNegativeHigh: ColorSemanticToken { ColorRawTokens.colorFunctionalScarlet700 }
    /// Has for value token ColorRawTokens.colorFunctionalScarlet800
    @objc public final var colorRepositoryNegativeHigher: ColorSemanticToken { ColorRawTokens.colorFunctionalScarlet800 }
    /// Has for value token ColorRawTokens.colorFunctionalScarlet900
    @objc public final var colorRepositoryNegativeHighest: ColorSemanticToken { ColorRawTokens.colorFunctionalScarlet900 }
    /// Has for value token OrangeBrandColorRawTokens.colorWarmGray100
    @objc public final var colorRepositoryAccentLowest: ColorSemanticToken { OrangeBrandColorRawTokens.colorWarmGray100 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryAccentLower: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token colorRepositoryPrimaryLow
    @objc public final var colorRepositoryAccentLow: ColorSemanticToken { colorRepositoryPrimaryLow }
    /// Has for value token colorRepositoryPrimaryDefault
    @objc public final var colorRepositoryAccentDefault: ColorSemanticToken { colorRepositoryPrimaryDefault }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryAccentHigh: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token OrangeBrandColorRawTokens.colorWarmGray900
    @objc public final var colorRepositoryAccentHigher: ColorSemanticToken { OrangeBrandColorRawTokens.colorWarmGray900 }
    /// Has for value token OrangeBrandColorRawTokens.colorWarmGray1000
    @objc public final var colorRepositoryAccentHighest: ColorSemanticToken { OrangeBrandColorRawTokens.colorWarmGray1000 }
    /// Has for value token ColorRawTokens.colorOpacityMalachite
    @objc public final var colorRepositoryOpacityPositive: ColorSemanticToken { ColorRawTokens.colorOpacityMalachite }
    /// Has for value token ColorRawTokens.colorOpacityDodgerBlue
    @objc public final var colorRepositoryOpacityInfo: ColorSemanticToken { ColorRawTokens.colorOpacityDodgerBlue }
    /// Has for value token ColorRawTokens.colorOpacitySun
    @objc public final var colorRepositoryOpacityWarning: ColorSemanticToken { ColorRawTokens.colorOpacitySun }
    /// Has for value token ColorRawTokens.colorOpacityScarlet
    @objc public final var colorRepositoryOpacityNegative: ColorSemanticToken { ColorRawTokens.colorOpacityScarlet }
    /// Has for value token OrangeBrandColorRawTokens.colorOpacityWarmGray
    @objc public final var colorRepositoryOpacityAccent: ColorSemanticToken { OrangeBrandColorRawTokens.colorOpacityWarmGray }
    /// Has for value token ColorRawTokens.colorOpacityBlack0
    @objc public final var colorRepositoryOpacityBlackTransparent: ColorSemanticToken { ColorRawTokens.colorOpacityBlack0 }
    /// Has for value token ColorRawTokens.colorOpacityBlack40
    @objc public final var colorRepositoryOpacityBlackLowest: ColorSemanticToken { ColorRawTokens.colorOpacityBlack40 }
    /// Has for value token ColorRawTokens.colorOpacityBlack80
    @objc public final var colorRepositoryOpacityBlackLower: ColorSemanticToken { ColorRawTokens.colorOpacityBlack80 }
    /// Has for value token ColorRawTokens.colorOpacityBlack120
    @objc public final var colorRepositoryOpacityBlackLow: ColorSemanticToken { ColorRawTokens.colorOpacityBlack120 }
    /// Has for value token ColorRawTokens.colorOpacityBlack200
    @objc public final var colorRepositoryOpacityBlackMediumLow: ColorSemanticToken { ColorRawTokens.colorOpacityBlack200 }
    /// Has for value token ColorRawTokens.colorOpacityBlack280
    @objc public final var colorRepositoryOpacityBlackMedium: ColorSemanticToken { ColorRawTokens.colorOpacityBlack280 }
    /// Has for value token ColorRawTokens.colorOpacityBlack440
    @objc public final var colorRepositoryOpacityBlackMediumHigh: ColorSemanticToken { ColorRawTokens.colorOpacityBlack440 }
    /// Has for value token ColorRawTokens.colorOpacityBlack520
    @objc public final var colorRepositoryOpacityBlackHigh: ColorSemanticToken { ColorRawTokens.colorOpacityBlack520 }
    /// Has for value token ColorRawTokens.colorOpacityBlack680
    @objc public final var colorRepositoryOpacityBlackHigher: ColorSemanticToken { ColorRawTokens.colorOpacityBlack680 }
    /// Has for value token ColorRawTokens.colorOpacityBlack840
    @objc public final var colorRepositoryOpacityBlackHighest: ColorSemanticToken { ColorRawTokens.colorOpacityBlack840 }
    /// Has for value token ColorRawTokens.colorOpacityWhite0
    @objc public final var colorRepositoryOpacityWhiteTransparent: ColorSemanticToken { ColorRawTokens.colorOpacityWhite0 }
    /// Has for value token ColorRawTokens.colorOpacityWhite40
    @objc public final var colorRepositoryOpacityWhiteLowest: ColorSemanticToken { ColorRawTokens.colorOpacityWhite40 }
    /// Has for value token ColorRawTokens.colorOpacityWhite80
    @objc public final var colorRepositoryOpacityWhiteLower: ColorSemanticToken { ColorRawTokens.colorOpacityWhite80 }
    /// Has for value token ColorRawTokens.colorOpacityWhite120
    @objc public final var colorRepositoryOpacityWhiteLow: ColorSemanticToken { ColorRawTokens.colorOpacityWhite120 }
    /// Has for value token ColorRawTokens.colorOpacityWhite200
    @objc public final var colorRepositoryOpacityWhiteMediumLow: ColorSemanticToken { ColorRawTokens.colorOpacityWhite200 }
    /// Has for value token ColorRawTokens.colorOpacityWhite440
    @objc public final var colorRepositoryOpacityWhiteMedium: ColorSemanticToken { ColorRawTokens.colorOpacityWhite440 }
    /// Has for value token ColorRawTokens.colorOpacityWhite640
    @objc public final var colorRepositoryOpacityWhiteHigh: ColorSemanticToken { ColorRawTokens.colorOpacityWhite640 }
    /// Has for value token ColorRawTokens.colorOpacityWhite800
    @objc public final var colorRepositoryOpacityWhiteHigher: ColorSemanticToken { ColorRawTokens.colorOpacityWhite800 }
    /// Has for value token ColorRawTokens.colorOpacityWhite920
    @objc public final var colorRepositoryOpacityWhiteHighest: ColorSemanticToken { ColorRawTokens.colorOpacityWhite920 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryOpacityPrimaryTransparent: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryOpacityPrimaryLowest: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryOpacityPrimaryLower: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryOpacityPrimaryLow: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryOpacityPrimaryMedium: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryOpacityPrimaryHigh: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryOpacityPrimaryHigher: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc public final var colorRepositoryOpacityPrimaryHighest: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc open var colorBgPrimaryLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite }
    /// Has for value token colorRepositoryNeutralEmphasizedHighest
    @objc open var colorBgPrimaryDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedHighest }
    /// Has for value token colorRepositoryNeutralMutedLowest
    @objc open var colorBgSecondaryLight: ColorSemanticToken { colorRepositoryNeutralMutedLowest }
    /// Has for value token colorRepositoryNeutralEmphasizedHigher
    @objc open var colorBgSecondaryDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedHigher }
    /// Has for value token colorRepositoryAccentLowest
    @objc open var colorBgTertiaryLight: ColorSemanticToken { colorRepositoryAccentLowest }
    /// Has for value token colorRepositoryAccentHighest
    @objc open var colorBgTertiaryDark: ColorSemanticToken { colorRepositoryAccentHighest }
    /// Has for value token colorRepositoryNeutralEmphasizedHighest
    @objc open var colorBgEmphasizedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedHighest }
    /// Has for value token colorRepositoryNeutralEmphasizedMedium
    @objc open var colorBgEmphasizedDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedMedium }
    /// Has for value token colorRepositoryPrimaryLow
    @objc open var colorSurfaceBrandPrimaryLight: ColorSemanticToken { colorRepositoryPrimaryLow }
    /// Has for value token colorRepositoryPrimaryLow
    @objc open var colorSurfaceBrandPrimaryDark: ColorSemanticToken { colorRepositoryPrimaryLow }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorSurfaceBrandSecondaryLight: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorSurfaceBrandSecondaryDark: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorSurfaceBrandTertiaryLight: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorSurfaceBrandTertiaryDark: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token colorRepositoryOpacityBlackLowest
    @objc open var colorSurfaceStatusNeutralMutedLight: ColorSemanticToken { colorRepositoryOpacityBlackLowest }
    /// Has for value token colorRepositoryOpacityWhiteLower
    @objc open var colorSurfaceStatusNeutralMutedDark: ColorSemanticToken { colorRepositoryOpacityWhiteLower }
    /// Has for value token colorRepositoryOpacityBlackHighest
    @objc open var colorSurfaceStatusNeutralEmphasizedLight: ColorSemanticToken { colorRepositoryOpacityBlackHighest }
    /// Has for value token colorRepositoryOpacityWhiteHighest
    @objc open var colorSurfaceStatusNeutralEmphasizedDark: ColorSemanticToken { colorRepositoryOpacityWhiteHighest }
    /// Has for value token colorRepositoryOpacityPositive
    @objc open var colorSurfaceStatusPositiveMutedLight: ColorSemanticToken { colorRepositoryOpacityPositive }
    /// Has for value token colorRepositoryPositiveHighest
    @objc open var colorSurfaceStatusPositiveMutedDark: ColorSemanticToken { colorRepositoryPositiveHighest }
    /// Has for value token colorRepositoryPositiveDefault
    @objc open var colorSurfaceStatusPositiveEmphasizedLight: ColorSemanticToken { colorRepositoryPositiveDefault }
    /// Has for value token colorRepositoryPositiveLow
    @objc open var colorSurfaceStatusPositiveEmphasizedDark: ColorSemanticToken { colorRepositoryPositiveLow }
    /// Has for value token colorRepositoryOpacityInfo
    @objc open var colorSurfaceStatusInfoMutedLight: ColorSemanticToken { colorRepositoryOpacityInfo }
    /// Has for value token colorRepositoryInfoHighest
    @objc open var colorSurfaceStatusInfoMutedDark: ColorSemanticToken { colorRepositoryInfoHighest }
    /// Has for value token colorRepositoryInfoDefault
    @objc open var colorSurfaceStatusInfoEmphasizedLight: ColorSemanticToken { colorRepositoryInfoDefault }
    /// Has for value token colorRepositoryInfoLow
    @objc open var colorSurfaceStatusInfoEmphasizedDark: ColorSemanticToken { colorRepositoryInfoLow }
    /// Has for value token colorRepositoryOpacityWarning
    @objc open var colorSurfaceStatusWarningMutedLight: ColorSemanticToken { colorRepositoryOpacityWarning }
    /// Has for value token colorRepositoryWarningHighest
    @objc open var colorSurfaceStatusWarningMutedDark: ColorSemanticToken { colorRepositoryWarningHighest }
    /// Has for value token colorRepositoryWarningDefault
    @objc open var colorSurfaceStatusWarningEmphasizedLight: ColorSemanticToken { colorRepositoryWarningDefault }
    /// Has for value token colorRepositoryWarningLow
    @objc open var colorSurfaceStatusWarningEmphasizedDark: ColorSemanticToken { colorRepositoryWarningLow }
    /// Has for value token colorRepositoryOpacityNegative
    @objc open var colorSurfaceStatusNegativeMutedLight: ColorSemanticToken { colorRepositoryOpacityNegative }
    /// Has for value token colorRepositoryNegativeHighest
    @objc open var colorSurfaceStatusNegativeMutedDark: ColorSemanticToken { colorRepositoryNegativeHighest }
    /// Has for value token colorRepositoryNegativeDefault
    @objc open var colorSurfaceStatusNegativeEmphasizedLight: ColorSemanticToken { colorRepositoryNegativeDefault }
    /// Has for value token colorRepositoryNegativeLow
    @objc open var colorSurfaceStatusNegativeEmphasizedDark: ColorSemanticToken { colorRepositoryNegativeLow }
    /// Has for value token colorRepositoryOpacityAccent
    @objc open var colorSurfaceStatusAccentMutedLight: ColorSemanticToken { colorRepositoryOpacityAccent }
    /// Has for value token colorRepositoryAccentHigher
    @objc open var colorSurfaceStatusAccentMutedDark: ColorSemanticToken { colorRepositoryAccentHigher }
    /// Has for value token colorRepositoryAccentLow
    @objc open var colorSurfaceStatusAccentEmphasizedLight: ColorSemanticToken { colorRepositoryAccentLow }
    /// Has for value token colorRepositoryAccentLow
    @objc open var colorSurfaceStatusAccentEmphasizedDark: ColorSemanticToken { colorRepositoryAccentLow }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc open var colorContentDefaultLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralMutedLower
    @objc open var colorContentDefaultDark: ColorSemanticToken { colorRepositoryNeutralMutedLower }
    /// Has for value token colorRepositoryOpacityBlackHigher
    @objc open var colorContentMutedLight: ColorSemanticToken { colorRepositoryOpacityBlackHigher }
    /// Has for value token colorRepositoryOpacityWhiteHigh
    @objc open var colorContentMutedDark: ColorSemanticToken { colorRepositoryOpacityWhiteHigh }
    /// Has for value token colorRepositoryOpacityBlackMediumLow
    @objc open var colorContentDisabledLight: ColorSemanticToken { colorRepositoryOpacityBlackMediumLow }
    /// Has for value token colorRepositoryOpacityWhiteMediumLow
    @objc open var colorContentDisabledDark: ColorSemanticToken { colorRepositoryOpacityWhiteMediumLow }
    /// Has for value token colorRepositoryPrimaryDefault
    @objc open var colorContentBrandPrimaryLight: ColorSemanticToken { colorRepositoryPrimaryDefault }
    /// Has for value token colorRepositoryPrimaryLow
    @objc open var colorContentBrandPrimaryDark: ColorSemanticToken { colorRepositoryPrimaryLow }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorContentBrandSecondaryLight: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorContentBrandSecondaryDark: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorContentBrandTertiaryLight: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorContentBrandTertiaryDark: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token colorRepositoryPositiveDefault
    @objc open var colorContentStatusPositiveLight: ColorSemanticToken { colorRepositoryPositiveDefault }
    /// Has for value token colorRepositoryPositiveDefault
    @objc open var colorContentStatusPositiveDark: ColorSemanticToken { colorRepositoryPositiveDefault }
    /// Has for value token colorRepositoryInfoDefault
    @objc open var colorContentStatusInfoLight: ColorSemanticToken { colorRepositoryInfoDefault }
    /// Has for value token colorRepositoryInfoDefault
    @objc open var colorContentStatusInfoDark: ColorSemanticToken { colorRepositoryInfoDefault }
    /// Has for value token colorRepositoryWarningDefault
    @objc open var colorContentStatusWarningLight: ColorSemanticToken { colorRepositoryWarningDefault }
    /// Has for value token colorRepositoryWarningDefault
    @objc open var colorContentStatusWarningDark: ColorSemanticToken { colorRepositoryWarningDefault }
    /// Has for value token colorRepositoryNegativeDefault
    @objc open var colorContentStatusNegativeLight: ColorSemanticToken { colorRepositoryNegativeDefault }
    /// Has for value token colorRepositoryNegativeDefault
    @objc open var colorContentStatusNegativeDark: ColorSemanticToken { colorRepositoryNegativeDefault }
    /// Has for value token colorRepositoryAccentLow
    @objc open var colorContentStatusAccentLight: ColorSemanticToken { colorRepositoryAccentLow }
    /// Has for value token colorRepositoryAccentLow
    @objc open var colorContentStatusAccentDark: ColorSemanticToken { colorRepositoryAccentLow }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc open var colorContentOnBrandPrimaryLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc open var colorContentOnBrandPrimaryDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorContentOnBrandSecondaryLight: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorContentOnBrandSecondaryDark: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorContentOnBrandTertiaryLight: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorContentOnBrandTertiaryDark: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc open var colorContentOnStatusNeutralMutedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralMutedLower
    @objc open var colorContentOnStatusNeutralMutedDark: ColorSemanticToken { colorRepositoryNeutralMutedLower }
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc open var colorContentOnStatusNeutralEmphasizedLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc open var colorContentOnStatusNeutralEmphasizedDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc open var colorContentOnStatusPositiveMutedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralMutedLower
    @objc open var colorContentOnStatusPositiveMutedDark: ColorSemanticToken { colorRepositoryNeutralMutedLower }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc open var colorContentOnStatusPositiveEmphasizedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc open var colorContentOnStatusPositiveEmphasizedDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc open var colorContentOnStatusInfoMutedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralMutedLower
    @objc open var colorContentOnStatusInfoMutedDark: ColorSemanticToken { colorRepositoryNeutralMutedLower }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc open var colorContentOnStatusInfoEmphasizedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc open var colorContentOnStatusInfoEmphasizedDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc open var colorContentOnStatusWarningMutedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralMutedLower
    @objc open var colorContentOnStatusWarningMutedDark: ColorSemanticToken { colorRepositoryNeutralMutedLower }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc open var colorContentOnStatusWarningEmphasizedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc open var colorContentOnStatusWarningEmphasizedDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc open var colorContentOnStatusNegativeMutedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralMutedLower
    @objc open var colorContentOnStatusNegativeMutedDark: ColorSemanticToken { colorRepositoryNeutralMutedLower }
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc open var colorContentOnStatusNegativeEmphasizedLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc open var colorContentOnStatusNegativeEmphasizedDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc open var colorContentOnStatusAccentMutedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralMutedLower
    @objc open var colorContentOnStatusAccentMutedDark: ColorSemanticToken { colorRepositoryNeutralMutedLower }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc open var colorContentOnStatusAccentEmphasizedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc open var colorContentOnStatusAccentEmphasizedDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc open var colorContentOnActionEnabledLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc open var colorContentOnActionEnabledDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc open var colorContentOnActionHoverLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc open var colorContentOnActionHoverDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc open var colorContentOnActionPressedLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc open var colorContentOnActionPressedDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc open var colorContentOnActionLoadingLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc open var colorContentOnActionLoadingDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc open var colorContentOnActionDisabledLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc open var colorContentOnActionDisabledDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc open var colorContentOnActionFocusLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc open var colorContentOnActionFocusDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorContentOnActionSelectedLight: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorContentOnActionSelectedDark: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc open var colorContentOnActionHighlightedLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc open var colorContentOnActionHighlightedDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc open var colorContentOnOverlayEmphasizedLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc open var colorContentOnOverlayEmphasizedDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryOpacityBlackMediumLow
    @objc open var colorBorderDefaultLight: ColorSemanticToken { colorRepositoryOpacityBlackMediumLow }
    /// Has for value token colorRepositoryOpacityWhiteMediumLow
    @objc open var colorBorderDefaultDark: ColorSemanticToken { colorRepositoryOpacityWhiteMediumLow }
    /// Has for value token colorRepositoryOpacityBlackLower
    @objc open var colorBorderMutedLight: ColorSemanticToken { colorRepositoryOpacityBlackLower }
    /// Has for value token colorRepositoryOpacityWhiteLower
    @objc open var colorBorderMutedDark: ColorSemanticToken { colorRepositoryOpacityWhiteLower }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc open var colorBorderEmphasizedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryOpacityWhiteHighest
    @objc open var colorBorderEmphasizedDark: ColorSemanticToken { colorRepositoryOpacityWhiteHighest }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc open var colorBorderFocusLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralMutedLower
    @objc open var colorBorderFocusDark: ColorSemanticToken { colorRepositoryNeutralMutedLower }
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc open var colorBorderFocusInsetLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite }
    /// Has for value token colorRepositoryNeutralEmphasizedHighest
    @objc open var colorBorderFocusInsetDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedHighest }
    /// Has for value token colorRepositoryPrimaryDefault
    @objc open var colorBorderBrandPrimaryLight: ColorSemanticToken { colorRepositoryPrimaryDefault }
    /// Has for value token colorRepositoryPrimaryLow
    @objc open var colorBorderBrandPrimaryDark: ColorSemanticToken { colorRepositoryPrimaryLow }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorBorderBrandSecondaryLight: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorBorderBrandSecondaryDark: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorBorderBrandTertiaryLight: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorBorderBrandTertiaryDark: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorBorderStatusPositiveLight: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorBorderStatusPositiveDark: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorBorderStatusInfoLight: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorBorderStatusInfoDark: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorBorderStatusWarningLight: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorBorderStatusWarningDark: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorBorderStatusNegativeLight: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorBorderStatusNegativeDark: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorBorderStatusAccentLight: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorBorderStatusAccentDark: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc open var colorBorderOnBrandPrimaryLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc open var colorBorderOnBrandPrimaryDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorBorderOnBrandSecondaryLight: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorBorderOnBrandSecondaryDark: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorBorderOnBrandTertiaryLight: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorBorderOnBrandTertiaryDark: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc open var colorActionEnabledLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralMutedLower
    @objc open var colorActionEnabledDark: ColorSemanticToken { colorRepositoryNeutralMutedLower }
    /// Has for value token colorRepositoryOpacityBlackHigher
    @objc open var colorActionHoverLight: ColorSemanticToken { colorRepositoryOpacityBlackHigher }
    /// Has for value token colorRepositoryOpacityWhiteHigh
    @objc open var colorActionHoverDark: ColorSemanticToken { colorRepositoryOpacityWhiteHigh }
    /// Has for value token colorRepositoryPrimaryDefault
    @objc open var colorActionPressedLight: ColorSemanticToken { colorRepositoryPrimaryDefault }
    /// Has for value token colorRepositoryPrimaryLow
    @objc open var colorActionPressedDark: ColorSemanticToken { colorRepositoryPrimaryLow }
    /// Has for value token colorRepositoryPrimaryDefault
    @objc open var colorActionLoadingLight: ColorSemanticToken { colorRepositoryPrimaryDefault }
    /// Has for value token colorRepositoryPrimaryLow
    @objc open var colorActionLoadingDark: ColorSemanticToken { colorRepositoryPrimaryLow }
    /// Has for value token colorRepositoryOpacityBlackMediumLow
    @objc open var colorActionDisabledLight: ColorSemanticToken { colorRepositoryOpacityBlackMediumLow }
    /// Has for value token colorRepositoryOpacityWhiteMediumLow
    @objc open var colorActionDisabledDark: ColorSemanticToken { colorRepositoryOpacityWhiteMediumLow }
    /// Has for value token colorRepositoryOpacityBlackHigher
    @objc open var colorActionFocusLight: ColorSemanticToken { colorRepositoryOpacityBlackHigher }
    /// Has for value token colorRepositoryOpacityWhiteHigh
    @objc open var colorActionFocusDark: ColorSemanticToken { colorRepositoryOpacityWhiteHigh }
    /// Has for value token colorRepositoryPrimaryDefault
    @objc open var colorActionSelectedLight: ColorSemanticToken { colorRepositoryPrimaryDefault }
    /// Has for value token colorRepositoryPrimaryLow
    @objc open var colorActionSelectedDark: ColorSemanticToken { colorRepositoryPrimaryLow }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeAmethyst600
    @objc open var colorActionVisitedLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeAmethyst600 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeAmethyst400
    @objc open var colorActionVisitedDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeAmethyst400 }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc open var colorActionHighlightedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralMutedLower
    @objc open var colorActionHighlightedDark: ColorSemanticToken { colorRepositoryNeutralMutedLower }
    /// Has for value token colorRepositoryOpacityBlackLowest
    @objc open var colorActionSupportEnabledLight: ColorSemanticToken { colorRepositoryOpacityBlackLowest }
    /// Has for value token colorRepositoryOpacityWhiteLowest
    @objc open var colorActionSupportEnabledDark: ColorSemanticToken { colorRepositoryOpacityWhiteLowest }
    /// Has for value token colorRepositoryOpacityBlackLower
    @objc open var colorActionSupportHoverLight: ColorSemanticToken { colorRepositoryOpacityBlackLower }
    /// Has for value token colorRepositoryOpacityWhiteLower
    @objc open var colorActionSupportHoverDark: ColorSemanticToken { colorRepositoryOpacityWhiteLower }
    /// Has for value token colorRepositoryOpacityBlackLow
    @objc open var colorActionSupportPressedLight: ColorSemanticToken { colorRepositoryOpacityBlackLow }
    /// Has for value token colorRepositoryOpacityWhiteLow
    @objc open var colorActionSupportPressedDark: ColorSemanticToken { colorRepositoryOpacityWhiteLow }
    /// Has for value token colorRepositoryOpacityBlackLow
    @objc open var colorActionSupportLoadingLight: ColorSemanticToken { colorRepositoryOpacityBlackLow }
    /// Has for value token colorRepositoryOpacityWhiteLow
    @objc open var colorActionSupportLoadingDark: ColorSemanticToken { colorRepositoryOpacityWhiteLow }
    /// Has for value token colorRepositoryOpacityBlackLower
    @objc open var colorActionSupportFocusLight: ColorSemanticToken { colorRepositoryOpacityBlackLower }
    /// Has for value token colorRepositoryOpacityWhiteLower
    @objc open var colorActionSupportFocusDark: ColorSemanticToken { colorRepositoryOpacityWhiteLower }
    /// Has for value token colorRepositoryNegativeDefault
    @objc open var colorActionNegativeEnabledLight: ColorSemanticToken { colorRepositoryNegativeDefault }
    /// Has for value token colorRepositoryNegativeLow
    @objc open var colorActionNegativeEnabledDark: ColorSemanticToken { colorRepositoryNegativeLow }
    /// Has for value token colorRepositoryNegativeHigh
    @objc open var colorActionNegativeHoverLight: ColorSemanticToken { colorRepositoryNegativeHigh }
    /// Has for value token colorRepositoryNegativeLower
    @objc open var colorActionNegativeHoverDark: ColorSemanticToken { colorRepositoryNegativeLower }
    /// Has for value token colorRepositoryNegativeHigher
    @objc open var colorActionNegativePressedLight: ColorSemanticToken { colorRepositoryNegativeHigher }
    /// Has for value token colorRepositoryNegativeLowest
    @objc open var colorActionNegativePressedDark: ColorSemanticToken { colorRepositoryNegativeLowest }
    /// Has for value token colorRepositoryNegativeHigher
    @objc open var colorActionNegativeLoadingLight: ColorSemanticToken { colorRepositoryNegativeHigher }
    /// Has for value token colorRepositoryNegativeLowest
    @objc open var colorActionNegativeLoadingDark: ColorSemanticToken { colorRepositoryNegativeLowest }
    /// Has for value token colorRepositoryNegativeHigh
    @objc open var colorActionNegativeFocusLight: ColorSemanticToken { colorRepositoryNegativeHigh }
    /// Has for value token colorRepositoryNegativeLower
    @objc open var colorActionNegativeFocusDark: ColorSemanticToken { colorRepositoryNegativeLower }
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc open var colorOverlayDefaultLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite }
    /// Has for value token colorRepositoryOpacityWhiteLower
    @objc open var colorOverlayDefaultDark: ColorSemanticToken { colorRepositoryOpacityWhiteLower }
    /// Has for value token colorRepositoryNeutralEmphasizedHigh
    @objc open var colorOverlayEmphasizedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedHigh }
    /// Has for value token colorRepositoryNeutralMutedLower
    @objc open var colorOverlayEmphasizedDark: ColorSemanticToken { colorRepositoryNeutralMutedLower }
    /// Has for value token colorRepositoryOpacityBlackLowest
    @objc open var colorOverlayDragLight: ColorSemanticToken { colorRepositoryOpacityBlackLowest }
    /// Has for value token colorRepositoryOpacityWhiteMediumLow
    @objc open var colorOverlayDragDark: ColorSemanticToken { colorRepositoryOpacityWhiteMediumLow }
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc open var colorOverlayModalLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite }
    /// Has for value token colorRepositoryNeutralEmphasizedMedium
    @objc open var colorOverlayModalDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedMedium }
    /// Has for value token colorRepositoryOpacityBlackTransparent
    @objc open var colorOpacityTransparentLight: ColorSemanticToken { colorRepositoryOpacityBlackTransparent }
    /// Has for value token colorRepositoryOpacityWhiteTransparent
    @objc open var colorOpacityTransparentDark: ColorSemanticToken { colorRepositoryOpacityWhiteTransparent }
    /// Has for value token colorRepositoryOpacityBlackLowest
    @objc open var colorOpacityLowestLight: ColorSemanticToken { colorRepositoryOpacityBlackLowest }
    /// Has for value token colorRepositoryOpacityWhiteLowest
    @objc open var colorOpacityLowestDark: ColorSemanticToken { colorRepositoryOpacityWhiteLowest }
    /// Has for value token colorRepositoryOpacityBlackLower
    @objc open var colorOpacityLowerLight: ColorSemanticToken { colorRepositoryOpacityBlackLower }
    /// Has for value token colorRepositoryOpacityWhiteLower
    @objc open var colorOpacityLowerDark: ColorSemanticToken { colorRepositoryOpacityWhiteLower }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc open var colorAlwaysBlack: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc open var colorAlwaysWhite: ColorSemanticToken { colorRepositoryNeutralMutedWhite }
    /// Has for value token colorRepositoryNeutralMutedLower
    @objc open var colorAlwaysOnBlack: ColorSemanticToken { colorRepositoryNeutralMutedLower }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc open var colorAlwaysOnWhite: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token OrangeBrandColorRawTokens.colorOrange500
    @objc open var colorDecorativeBrandPrimary: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange500 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorDecorativeBrandPrimaryMuted: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorDecorativeBrandPrimaryEmphasized: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalBlack
    @objc open var colorDecorativeBrandSecondary: ColorSemanticToken { ColorRawTokens.colorFunctionalBlack }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorDecorativeBrandSecondaryMuted: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorDecorativeBrandSecondaryEmphasized: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalWhite
    @objc open var colorDecorativeBrandTertiary: ColorSemanticToken { ColorRawTokens.colorFunctionalWhite }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorDecorativeBrandTertiaryMuted: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorDecorativeBrandTertiaryEmphasized: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalGrayLight80
    @objc open var colorDecorativeNeutralMutedLowest: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayLight80 }
    /// Has for value token ColorRawTokens.colorFunctionalGrayLight160
    @objc open var colorDecorativeNeutralMutedLower: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayLight160 }
    /// Has for value token ColorRawTokens.colorFunctionalGrayLight240
    @objc open var colorDecorativeNeutralMutedLow: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayLight240 }
    /// Has for value token ColorRawTokens.colorFunctionalGrayLight320
    @objc open var colorDecorativeNeutralMutedMedium: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayLight320 }
    /// Has for value token ColorRawTokens.colorFunctionalGrayLight400
    @objc open var colorDecorativeNeutralMutedHigh: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayLight400 }
    /// Has for value token ColorRawTokens.colorFunctionalGrayLight800
    @objc open var colorDecorativeNeutralMutedHigher: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayLight800 }
    /// Has for value token ColorRawTokens.colorFunctionalGrayLight960
    @objc open var colorDecorativeNeutralMutedHighest: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayLight960 }
    /// Has for value token ColorRawTokens.colorFunctionalGrayDark240
    @objc open var colorDecorativeNeutralEmphasizedLowest: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayDark240 }
    /// Has for value token ColorRawTokens.colorFunctionalGrayDark320
    @objc open var colorDecorativeNeutralEmphasizedLower: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayDark320 }
    /// Has for value token ColorRawTokens.colorFunctionalGrayDark400
    @objc open var colorDecorativeNeutralEmphasizedLow: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayDark400 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorDecorativeNeutralEmphasizedMedium: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorDecorativeNeutralEmphasizedHigh: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalGrayDark640
    @objc open var colorDecorativeNeutralEmphasizedHigher: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayDark640 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeTheme**
    @objc open var colorDecorativeNeutralEmphasizedHighest: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeEmerald200
    @objc open var colorDecorativeAccent1Muted: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeEmerald200 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeEmerald500
    @objc open var colorDecorativeAccent1Default: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeEmerald500 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeEmerald700
    @objc open var colorDecorativeAccent1Emphasized: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeEmerald700 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeSky200
    @objc open var colorDecorativeAccent2Muted: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeSky200 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeSky400
    @objc open var colorDecorativeAccent2Default: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeSky400 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeSky700
    @objc open var colorDecorativeAccent2Emphasized: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeSky700 }
    /// Has for value token ColorRawTokens.colorFunctionalSun200
    @objc open var colorDecorativeAccent3Muted: ColorSemanticToken { ColorRawTokens.colorFunctionalSun200 }
    /// Has for value token ColorRawTokens.colorFunctionalSun500
    @objc open var colorDecorativeAccent3Default: ColorSemanticToken { ColorRawTokens.colorFunctionalSun500 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeAmber500
    @objc open var colorDecorativeAccent3Emphasized: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeAmber500 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeAmethyst200
    @objc open var colorDecorativeAccent4Muted: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeAmethyst200 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeAmethyst400
    @objc open var colorDecorativeAccent4Default: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeAmethyst400 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeAmethyst800
    @objc open var colorDecorativeAccent4Emphasized: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeAmethyst800 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeShockingPink100
    @objc open var colorDecorativeAccent5Muted: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeShockingPink100 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeShockingPink200
    @objc open var colorDecorativeAccent5Default: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeShockingPink200 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeShockingPink300
    @objc open var colorDecorativeAccent5Emphasized: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeShockingPink300 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeDeepPeach100
    @objc open var colorDecorativeSkinTint100: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeDeepPeach100 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeDeepPeach200
    @objc open var colorDecorativeSkinTint200: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeDeepPeach200 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeDeepPeach300
    @objc open var colorDecorativeSkinTint300: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeDeepPeach300 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeDeepPeach400
    @objc open var colorDecorativeSkinTint400: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeDeepPeach400 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeDeepPeach500
    @objc open var colorDecorativeSkinTint500: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeDeepPeach500 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeDeepPeach600
    @objc open var colorDecorativeSkinTint600: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeDeepPeach600 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeDeepPeach700
    @objc open var colorDecorativeSkinTint700: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeDeepPeach700 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeDeepPeach800
    @objc open var colorDecorativeSkinTint800: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeDeepPeach800 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeDeepPeach900
    @objc open var colorDecorativeSkinTint900: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeDeepPeach900 }
}

// swiftlint:enable identifier_name
