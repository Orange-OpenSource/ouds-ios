//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System
//

import Foundation
import OUDSTokensRaw
import OUDSTokensSemantic

// ðŸ§± Tokens version: 1.1.0
// ðŸ¤– Generated by Tokenator

// swiftlint:disable file_length

extension OrangeInverseThemeColorSemanticTokensProvider: ColorSemanticTokens {
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryPrimaryLowest: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryPrimaryLower: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token OrangeBrandColorRawTokens.colorOrange500
    @objc public final var colorRepositoryPrimaryLow: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange500 }
    /// Has for value token OrangeBrandColorRawTokens.colorOrange550
    @objc public final var colorRepositoryPrimaryDefault: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange550 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryPrimaryHigh: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryPrimaryHigher: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryPrimaryHighest: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositorySecondaryLowest: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositorySecondaryLower: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositorySecondaryLow: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositorySecondaryDefault: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositorySecondaryHigh: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositorySecondaryHigher: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositorySecondaryHighest: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryTertiaryLowest: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryTertiaryLower: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryTertiaryLow: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryTertiaryDefault: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryTertiaryHigh: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryTertiaryHigher: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryTertiaryHighest: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalWhite
    @objc public final var colorRepositoryNeutralMutedWhite: ColorSemanticToken { ColorRawTokens.colorFunctionalWhite }
    /// Has for value token ColorRawTokens.colorFunctionalGrayLight80
    @objc public final var colorRepositoryNeutralMutedLowest: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayLight80 }
    /// Has for value token ColorRawTokens.colorFunctionalGrayLight160
    @objc public final var colorRepositoryNeutralMutedLower: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayLight160 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryNeutralMutedLow: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryNeutralMutedMedium: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryNeutralMutedHigh: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryNeutralMutedHigher: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryNeutralMutedHighest: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryNeutralEmphasizedLowest: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryNeutralEmphasizedLower: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryNeutralEmphasizedLow: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalGrayDark640
    @objc public final var colorRepositoryNeutralEmphasizedMedium: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayDark640 }
    /// Has for value token ColorRawTokens.colorFunctionalGrayDark720
    @objc public final var colorRepositoryNeutralEmphasizedHigh: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayDark720 }
    /// Has for value token ColorRawTokens.colorFunctionalGrayDark800
    @objc public final var colorRepositoryNeutralEmphasizedHigher: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayDark800 }
    /// Has for value token ColorRawTokens.colorFunctionalGrayDark880
    @objc public final var colorRepositoryNeutralEmphasizedHighest: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayDark880 }
    /// Has for value token ColorRawTokens.colorFunctionalBlack
    @objc public final var colorRepositoryNeutralEmphasizedBlack: ColorSemanticToken { ColorRawTokens.colorFunctionalBlack }
    /// Has for value token ColorRawTokens.colorFunctionalSun100
    @objc public final var colorRepositoryWarningLowest: ColorSemanticToken { ColorRawTokens.colorFunctionalSun100 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryWarningLower: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalSun300
    @objc public final var colorRepositoryWarningLow: ColorSemanticToken { ColorRawTokens.colorFunctionalSun300 }
    /// Has for value token ColorRawTokens.colorFunctionalSun500
    @objc public final var colorRepositoryWarningDefault: ColorSemanticToken { ColorRawTokens.colorFunctionalSun500 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryWarningHigh: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryWarningHigher: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalSun900
    @objc public final var colorRepositoryWarningHighest: ColorSemanticToken { ColorRawTokens.colorFunctionalSun900 }
    /// Has for value token ColorRawTokens.colorFunctionalScarlet100
    @objc public final var colorRepositoryNegativeLowest: ColorSemanticToken { ColorRawTokens.colorFunctionalScarlet100 }
    /// Has for value token ColorRawTokens.colorFunctionalScarlet200
    @objc public final var colorRepositoryNegativeLower: ColorSemanticToken { ColorRawTokens.colorFunctionalScarlet200 }
    /// Has for value token ColorRawTokens.colorFunctionalScarlet300
    @objc public final var colorRepositoryNegativeLow: ColorSemanticToken { ColorRawTokens.colorFunctionalScarlet300 }
    /// Has for value token ColorRawTokens.colorFunctionalScarlet600
    @objc public final var colorRepositoryNegativeDefault: ColorSemanticToken { ColorRawTokens.colorFunctionalScarlet600 }
    /// Has for value token ColorRawTokens.colorFunctionalScarlet700
    @objc public final var colorRepositoryNegativeHigh: ColorSemanticToken { ColorRawTokens.colorFunctionalScarlet700 }
    /// Has for value token ColorRawTokens.colorFunctionalScarlet800
    @objc public final var colorRepositoryNegativeHigher: ColorSemanticToken { ColorRawTokens.colorFunctionalScarlet800 }
    /// Has for value token ColorRawTokens.colorFunctionalScarlet900
    @objc public final var colorRepositoryNegativeHighest: ColorSemanticToken { ColorRawTokens.colorFunctionalScarlet900 }
    /// Has for value token ColorRawTokens.colorFunctionalMalachite100
    @objc public final var colorRepositoryPositiveLowest: ColorSemanticToken { ColorRawTokens.colorFunctionalMalachite100 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryPositiveLower: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalMalachite300
    @objc public final var colorRepositoryPositiveLow: ColorSemanticToken { ColorRawTokens.colorFunctionalMalachite300 }
    /// Has for value token ColorRawTokens.colorFunctionalMalachite500
    @objc public final var colorRepositoryPositiveDefault: ColorSemanticToken { ColorRawTokens.colorFunctionalMalachite500 }
    /// Has for value token ColorRawTokens.colorFunctionalMalachite600
    @objc public final var colorRepositoryPositiveHigh: ColorSemanticToken { ColorRawTokens.colorFunctionalMalachite600 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryPositiveHigher: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalMalachite900
    @objc public final var colorRepositoryPositiveHighest: ColorSemanticToken { ColorRawTokens.colorFunctionalMalachite900 }
    /// Has for value token ColorRawTokens.colorFunctionalDodgerBlue100
    @objc public final var colorRepositoryInfoLowest: ColorSemanticToken { ColorRawTokens.colorFunctionalDodgerBlue100 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryInfoLower: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalDodgerBlue300
    @objc public final var colorRepositoryInfoLow: ColorSemanticToken { ColorRawTokens.colorFunctionalDodgerBlue300 }
    /// Has for value token ColorRawTokens.colorFunctionalDodgerBlue500
    @objc public final var colorRepositoryInfoDefault: ColorSemanticToken { ColorRawTokens.colorFunctionalDodgerBlue500 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryInfoHigh: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryInfoHigher: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalDodgerBlue900
    @objc public final var colorRepositoryInfoHighest: ColorSemanticToken { ColorRawTokens.colorFunctionalDodgerBlue900 }
    /// Has for value token OrangeBrandColorRawTokens.colorWarmGray100
    @objc public final var colorRepositoryAccentLowest: ColorSemanticToken { OrangeBrandColorRawTokens.colorWarmGray100 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryAccentLower: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalSun300
    @objc public final var colorRepositoryAccentLow: ColorSemanticToken { ColorRawTokens.colorFunctionalSun300 }
    /// Has for value token ColorRawTokens.colorFunctionalSun500
    @objc public final var colorRepositoryAccentDefault: ColorSemanticToken { ColorRawTokens.colorFunctionalSun500 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryAccentHigh: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryAccentHigher: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token OrangeBrandColorRawTokens.colorWarmGray1000
    @objc public final var colorRepositoryAccentHighest: ColorSemanticToken { OrangeBrandColorRawTokens.colorWarmGray1000 }
    /// Has for value token ColorRawTokens.colorOpacityScarlet
    @objc public final var colorRepositoryOpacityNegative: ColorSemanticToken { ColorRawTokens.colorOpacityScarlet }
    /// Has for value token ColorRawTokens.colorOpacitySun
    @objc public final var colorRepositoryOpacityWarning: ColorSemanticToken { ColorRawTokens.colorOpacitySun }
    /// Has for value token ColorRawTokens.colorOpacityMalachite
    @objc public final var colorRepositoryOpacityPositive: ColorSemanticToken { ColorRawTokens.colorOpacityMalachite }
    /// Has for value token ColorRawTokens.colorOpacityDodgerBlue
    @objc public final var colorRepositoryOpacityInfo: ColorSemanticToken { ColorRawTokens.colorOpacityDodgerBlue }
    /// Has for value token ColorRawTokens.colorOpacityBlack0
    @objc public final var colorRepositoryOpacityBlackTransparent: ColorSemanticToken { ColorRawTokens.colorOpacityBlack0 }
    /// Has for value token ColorRawTokens.colorOpacityBlack40
    @objc public final var colorRepositoryOpacityBlackLowest: ColorSemanticToken { ColorRawTokens.colorOpacityBlack40 }
    /// Has for value token ColorRawTokens.colorOpacityBlack80
    @objc public final var colorRepositoryOpacityBlackLower: ColorSemanticToken { ColorRawTokens.colorOpacityBlack80 }
    /// Has for value token ColorRawTokens.colorOpacityBlack120
    @objc public final var colorRepositoryOpacityBlackLow: ColorSemanticToken { ColorRawTokens.colorOpacityBlack120 }
    /// Has for value token ColorRawTokens.colorOpacityBlack200
    @objc public final var colorRepositoryOpacityBlackMediumLow: ColorSemanticToken { ColorRawTokens.colorOpacityBlack200 }
    /// Has for value token ColorRawTokens.colorOpacityBlack280
    @objc public final var colorRepositoryOpacityBlackMedium: ColorSemanticToken { ColorRawTokens.colorOpacityBlack280 }
    /// Has for value token ColorRawTokens.colorOpacityBlack440
    @objc public final var colorRepositoryOpacityBlackMediumHigh: ColorSemanticToken { ColorRawTokens.colorOpacityBlack440 }
    /// Has for value token ColorRawTokens.colorOpacityBlack520
    @objc public final var colorRepositoryOpacityBlackHigh: ColorSemanticToken { ColorRawTokens.colorOpacityBlack520 }
    /// Has for value token ColorRawTokens.colorOpacityBlack680
    @objc public final var colorRepositoryOpacityBlackHigher: ColorSemanticToken { ColorRawTokens.colorOpacityBlack680 }
    /// Has for value token ColorRawTokens.colorOpacityBlack840
    @objc public final var colorRepositoryOpacityBlackHighest: ColorSemanticToken { ColorRawTokens.colorOpacityBlack840 }
    /// Has for value token ColorRawTokens.colorOpacityWhite0
    @objc public final var colorRepositoryOpacityWhiteTransparent: ColorSemanticToken { ColorRawTokens.colorOpacityWhite0 }
    /// Has for value token ColorRawTokens.colorOpacityWhite40
    @objc public final var colorRepositoryOpacityWhiteLowest: ColorSemanticToken { ColorRawTokens.colorOpacityWhite40 }
    /// Has for value token ColorRawTokens.colorOpacityWhite80
    @objc public final var colorRepositoryOpacityWhiteLower: ColorSemanticToken { ColorRawTokens.colorOpacityWhite80 }
    /// Has for value token ColorRawTokens.colorOpacityWhite120
    @objc public final var colorRepositoryOpacityWhiteLow: ColorSemanticToken { ColorRawTokens.colorOpacityWhite120 }
    /// Has for value token ColorRawTokens.colorOpacityWhite200
    @objc public final var colorRepositoryOpacityWhiteMediumLow: ColorSemanticToken { ColorRawTokens.colorOpacityWhite200 }
    /// Has for value token ColorRawTokens.colorOpacityWhite440
    @objc public final var colorRepositoryOpacityWhiteMedium: ColorSemanticToken { ColorRawTokens.colorOpacityWhite440 }
    /// Has for value token ColorRawTokens.colorOpacityWhite640
    @objc public final var colorRepositoryOpacityWhiteHigh: ColorSemanticToken { ColorRawTokens.colorOpacityWhite640 }
    /// Has for value token ColorRawTokens.colorOpacityWhite800
    @objc public final var colorRepositoryOpacityWhiteHigher: ColorSemanticToken { ColorRawTokens.colorOpacityWhite800 }
    /// Has for value token ColorRawTokens.colorOpacityWhite920
    @objc public final var colorRepositoryOpacityWhiteHighest: ColorSemanticToken { ColorRawTokens.colorOpacityWhite920 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryOpacityPrimaryTransparent: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryOpacityPrimaryLowest: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryOpacityPrimaryLower: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryOpacityPrimaryLow: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryOpacityPrimaryMedium: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryOpacityPrimaryHigh: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryOpacityPrimaryHigher: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorRepositoryOpacityPrimaryHighest: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token colorRepositoryPrimaryLow
    @objc public final var colorSurfaceBrandPrimaryLight: ColorSemanticToken { colorRepositoryPrimaryLow } /* value of inverse token oudsColorSurfaceBrandPrimaryInverse */
  /// Has for value token colorRepositoryPrimaryLow
    @objc public final var colorSurfaceBrandPrimaryDark: ColorSemanticToken { colorRepositoryPrimaryLow } /* value of inverse token oudsColorSurfaceBrandPrimaryInverse */
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorSurfaceBrandSecondary: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorSurfaceBrandTertiary: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token colorRepositoryOpacityBlackLowest
    @objc public final var colorSurfaceStatusNeutralMutedLight: ColorSemanticToken { colorRepositoryOpacityBlackLowest } /* value of inverse token oudsColorSurfaceStatusNeutralMutedInverse */
  /// Has for value token colorRepositoryOpacityBlackLowest
    @objc public final var colorSurfaceStatusNeutralMutedDark: ColorSemanticToken { colorRepositoryOpacityBlackLowest } /* value of inverse token oudsColorSurfaceStatusNeutralMutedInverse */
    /// Has for value token colorRepositoryOpacityBlackHighest
    @objc public final var colorSurfaceStatusNeutralEmphasizedLight: ColorSemanticToken { colorRepositoryOpacityBlackHighest } /* value of inverse token oudsColorSurfaceStatusNeutralEmphasizedInverse */
  /// Has for value token colorRepositoryOpacityBlackHighest
    @objc public final var colorSurfaceStatusNeutralEmphasizedDark: ColorSemanticToken { colorRepositoryOpacityBlackHighest } /* value of inverse token oudsColorSurfaceStatusNeutralEmphasizedInverse */
    /// Has for value token colorRepositoryOpacityPositive
    @objc public final var colorSurfaceStatusPositiveMutedLight: ColorSemanticToken { colorRepositoryOpacityPositive } /* value of inverse token oudsColorSurfaceStatusPositiveMutedInverse */
  /// Has for value token colorRepositoryOpacityPositive
    @objc public final var colorSurfaceStatusPositiveMutedDark: ColorSemanticToken { colorRepositoryOpacityPositive } /* value of inverse token oudsColorSurfaceStatusPositiveMutedInverse */
    /// Has for value token colorRepositoryPositiveDefault
    @objc public final var colorSurfaceStatusPositiveEmphasizedLight: ColorSemanticToken { colorRepositoryPositiveDefault } /* value of inverse token oudsColorSurfaceStatusPositiveEmphasizedInverse */
  /// Has for value token colorRepositoryPositiveDefault
    @objc public final var colorSurfaceStatusPositiveEmphasizedDark: ColorSemanticToken { colorRepositoryPositiveDefault } /* value of inverse token oudsColorSurfaceStatusPositiveEmphasizedInverse */
    /// Has for value token colorRepositoryOpacityInfo
    @objc public final var colorSurfaceStatusInfoMutedLight: ColorSemanticToken { colorRepositoryOpacityInfo } /* value of inverse token oudsColorSurfaceStatusInfoMutedInverse */
  /// Has for value token colorRepositoryOpacityInfo
    @objc public final var colorSurfaceStatusInfoMutedDark: ColorSemanticToken { colorRepositoryOpacityInfo } /* value of inverse token oudsColorSurfaceStatusInfoMutedInverse */
    /// Has for value token colorRepositoryInfoDefault
    @objc public final var colorSurfaceStatusInfoEmphasizedLight: ColorSemanticToken { colorRepositoryInfoDefault } /* value of inverse token oudsColorSurfaceStatusInfoEmphasizedInverse */
  /// Has for value token colorRepositoryInfoDefault
    @objc public final var colorSurfaceStatusInfoEmphasizedDark: ColorSemanticToken { colorRepositoryInfoDefault } /* value of inverse token oudsColorSurfaceStatusInfoEmphasizedInverse */
    /// Has for value token colorRepositoryOpacityWarning
    @objc public final var colorSurfaceStatusWarningMutedLight: ColorSemanticToken { colorRepositoryOpacityWarning } /* value of inverse token oudsColorSurfaceStatusWarningMutedInverse */
  /// Has for value token colorRepositoryOpacityWarning
    @objc public final var colorSurfaceStatusWarningMutedDark: ColorSemanticToken { colorRepositoryOpacityWarning } /* value of inverse token oudsColorSurfaceStatusWarningMutedInverse */
    /// Has for value token colorRepositoryWarningDefault
    @objc public final var colorSurfaceStatusWarningEmphasizedLight: ColorSemanticToken { colorRepositoryWarningDefault } /* value of inverse token oudsColorSurfaceStatusWarningEmphasizedInverse */
  /// Has for value token colorRepositoryWarningDefault
    @objc public final var colorSurfaceStatusWarningEmphasizedDark: ColorSemanticToken { colorRepositoryWarningDefault } /* value of inverse token oudsColorSurfaceStatusWarningEmphasizedInverse */
    /// Has for value token colorRepositoryOpacityNegative
    @objc public final var colorSurfaceStatusNegativeMutedLight: ColorSemanticToken { colorRepositoryOpacityNegative } /* value of inverse token oudsColorSurfaceStatusNegativeMutedInverse */
  /// Has for value token colorRepositoryOpacityNegative
    @objc public final var colorSurfaceStatusNegativeMutedDark: ColorSemanticToken { colorRepositoryOpacityNegative } /* value of inverse token oudsColorSurfaceStatusNegativeMutedInverse */
    /// Has for value token colorRepositoryNegativeDefault
    @objc public final var colorSurfaceStatusNegativeEmphasizedLight: ColorSemanticToken { colorRepositoryNegativeDefault } /* value of inverse token oudsColorSurfaceStatusNegativeEmphasizedInverse */
  /// Has for value token colorRepositoryNegativeDefault
    @objc public final var colorSurfaceStatusNegativeEmphasizedDark: ColorSemanticToken { colorRepositoryNegativeDefault } /* value of inverse token oudsColorSurfaceStatusNegativeEmphasizedInverse */
    /// Has for value token colorRepositoryAccentLowest
    @objc public final var colorSurfaceStatusAccentMutedLight: ColorSemanticToken { colorRepositoryAccentLowest } /* value of inverse token oudsColorSurfaceStatusAccentMutedInverse */
  /// Has for value token colorRepositoryAccentLowest
    @objc public final var colorSurfaceStatusAccentMutedDark: ColorSemanticToken { colorRepositoryAccentLowest } /* value of inverse token oudsColorSurfaceStatusAccentMutedInverse */
    /// Has for value token colorRepositoryWarningDefault
    @objc public final var colorSurfaceStatusAccentEmphasizedLight: ColorSemanticToken { colorRepositoryWarningDefault } /* value of inverse token oudsColorSurfaceStatusAccentEmphasizedInverse */
  /// Has for value token colorRepositoryWarningDefault
    @objc public final var colorSurfaceStatusAccentEmphasizedDark: ColorSemanticToken { colorRepositoryWarningDefault } /* value of inverse token oudsColorSurfaceStatusAccentEmphasizedInverse */
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentDefaultLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack } /* value of inverse token oudsColorContentDefaultInverse */
  /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentDefaultDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack } /* value of inverse token oudsColorContentDefaultInverse */
    /// Has for value token colorRepositoryOpacityBlackHigher
    @objc public final var colorContentMutedLight: ColorSemanticToken { colorRepositoryOpacityBlackHigher } /* value of inverse token oudsColorContentMutedInverse */
  /// Has for value token colorRepositoryOpacityBlackHigher
    @objc public final var colorContentMutedDark: ColorSemanticToken { colorRepositoryOpacityBlackHigher } /* value of inverse token oudsColorContentMutedInverse */
    /// Has for value token colorRepositoryOpacityBlackMediumLow
    @objc public final var colorContentDisabledLight: ColorSemanticToken { colorRepositoryOpacityBlackMediumLow } /* value of inverse token oudsColorContentDisabledInverse */
  /// Has for value token colorRepositoryOpacityBlackMediumLow
    @objc public final var colorContentDisabledDark: ColorSemanticToken { colorRepositoryOpacityBlackMediumLow } /* value of inverse token oudsColorContentDisabledInverse */
    /// Has for value token colorRepositoryPrimaryDefault
    @objc public final var colorContentBrandPrimaryLight: ColorSemanticToken { colorRepositoryPrimaryDefault } /* value of inverse token oudsColorContentBrandPrimaryInverse */
  /// Has for value token colorRepositoryPrimaryDefault
    @objc public final var colorContentBrandPrimaryDark: ColorSemanticToken { colorRepositoryPrimaryDefault } /* value of inverse token oudsColorContentBrandPrimaryInverse */
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorContentBrandSecondary: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorContentBrandTertiary: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token colorRepositoryPositiveDefault
    @objc public final var colorContentStatusPositiveLight: ColorSemanticToken { colorRepositoryPositiveDefault } /* value of inverse token oudsColorContentStatusPositiveInverse */
  /// Has for value token colorRepositoryPositiveDefault
    @objc public final var colorContentStatusPositiveDark: ColorSemanticToken { colorRepositoryPositiveDefault } /* value of inverse token oudsColorContentStatusPositiveInverse */
    /// Has for value token colorRepositoryInfoDefault
    @objc public final var colorContentStatusInfoLight: ColorSemanticToken { colorRepositoryInfoDefault } /* value of inverse token oudsColorContentStatusInfoInverse */
  /// Has for value token colorRepositoryInfoDefault
    @objc public final var colorContentStatusInfoDark: ColorSemanticToken { colorRepositoryInfoDefault } /* value of inverse token oudsColorContentStatusInfoInverse */
    /// Has for value token colorRepositoryWarningDefault
    @objc public final var colorContentStatusWarningLight: ColorSemanticToken { colorRepositoryWarningDefault } /* value of inverse token oudsColorContentStatusWarningInverse */
  /// Has for value token colorRepositoryWarningDefault
    @objc public final var colorContentStatusWarningDark: ColorSemanticToken { colorRepositoryWarningDefault } /* value of inverse token oudsColorContentStatusWarningInverse */
    /// Has for value token colorRepositoryNegativeDefault
    @objc public final var colorContentStatusNegativeLight: ColorSemanticToken { colorRepositoryNegativeDefault } /* value of inverse token oudsColorContentStatusNegativeInverse */
  /// Has for value token colorRepositoryNegativeDefault
    @objc public final var colorContentStatusNegativeDark: ColorSemanticToken { colorRepositoryNegativeDefault } /* value of inverse token oudsColorContentStatusNegativeInverse */
    /// Has for value token colorRepositoryAccentDefault
    @objc public final var colorContentStatusAccentLight: ColorSemanticToken { colorRepositoryAccentDefault } /* value of inverse token oudsColorContentStatusAccentInverse */
  /// Has for value token colorRepositoryAccentDefault
    @objc public final var colorContentStatusAccentDark: ColorSemanticToken { colorRepositoryAccentDefault } /* value of inverse token oudsColorContentStatusAccentInverse */
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnBrandPrimaryLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack } /* value of inverse token oudsColorContentOnBrandPrimaryInverse */
  /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnBrandPrimaryDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack } /* value of inverse token oudsColorContentOnBrandPrimaryInverse */
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorContentOnBrandSecondary: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorContentOnBrandTertiary: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnStatusNeutralMutedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack } /* value of inverse token oudsColorContentOnStatusNeutralMutedInverse */
  /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnStatusNeutralMutedDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack } /* value of inverse token oudsColorContentOnStatusNeutralMutedInverse */
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc public final var colorContentOnStatusNeutralEmphasizedLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite } /* value of inverse token oudsColorContentOnStatusNeutralEmphasizedInverse */
  /// Has for value token colorRepositoryNeutralMutedWhite
    @objc public final var colorContentOnStatusNeutralEmphasizedDark: ColorSemanticToken { colorRepositoryNeutralMutedWhite } /* value of inverse token oudsColorContentOnStatusNeutralEmphasizedInverse */
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnStatusPositiveMutedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack } /* value of inverse token oudsColorContentOnStatusPositiveMutedInverse */
  /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnStatusPositiveMutedDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack } /* value of inverse token oudsColorContentOnStatusPositiveMutedInverse */
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnStatusPositiveEmphasizedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack } /* value of inverse token oudsColorContentOnStatusPositiveEmphasizedInverse */
  /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnStatusPositiveEmphasizedDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack } /* value of inverse token oudsColorContentOnStatusPositiveEmphasizedInverse */
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnStatusInfoMutedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack } /* value of inverse token oudsColorContentOnStatusInfoMutedInverse */
  /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnStatusInfoMutedDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack } /* value of inverse token oudsColorContentOnStatusInfoMutedInverse */
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnStatusInfoEmphasizedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack } /* value of inverse token oudsColorContentOnStatusInfoEmphasizedInverse */
  /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnStatusInfoEmphasizedDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack } /* value of inverse token oudsColorContentOnStatusInfoEmphasizedInverse */
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnStatusWarningMutedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack } /* value of inverse token oudsColorContentOnStatusWarningMutedInverse */
  /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnStatusWarningMutedDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack } /* value of inverse token oudsColorContentOnStatusWarningMutedInverse */
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnStatusWarningEmphasizedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack } /* value of inverse token oudsColorContentOnStatusWarningEmphasizedInverse */
  /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnStatusWarningEmphasizedDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack } /* value of inverse token oudsColorContentOnStatusWarningEmphasizedInverse */
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnStatusNegativeMutedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack } /* value of inverse token oudsColorContentOnStatusNegativeMutedInverse */
  /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnStatusNegativeMutedDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack } /* value of inverse token oudsColorContentOnStatusNegativeMutedInverse */
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc public final var colorContentOnStatusNegativeEmphasizedLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite } /* value of inverse token oudsColorContentOnStatusNegativeEmphasizedInverse */
  /// Has for value token colorRepositoryNeutralMutedWhite
    @objc public final var colorContentOnStatusNegativeEmphasizedDark: ColorSemanticToken { colorRepositoryNeutralMutedWhite } /* value of inverse token oudsColorContentOnStatusNegativeEmphasizedInverse */
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnStatusAccentMutedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack } /* value of inverse token oudsColorContentOnStatusAccentMutedInverse */
  /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnStatusAccentMutedDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack } /* value of inverse token oudsColorContentOnStatusAccentMutedInverse */
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnStatusAccentEmphasizedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack } /* value of inverse token oudsColorContentOnStatusAccentEmphasizedInverse */
  /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnStatusAccentEmphasizedDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack } /* value of inverse token oudsColorContentOnStatusAccentEmphasizedInverse */
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc public final var colorContentOnActionEnabledLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite } /* value of inverse token oudsColorContentOnActionEnabledInverse */
  /// Has for value token colorRepositoryNeutralMutedWhite
    @objc public final var colorContentOnActionEnabledDark: ColorSemanticToken { colorRepositoryNeutralMutedWhite } /* value of inverse token oudsColorContentOnActionEnabledInverse */
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc public final var colorContentOnActionHoverLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite } /* value of inverse token oudsColorContentOnActionHoverInverse */
  /// Has for value token colorRepositoryNeutralMutedWhite
    @objc public final var colorContentOnActionHoverDark: ColorSemanticToken { colorRepositoryNeutralMutedWhite } /* value of inverse token oudsColorContentOnActionHoverInverse */
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc public final var colorContentOnActionPressedLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite } /* value of inverse token oudsColorContentOnActionPressedInverse */
  /// Has for value token colorRepositoryNeutralMutedWhite
    @objc public final var colorContentOnActionPressedDark: ColorSemanticToken { colorRepositoryNeutralMutedWhite } /* value of inverse token oudsColorContentOnActionPressedInverse */
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc public final var colorContentOnActionLoadingLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite } /* value of inverse token oudsColorContentOnActionLoadingInverse */
  /// Has for value token colorRepositoryNeutralMutedWhite
    @objc public final var colorContentOnActionLoadingDark: ColorSemanticToken { colorRepositoryNeutralMutedWhite } /* value of inverse token oudsColorContentOnActionLoadingInverse */
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc public final var colorContentOnActionDisabledLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite } /* value of inverse token oudsColorContentOnActionDisabledInverse */
  /// Has for value token colorRepositoryNeutralMutedWhite
    @objc public final var colorContentOnActionDisabledDark: ColorSemanticToken { colorRepositoryNeutralMutedWhite } /* value of inverse token oudsColorContentOnActionDisabledInverse */
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc public final var colorContentOnActionFocusLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite } /* value of inverse token oudsColorContentOnActionFocusInverse */
  /// Has for value token colorRepositoryNeutralMutedWhite
    @objc public final var colorContentOnActionFocusDark: ColorSemanticToken { colorRepositoryNeutralMutedWhite } /* value of inverse token oudsColorContentOnActionFocusInverse */
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorContentOnActionSelected: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc public final var colorContentOnOverlayEmphasizedLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite } /* value of inverse token oudsColorContentOnOverlayEmphasizedInverse */
  /// Has for value token colorRepositoryNeutralMutedWhite
    @objc public final var colorContentOnOverlayEmphasizedDark: ColorSemanticToken { colorRepositoryNeutralMutedWhite } /* value of inverse token oudsColorContentOnOverlayEmphasizedInverse */
    /// Has for value token colorRepositoryOpacityBlackMediumLow
    @objc public final var colorBorderDefaultLight: ColorSemanticToken { colorRepositoryOpacityBlackMediumLow } /* value of inverse token oudsColorBorderDefaultInverse */
  /// Has for value token colorRepositoryOpacityBlackMediumLow
    @objc public final var colorBorderDefaultDark: ColorSemanticToken { colorRepositoryOpacityBlackMediumLow } /* value of inverse token oudsColorBorderDefaultInverse */
    /// Has for value token colorRepositoryOpacityBlackLower
    @objc public final var colorBorderMutedLight: ColorSemanticToken { colorRepositoryOpacityBlackLower } /* value of inverse token oudsColorBorderMutedInverse */
  /// Has for value token colorRepositoryOpacityBlackLower
    @objc public final var colorBorderMutedDark: ColorSemanticToken { colorRepositoryOpacityBlackLower } /* value of inverse token oudsColorBorderMutedInverse */
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorBorderEmphasizedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack } /* value of inverse token oudsColorBorderEmphasizedInverse */
  /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorBorderEmphasizedDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack } /* value of inverse token oudsColorBorderEmphasizedInverse */
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorBorderFocusLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack } /* value of inverse token oudsColorBorderFocusInverse */
  /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorBorderFocusDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack } /* value of inverse token oudsColorBorderFocusInverse */
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc public final var colorBorderFocusInsetLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite } /* value of inverse token oudsColorBorderFocusInsetInverse */
  /// Has for value token colorRepositoryNeutralMutedWhite
    @objc public final var colorBorderFocusInsetDark: ColorSemanticToken { colorRepositoryNeutralMutedWhite } /* value of inverse token oudsColorBorderFocusInsetInverse */
    /// Has for value token colorRepositoryPrimaryDefault
    @objc public final var colorBorderBrandPrimaryLight: ColorSemanticToken { colorRepositoryPrimaryDefault } /* value of inverse token oudsColorBorderBrandPrimaryInverse */
  /// Has for value token colorRepositoryPrimaryDefault
    @objc public final var colorBorderBrandPrimaryDark: ColorSemanticToken { colorRepositoryPrimaryDefault } /* value of inverse token oudsColorBorderBrandPrimaryInverse */
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorBorderBrandSecondary: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorBorderBrandTertiary: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorBorderStatusPositive: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorBorderStatusInfo: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorBorderStatusWarning: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorBorderStatusNegative: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorBorderStatusAccent: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorBorderOnBrandPrimaryLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack } /* value of inverse token oudsColorBorderOnBrandPrimaryInverse */
  /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorBorderOnBrandPrimaryDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack } /* value of inverse token oudsColorBorderOnBrandPrimaryInverse */
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorBorderOnBrandSecondary: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorBorderOnBrandTertiary: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorActionEnabledLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack } /* value of inverse token oudsColorActionEnabledInverse */
  /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorActionEnabledDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack } /* value of inverse token oudsColorActionEnabledInverse */
    /// Has for value token colorRepositoryOpacityBlackHigher
    @objc public final var colorActionHoverLight: ColorSemanticToken { colorRepositoryOpacityBlackHigher } /* value of inverse token oudsColorActionHoverInverse */
  /// Has for value token colorRepositoryOpacityBlackHigher
    @objc public final var colorActionHoverDark: ColorSemanticToken { colorRepositoryOpacityBlackHigher } /* value of inverse token oudsColorActionHoverInverse */
    /// Has for value token colorRepositoryPrimaryDefault
    @objc public final var colorActionPressedLight: ColorSemanticToken { colorRepositoryPrimaryDefault } /* value of inverse token oudsColorActionPressedInverse */
  /// Has for value token colorRepositoryPrimaryDefault
    @objc public final var colorActionPressedDark: ColorSemanticToken { colorRepositoryPrimaryDefault } /* value of inverse token oudsColorActionPressedInverse */
    /// Has for value token colorRepositoryPrimaryDefault
    @objc public final var colorActionLoadingLight: ColorSemanticToken { colorRepositoryPrimaryDefault } /* value of inverse token oudsColorActionLoadingInverse */
  /// Has for value token colorRepositoryPrimaryDefault
    @objc public final var colorActionLoadingDark: ColorSemanticToken { colorRepositoryPrimaryDefault } /* value of inverse token oudsColorActionLoadingInverse */
    /// Has for value token colorRepositoryOpacityBlackMediumLow
    @objc public final var colorActionDisabledLight: ColorSemanticToken { colorRepositoryOpacityBlackMediumLow } /* value of inverse token oudsColorActionDisabledInverse */
  /// Has for value token colorRepositoryOpacityBlackMediumLow
    @objc public final var colorActionDisabledDark: ColorSemanticToken { colorRepositoryOpacityBlackMediumLow } /* value of inverse token oudsColorActionDisabledInverse */
    /// Has for value token colorRepositoryOpacityBlackHigher
    @objc public final var colorActionFocusLight: ColorSemanticToken { colorRepositoryOpacityBlackHigher } /* value of inverse token oudsColorActionFocusInverse */
  /// Has for value token colorRepositoryOpacityBlackHigher
    @objc public final var colorActionFocusDark: ColorSemanticToken { colorRepositoryOpacityBlackHigher } /* value of inverse token oudsColorActionFocusInverse */
    /// Has for value token colorRepositoryPrimaryDefault
    @objc public final var colorActionSelectedLight: ColorSemanticToken { colorRepositoryPrimaryDefault } /* value of inverse token oudsColorActionSelectedInverse */
  /// Has for value token colorRepositoryPrimaryDefault
    @objc public final var colorActionSelectedDark: ColorSemanticToken { colorRepositoryPrimaryDefault } /* value of inverse token oudsColorActionSelectedInverse */
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeAmethyst600
    @objc public final var colorActionVisitedLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeAmethyst600 } /* value of inverse token oudsColorActionVisitedInverse */
  /// Has for value token OrangeBrandColorRawTokens.colorDecorativeAmethyst600
    @objc public final var colorActionVisitedDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeAmethyst600 } /* value of inverse token oudsColorActionVisitedInverse */
    /// Has for value token colorRepositoryOpacityBlackLowest
    @objc public final var colorActionSupportEnabledLight: ColorSemanticToken { colorRepositoryOpacityBlackLowest } /* value of inverse token oudsColorActionSupportEnabledInverse */
  /// Has for value token colorRepositoryOpacityBlackLowest
    @objc public final var colorActionSupportEnabledDark: ColorSemanticToken { colorRepositoryOpacityBlackLowest } /* value of inverse token oudsColorActionSupportEnabledInverse */
    /// Has for value token colorRepositoryOpacityBlackLower
    @objc public final var colorActionSupportHoverLight: ColorSemanticToken { colorRepositoryOpacityBlackLower } /* value of inverse token oudsColorActionSupportHoverInverse */
  /// Has for value token colorRepositoryOpacityBlackLower
    @objc public final var colorActionSupportHoverDark: ColorSemanticToken { colorRepositoryOpacityBlackLower } /* value of inverse token oudsColorActionSupportHoverInverse */
    /// Has for value token colorRepositoryOpacityBlackLow
    @objc public final var colorActionSupportPressedLight: ColorSemanticToken { colorRepositoryOpacityBlackLow } /* value of inverse token oudsColorActionSupportPressedInverse */
  /// Has for value token colorRepositoryOpacityBlackLow
    @objc public final var colorActionSupportPressedDark: ColorSemanticToken { colorRepositoryOpacityBlackLow } /* value of inverse token oudsColorActionSupportPressedInverse */
    /// Has for value token colorRepositoryOpacityBlackLow
    @objc public final var colorActionSupportLoadingLight: ColorSemanticToken { colorRepositoryOpacityBlackLow } /* value of inverse token oudsColorActionSupportLoadingInverse */
  /// Has for value token colorRepositoryOpacityBlackLow
    @objc public final var colorActionSupportLoadingDark: ColorSemanticToken { colorRepositoryOpacityBlackLow } /* value of inverse token oudsColorActionSupportLoadingInverse */
    /// Has for value token colorRepositoryOpacityBlackLower
    @objc public final var colorActionSupportFocusLight: ColorSemanticToken { colorRepositoryOpacityBlackLower } /* value of inverse token oudsColorActionSupportFocusInverse */
  /// Has for value token colorRepositoryOpacityBlackLower
    @objc public final var colorActionSupportFocusDark: ColorSemanticToken { colorRepositoryOpacityBlackLower } /* value of inverse token oudsColorActionSupportFocusInverse */
    /// Has for value token colorRepositoryNegativeDefault
    @objc public final var colorActionNegativeEnabledLight: ColorSemanticToken { colorRepositoryNegativeDefault } /* value of inverse token oudsColorActionNegativeEnabledInverse */
  /// Has for value token colorRepositoryNegativeDefault
    @objc public final var colorActionNegativeEnabledDark: ColorSemanticToken { colorRepositoryNegativeDefault } /* value of inverse token oudsColorActionNegativeEnabledInverse */
    /// Has for value token colorRepositoryNegativeHigh
    @objc public final var colorActionNegativeHoverLight: ColorSemanticToken { colorRepositoryNegativeHigh } /* value of inverse token oudsColorActionNegativeHoverInverse */
  /// Has for value token colorRepositoryNegativeHigh
    @objc public final var colorActionNegativeHoverDark: ColorSemanticToken { colorRepositoryNegativeHigh } /* value of inverse token oudsColorActionNegativeHoverInverse */
    /// Has for value token colorRepositoryNegativeHigher
    @objc public final var colorActionNegativePressedLight: ColorSemanticToken { colorRepositoryNegativeHigher } /* value of inverse token oudsColorActionNegativePressedInverse */
  /// Has for value token colorRepositoryNegativeHigher
    @objc public final var colorActionNegativePressedDark: ColorSemanticToken { colorRepositoryNegativeHigher } /* value of inverse token oudsColorActionNegativePressedInverse */
    /// Has for value token colorRepositoryNegativeHigher
    @objc public final var colorActionNegativeLoadingLight: ColorSemanticToken { colorRepositoryNegativeHigher } /* value of inverse token oudsColorActionNegativeLoadingInverse */
  /// Has for value token colorRepositoryNegativeHigher
    @objc public final var colorActionNegativeLoadingDark: ColorSemanticToken { colorRepositoryNegativeHigher } /* value of inverse token oudsColorActionNegativeLoadingInverse */
    /// Has for value token colorRepositoryNegativeHigh
    @objc public final var colorActionNegativeFocusLight: ColorSemanticToken { colorRepositoryNegativeHigh } /* value of inverse token oudsColorActionNegativeFocusInverse */
  /// Has for value token colorRepositoryNegativeHigh
    @objc public final var colorActionNegativeFocusDark: ColorSemanticToken { colorRepositoryNegativeHigh } /* value of inverse token oudsColorActionNegativeFocusInverse */
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc public final var colorOverlayDefaultLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite } /* value of inverse token oudsColorOverlayDefaultInverse */
  /// Has for value token colorRepositoryNeutralMutedWhite
    @objc public final var colorOverlayDefaultDark: ColorSemanticToken { colorRepositoryNeutralMutedWhite } /* value of inverse token oudsColorOverlayDefaultInverse */
    /// Has for value token colorRepositoryNeutralEmphasizedHigh
    @objc public final var colorOverlayEmphasizedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedHigh } /* value of inverse token oudsColorOverlayEmphasizedInverse */
  /// Has for value token colorRepositoryNeutralEmphasizedHigh
    @objc public final var colorOverlayEmphasizedDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedHigh } /* value of inverse token oudsColorOverlayEmphasizedInverse */
    /// Has for value token colorRepositoryOpacityBlackLowest
    @objc public final var colorOverlayDragLight: ColorSemanticToken { colorRepositoryOpacityBlackLowest } /* value of inverse token oudsColorOverlayDragInverse */
  /// Has for value token colorRepositoryOpacityBlackLowest
    @objc public final var colorOverlayDragDark: ColorSemanticToken { colorRepositoryOpacityBlackLowest } /* value of inverse token oudsColorOverlayDragInverse */
    /// Has for value token colorRepositoryOpacityBlackTransparent
    @objc public final var colorOpacityTransparentLight: ColorSemanticToken { colorRepositoryOpacityBlackTransparent } /* value of inverse token oudsColorOpacityTransparentInverse */
  /// Has for value token colorRepositoryOpacityBlackTransparent
    @objc public final var colorOpacityTransparentDark: ColorSemanticToken { colorRepositoryOpacityBlackTransparent } /* value of inverse token oudsColorOpacityTransparentInverse */
    /// Has for value token colorRepositoryOpacityBlackLowest
    @objc public final var colorOpacityLowestLight: ColorSemanticToken { colorRepositoryOpacityBlackLowest } /* value of inverse token oudsColorOpacityLowestInverse */
  /// Has for value token colorRepositoryOpacityBlackLowest
    @objc public final var colorOpacityLowestDark: ColorSemanticToken { colorRepositoryOpacityBlackLowest } /* value of inverse token oudsColorOpacityLowestInverse */
    /// Has for value token colorRepositoryOpacityBlackLower
    @objc public final var colorOpacityLowerLight: ColorSemanticToken { colorRepositoryOpacityBlackLower } /* value of inverse token oudsColorOpacityLowerInverse */
  /// Has for value token colorRepositoryOpacityBlackLower
    @objc public final var colorOpacityLowerDark: ColorSemanticToken { colorRepositoryOpacityBlackLower } /* value of inverse token oudsColorOpacityLowerInverse */
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorAlwaysBlack: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc public final var colorAlwaysWhite: ColorSemanticToken { colorRepositoryNeutralMutedWhite }
    /// Has for value token colorRepositoryNeutralMutedLower
    @objc public final var colorAlwaysOnBlack: ColorSemanticToken { colorRepositoryNeutralMutedLower }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorAlwaysOnWhite: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token OrangeBrandColorRawTokens.colorOrange500
    @objc public final var colorDecorativeBrandPrimaryLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange500 } /* value of inverse token oudsColor1f3a8DecorativeBrandPrimary */
  /// Has for value token OrangeBrandColorRawTokens.colorOrange500
    @objc public final var colorDecorativeBrandPrimaryDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange500 } /* value of inverse token oudsColor1f3a8DecorativeBrandPrimary */
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorDecorativeBrandPrimaryMuted: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorDecorativeBrandPrimaryEmphasized: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalBlack
    @objc public final var colorDecorativeBrandSecondaryLight: ColorSemanticToken { ColorRawTokens.colorFunctionalBlack } /* value of inverse token oudsColor1f3a8DecorativeBrandSecondary */
  /// Has for value token ColorRawTokens.colorFunctionalBlack
    @objc public final var colorDecorativeBrandSecondaryDark: ColorSemanticToken { ColorRawTokens.colorFunctionalBlack } /* value of inverse token oudsColor1f3a8DecorativeBrandSecondary */
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorDecorativeBrandSecondaryMuted: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorDecorativeBrandSecondaryEmphasized: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalWhite
    @objc public final var colorDecorativeBrandTertiaryLight: ColorSemanticToken { ColorRawTokens.colorFunctionalWhite } /* value of inverse token oudsColor1f3a8DecorativeBrandTertiary */
  /// Has for value token ColorRawTokens.colorFunctionalWhite
    @objc public final var colorDecorativeBrandTertiaryDark: ColorSemanticToken { ColorRawTokens.colorFunctionalWhite } /* value of inverse token oudsColor1f3a8DecorativeBrandTertiary */
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorDecorativeBrandTertiaryMuted: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorDecorativeBrandTertiaryEmphasized: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalGrayLight80
    @objc public final var colorDecorativeNeutralMutedLowestLight: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayLight80 } /* value of inverse token oudsColor1f3a8DecorativeNeutralMutedLowest */
  /// Has for value token ColorRawTokens.colorFunctionalGrayLight80
    @objc public final var colorDecorativeNeutralMutedLowestDark: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayLight80 } /* value of inverse token oudsColor1f3a8DecorativeNeutralMutedLowest */
    /// Has for value token ColorRawTokens.colorFunctionalGrayLight160
    @objc public final var colorDecorativeNeutralMutedLowerLight: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayLight160 } /* value of inverse token oudsColor1f3a8DecorativeNeutralMutedLower */
  /// Has for value token ColorRawTokens.colorFunctionalGrayLight160
    @objc public final var colorDecorativeNeutralMutedLowerDark: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayLight160 } /* value of inverse token oudsColor1f3a8DecorativeNeutralMutedLower */
    /// Has for value token ColorRawTokens.colorFunctionalGrayLight240
    @objc public final var colorDecorativeNeutralMutedLowLight: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayLight240 } /* value of inverse token oudsColor1f3a8DecorativeNeutralMutedLow */
  /// Has for value token ColorRawTokens.colorFunctionalGrayLight240
    @objc public final var colorDecorativeNeutralMutedLowDark: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayLight240 } /* value of inverse token oudsColor1f3a8DecorativeNeutralMutedLow */
    /// Has for value token ColorRawTokens.colorFunctionalGrayLight320
    @objc public final var colorDecorativeNeutralMutedMediumLight: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayLight320 } /* value of inverse token oudsColor1f3a8DecorativeNeutralMutedMedium */
  /// Has for value token ColorRawTokens.colorFunctionalGrayLight320
    @objc public final var colorDecorativeNeutralMutedMediumDark: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayLight320 } /* value of inverse token oudsColor1f3a8DecorativeNeutralMutedMedium */
    /// Has for value token ColorRawTokens.colorFunctionalGrayLight400
    @objc public final var colorDecorativeNeutralMutedHighLight: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayLight400 } /* value of inverse token oudsColor1f3a8DecorativeNeutralMutedHigh */
  /// Has for value token ColorRawTokens.colorFunctionalGrayLight400
    @objc public final var colorDecorativeNeutralMutedHighDark: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayLight400 } /* value of inverse token oudsColor1f3a8DecorativeNeutralMutedHigh */
    /// Has for value token ColorRawTokens.colorFunctionalGrayLight800
    @objc public final var colorDecorativeNeutralMutedHigherLight: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayLight800 } /* value of inverse token oudsColor1f3a8DecorativeNeutralMutedHigher */
  /// Has for value token ColorRawTokens.colorFunctionalGrayLight800
    @objc public final var colorDecorativeNeutralMutedHigherDark: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayLight800 } /* value of inverse token oudsColor1f3a8DecorativeNeutralMutedHigher */
    /// Has for value token ColorRawTokens.colorFunctionalGrayLight960
    @objc public final var colorDecorativeNeutralMutedHighestLight: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayLight960 } /* value of inverse token oudsColor1f3a8DecorativeNeutralMutedHighest */
  /// Has for value token ColorRawTokens.colorFunctionalGrayLight960
    @objc public final var colorDecorativeNeutralMutedHighestDark: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayLight960 } /* value of inverse token oudsColor1f3a8DecorativeNeutralMutedHighest */
    /// Has for value token ColorRawTokens.colorFunctionalGrayDark240
    @objc public final var colorDecorativeNeutralEmphasizedLowestLight: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayDark240 } /* value of inverse token oudsColor1f3a8DecorativeNeutralEmphasizedLowest */
  /// Has for value token ColorRawTokens.colorFunctionalGrayDark240
    @objc public final var colorDecorativeNeutralEmphasizedLowestDark: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayDark240 } /* value of inverse token oudsColor1f3a8DecorativeNeutralEmphasizedLowest */
    /// Has for value token ColorRawTokens.colorFunctionalGrayDark320
    @objc public final var colorDecorativeNeutralEmphasizedLowerLight: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayDark320 } /* value of inverse token oudsColor1f3a8DecorativeNeutralEmphasizedLower */
  /// Has for value token ColorRawTokens.colorFunctionalGrayDark320
    @objc public final var colorDecorativeNeutralEmphasizedLowerDark: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayDark320 } /* value of inverse token oudsColor1f3a8DecorativeNeutralEmphasizedLower */
    /// Has for value token ColorRawTokens.colorFunctionalGrayDark400
    @objc public final var colorDecorativeNeutralEmphasizedLowLight: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayDark400 } /* value of inverse token oudsColor1f3a8DecorativeNeutralEmphasizedLow */
  /// Has for value token ColorRawTokens.colorFunctionalGrayDark400
    @objc public final var colorDecorativeNeutralEmphasizedLowDark: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayDark400 } /* value of inverse token oudsColor1f3a8DecorativeNeutralEmphasizedLow */
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorDecorativeNeutralEmphasizedMedium: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorDecorativeNeutralEmphasizedHigh: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalGrayDark640
    @objc public final var colorDecorativeNeutralEmphasizedHigherLight: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayDark640 } /* value of inverse token oudsColor1f3a8DecorativeNeutralEmphasizedHigher */
  /// Has for value token ColorRawTokens.colorFunctionalGrayDark640
    @objc public final var colorDecorativeNeutralEmphasizedHigherDark: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayDark640 } /* value of inverse token oudsColor1f3a8DecorativeNeutralEmphasizedHigher */
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeInverseTheme**
    @objc public final var colorDecorativeNeutralEmphasizedHighest: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeEmerald200
    @objc public final var colorDecorativeAccent1MutedLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeEmerald200 } /* value of inverse token oudsColor1f3a8DecorativeAccent1Muted */
  /// Has for value token OrangeBrandColorRawTokens.colorDecorativeEmerald200
    @objc public final var colorDecorativeAccent1MutedDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeEmerald200 } /* value of inverse token oudsColor1f3a8DecorativeAccent1Muted */
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeEmerald500
    @objc public final var colorDecorativeAccent1DefaultLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeEmerald500 } /* value of inverse token oudsColor1f3a8DecorativeAccent1Default */
  /// Has for value token OrangeBrandColorRawTokens.colorDecorativeEmerald500
    @objc public final var colorDecorativeAccent1DefaultDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeEmerald500 } /* value of inverse token oudsColor1f3a8DecorativeAccent1Default */
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeEmerald700
    @objc public final var colorDecorativeAccent1EmphasizedLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeEmerald700 } /* value of inverse token oudsColor1f3a8DecorativeAccent1Emphasized */
  /// Has for value token OrangeBrandColorRawTokens.colorDecorativeEmerald700
    @objc public final var colorDecorativeAccent1EmphasizedDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeEmerald700 } /* value of inverse token oudsColor1f3a8DecorativeAccent1Emphasized */
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeSky200
    @objc public final var colorDecorativeAccent2MutedLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeSky200 } /* value of inverse token oudsColor1f3a8DecorativeAccent2Muted */
  /// Has for value token OrangeBrandColorRawTokens.colorDecorativeSky200
    @objc public final var colorDecorativeAccent2MutedDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeSky200 } /* value of inverse token oudsColor1f3a8DecorativeAccent2Muted */
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeSky400
    @objc public final var colorDecorativeAccent2DefaultLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeSky400 } /* value of inverse token oudsColor1f3a8DecorativeAccent2Default */
  /// Has for value token OrangeBrandColorRawTokens.colorDecorativeSky400
    @objc public final var colorDecorativeAccent2DefaultDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeSky400 } /* value of inverse token oudsColor1f3a8DecorativeAccent2Default */
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeSky700
    @objc public final var colorDecorativeAccent2EmphasizedLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeSky700 } /* value of inverse token oudsColor1f3a8DecorativeAccent2Emphasized */
  /// Has for value token OrangeBrandColorRawTokens.colorDecorativeSky700
    @objc public final var colorDecorativeAccent2EmphasizedDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeSky700 } /* value of inverse token oudsColor1f3a8DecorativeAccent2Emphasized */
    /// Has for value token ColorRawTokens.colorFunctionalSun200
    @objc public final var colorDecorativeAccent3MutedLight: ColorSemanticToken { ColorRawTokens.colorFunctionalSun200 } /* value of inverse token oudsColor1f3a8DecorativeAccent3Muted */
  /// Has for value token ColorRawTokens.colorFunctionalSun200
    @objc public final var colorDecorativeAccent3MutedDark: ColorSemanticToken { ColorRawTokens.colorFunctionalSun200 } /* value of inverse token oudsColor1f3a8DecorativeAccent3Muted */
    /// Has for value token ColorRawTokens.colorFunctionalSun500
    @objc public final var colorDecorativeAccent3DefaultLight: ColorSemanticToken { ColorRawTokens.colorFunctionalSun500 } /* value of inverse token oudsColor1f3a8DecorativeAccent3Default */
  /// Has for value token ColorRawTokens.colorFunctionalSun500
    @objc public final var colorDecorativeAccent3DefaultDark: ColorSemanticToken { ColorRawTokens.colorFunctionalSun500 } /* value of inverse token oudsColor1f3a8DecorativeAccent3Default */
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeAmber500
    @objc public final var colorDecorativeAccent3EmphasizedLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeAmber500 } /* value of inverse token oudsColor1f3a8DecorativeAccent3Emphasized */
  /// Has for value token OrangeBrandColorRawTokens.colorDecorativeAmber500
    @objc public final var colorDecorativeAccent3EmphasizedDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeAmber500 } /* value of inverse token oudsColor1f3a8DecorativeAccent3Emphasized */
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeAmethyst200
    @objc public final var colorDecorativeAccent4MutedLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeAmethyst200 } /* value of inverse token oudsColor1f3a8DecorativeAccent4Muted */
  /// Has for value token OrangeBrandColorRawTokens.colorDecorativeAmethyst200
    @objc public final var colorDecorativeAccent4MutedDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeAmethyst200 } /* value of inverse token oudsColor1f3a8DecorativeAccent4Muted */
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeAmethyst400
    @objc public final var colorDecorativeAccent4DefaultLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeAmethyst400 } /* value of inverse token oudsColor1f3a8DecorativeAccent4Default */
  /// Has for value token OrangeBrandColorRawTokens.colorDecorativeAmethyst400
    @objc public final var colorDecorativeAccent4DefaultDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeAmethyst400 } /* value of inverse token oudsColor1f3a8DecorativeAccent4Default */
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeAmethyst800
    @objc public final var colorDecorativeAccent4EmphasizedLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeAmethyst800 } /* value of inverse token oudsColor1f3a8DecorativeAccent4Emphasized */
  /// Has for value token OrangeBrandColorRawTokens.colorDecorativeAmethyst800
    @objc public final var colorDecorativeAccent4EmphasizedDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeAmethyst800 } /* value of inverse token oudsColor1f3a8DecorativeAccent4Emphasized */
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeShockingPink100
    @objc public final var colorDecorativeAccent5MutedLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeShockingPink100 } /* value of inverse token oudsColor1f3a8DecorativeAccent5Muted */
  /// Has for value token OrangeBrandColorRawTokens.colorDecorativeShockingPink100
    @objc public final var colorDecorativeAccent5MutedDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeShockingPink100 } /* value of inverse token oudsColor1f3a8DecorativeAccent5Muted */
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeShockingPink200
    @objc public final var colorDecorativeAccent5DefaultLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeShockingPink200 } /* value of inverse token oudsColor1f3a8DecorativeAccent5Default */
  /// Has for value token OrangeBrandColorRawTokens.colorDecorativeShockingPink200
    @objc public final var colorDecorativeAccent5DefaultDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeShockingPink200 } /* value of inverse token oudsColor1f3a8DecorativeAccent5Default */
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeShockingPink300
    @objc public final var colorDecorativeAccent5EmphasizedLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeShockingPink300 } /* value of inverse token oudsColor1f3a8DecorativeAccent5Emphasized */
  /// Has for value token OrangeBrandColorRawTokens.colorDecorativeShockingPink300
    @objc public final var colorDecorativeAccent5EmphasizedDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeShockingPink300 } /* value of inverse token oudsColor1f3a8DecorativeAccent5Emphasized */
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeDeepPeach100
    @objc public final var colorDecorativeSkinTint100Light: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeDeepPeach100 } /* value of inverse token oudsColor1f3a8DecorativeSkinTint100 */
  /// Has for value token OrangeBrandColorRawTokens.colorDecorativeDeepPeach100
    @objc public final var colorDecorativeSkinTint100Dark: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeDeepPeach100 } /* value of inverse token oudsColor1f3a8DecorativeSkinTint100 */
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeDeepPeach200
    @objc public final var colorDecorativeSkinTint200Light: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeDeepPeach200 } /* value of inverse token oudsColor1f3a8DecorativeSkinTint200 */
  /// Has for value token OrangeBrandColorRawTokens.colorDecorativeDeepPeach200
    @objc public final var colorDecorativeSkinTint200Dark: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeDeepPeach200 } /* value of inverse token oudsColor1f3a8DecorativeSkinTint200 */
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeDeepPeach300
    @objc public final var colorDecorativeSkinTint300Light: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeDeepPeach300 } /* value of inverse token oudsColor1f3a8DecorativeSkinTint300 */
  /// Has for value token OrangeBrandColorRawTokens.colorDecorativeDeepPeach300
    @objc public final var colorDecorativeSkinTint300Dark: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeDeepPeach300 } /* value of inverse token oudsColor1f3a8DecorativeSkinTint300 */
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeDeepPeach400
    @objc public final var colorDecorativeSkinTint400Light: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeDeepPeach400 } /* value of inverse token oudsColor1f3a8DecorativeSkinTint400 */
  /// Has for value token OrangeBrandColorRawTokens.colorDecorativeDeepPeach400
    @objc public final var colorDecorativeSkinTint400Dark: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeDeepPeach400 } /* value of inverse token oudsColor1f3a8DecorativeSkinTint400 */
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeDeepPeach500
    @objc public final var colorDecorativeSkinTint500Light: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeDeepPeach500 } /* value of inverse token oudsColor1f3a8DecorativeSkinTint500 */
  /// Has for value token OrangeBrandColorRawTokens.colorDecorativeDeepPeach500
    @objc public final var colorDecorativeSkinTint500Dark: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeDeepPeach500 } /* value of inverse token oudsColor1f3a8DecorativeSkinTint500 */
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeDeepPeach600
    @objc public final var colorDecorativeSkinTint600Light: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeDeepPeach600 } /* value of inverse token oudsColor1f3a8DecorativeSkinTint600 */
  /// Has for value token OrangeBrandColorRawTokens.colorDecorativeDeepPeach600
    @objc public final var colorDecorativeSkinTint600Dark: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeDeepPeach600 } /* value of inverse token oudsColor1f3a8DecorativeSkinTint600 */
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeDeepPeach700
    @objc public final var colorDecorativeSkinTint700Light: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeDeepPeach700 } /* value of inverse token oudsColor1f3a8DecorativeSkinTint700 */
  /// Has for value token OrangeBrandColorRawTokens.colorDecorativeDeepPeach700
    @objc public final var colorDecorativeSkinTint700Dark: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeDeepPeach700 } /* value of inverse token oudsColor1f3a8DecorativeSkinTint700 */
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeDeepPeach800
    @objc public final var colorDecorativeSkinTint800Light: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeDeepPeach800 } /* value of inverse token oudsColor1f3a8DecorativeSkinTint800 */
  /// Has for value token OrangeBrandColorRawTokens.colorDecorativeDeepPeach800
    @objc public final var colorDecorativeSkinTint800Dark: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeDeepPeach800 } /* value of inverse token oudsColor1f3a8DecorativeSkinTint800 */
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeDeepPeach900
    @objc public final var colorDecorativeSkinTint900Light: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeDeepPeach900 } /* value of inverse token oudsColor1f3a8DecorativeSkinTint900 */
  /// Has for value token OrangeBrandColorRawTokens.colorDecorativeDeepPeach900
    @objc public final var colorDecorativeSkinTint900Dark: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeDeepPeach900 } /* value of inverse token oudsColor1f3a8DecorativeSkinTint900 */
}
