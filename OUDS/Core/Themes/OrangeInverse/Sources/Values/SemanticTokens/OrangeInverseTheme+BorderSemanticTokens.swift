//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System
//

import Foundation
import OUDSTokensRaw
import OUDSTokensSemantic

// ðŸ§± Tokens version: 1.1.0
// ðŸ¤– Generated by Tokenator

extension OrangeInverseThemeBorderSemanticTokensProvider: BorderSemanticTokens {
    /// Has for value token BorderRawTokens.borderWidth0
    @objc public final var borderWidthNoneLight: BorderWidthSemanticToken { BorderRawTokens.borderWidth0 } /* value of inverse token oudsBorderWidthNone */
  /// Has for value token BorderRawTokens.borderWidth0
    @objc public final var borderWidthNoneDark: BorderWidthSemanticToken { BorderRawTokens.borderWidth0 } /* value of inverse token oudsBorderWidthNone */
    /// Has for value token BorderRawTokens.borderWidth25
    @objc public final var borderWidthDefaultLight: BorderWidthSemanticToken { BorderRawTokens.borderWidth25 } /* value of inverse token oudsBorderWidthDefault */
  /// Has for value token BorderRawTokens.borderWidth25
    @objc public final var borderWidthDefaultDark: BorderWidthSemanticToken { BorderRawTokens.borderWidth25 } /* value of inverse token oudsBorderWidthDefault */
    /// Has for value token BorderRawTokens.borderWidth25
    @objc public final var borderWidthThinLight: BorderWidthSemanticToken { BorderRawTokens.borderWidth25 } /* value of inverse token oudsBorderWidthThin */
  /// Has for value token BorderRawTokens.borderWidth25
    @objc public final var borderWidthThinDark: BorderWidthSemanticToken { BorderRawTokens.borderWidth25 } /* value of inverse token oudsBorderWidthThin */
    /// Has for value token BorderRawTokens.borderWidth50
    @objc public final var borderWidthMediumLight: BorderWidthSemanticToken { BorderRawTokens.borderWidth50 } /* value of inverse token oudsBorderWidthMedium */
  /// Has for value token BorderRawTokens.borderWidth50
    @objc public final var borderWidthMediumDark: BorderWidthSemanticToken { BorderRawTokens.borderWidth50 } /* value of inverse token oudsBorderWidthMedium */
    /// Has for value token BorderRawTokens.borderWidth75
    @objc public final var borderWidthThickLight: BorderWidthSemanticToken { BorderRawTokens.borderWidth75 } /* value of inverse token oudsBorderWidthThick */
  /// Has for value token BorderRawTokens.borderWidth75
    @objc public final var borderWidthThickDark: BorderWidthSemanticToken { BorderRawTokens.borderWidth75 } /* value of inverse token oudsBorderWidthThick */
    /// Has for value token BorderRawTokens.borderWidth100
    @objc public final var borderWidthThickerLight: BorderWidthSemanticToken { BorderRawTokens.borderWidth100 } /* value of inverse token oudsBorderWidthThicker */
  /// Has for value token BorderRawTokens.borderWidth100
    @objc public final var borderWidthThickerDark: BorderWidthSemanticToken { BorderRawTokens.borderWidth100 } /* value of inverse token oudsBorderWidthThicker */
    /// Has for value token BorderRawTokens.borderWidth125
    @objc public final var borderWidthFocusLight: BorderWidthSemanticToken { BorderRawTokens.borderWidth125 } /* value of inverse token oudsBorderWidthFocus */
  /// Has for value token BorderRawTokens.borderWidth125
    @objc public final var borderWidthFocusDark: BorderWidthSemanticToken { BorderRawTokens.borderWidth125 } /* value of inverse token oudsBorderWidthFocus */
    /// Has for value token BorderRawTokens.borderWidth50
    @objc public final var borderWidthFocusInsetLight: BorderWidthSemanticToken { BorderRawTokens.borderWidth50 } /* value of inverse token oudsBorderWidthFocusInset */
  /// Has for value token BorderRawTokens.borderWidth50
    @objc public final var borderWidthFocusInsetDark: BorderWidthSemanticToken { BorderRawTokens.borderWidth50 } /* value of inverse token oudsBorderWidthFocusInset */
    /// Has for value token BorderRawTokens.borderRadius0
    @objc public final var borderRadiusNoneLight: BorderRadiusSemanticToken { BorderRawTokens.borderRadius0 } /* value of inverse token oudsBorderRadiusNone */
  /// Has for value token BorderRawTokens.borderRadius0
    @objc public final var borderRadiusNoneDark: BorderRadiusSemanticToken { BorderRawTokens.borderRadius0 } /* value of inverse token oudsBorderRadiusNone */
    /// Has for value token BorderRawTokens.borderRadius0
    @objc public final var borderRadiusDefaultLight: BorderRadiusSemanticToken { BorderRawTokens.borderRadius0 } /* value of inverse token oudsBorderRadiusDefault */
  /// Has for value token BorderRawTokens.borderRadius0
    @objc public final var borderRadiusDefaultDark: BorderRadiusSemanticToken { BorderRawTokens.borderRadius0 } /* value of inverse token oudsBorderRadiusDefault */
    /// Has for value token BorderRawTokens.borderRadius75
    @objc public final var borderRadiusSmallLight: BorderRadiusSemanticToken { BorderRawTokens.borderRadius75 } /* value of inverse token oudsBorderRadiusSmall */
  /// Has for value token BorderRawTokens.borderRadius75
    @objc public final var borderRadiusSmallDark: BorderRadiusSemanticToken { BorderRawTokens.borderRadius75 } /* value of inverse token oudsBorderRadiusSmall */
    /// Has for value token BorderRawTokens.borderRadius150
    @objc public final var borderRadiusMediumLight: BorderRadiusSemanticToken { BorderRawTokens.borderRadius150 } /* value of inverse token oudsBorderRadiusMedium */
  /// Has for value token BorderRawTokens.borderRadius150
    @objc public final var borderRadiusMediumDark: BorderRadiusSemanticToken { BorderRawTokens.borderRadius150 } /* value of inverse token oudsBorderRadiusMedium */
    /// Has for value token BorderRawTokens.borderRadius300
    @objc public final var borderRadiusLargeLight: BorderRadiusSemanticToken { BorderRawTokens.borderRadius300 } /* value of inverse token oudsBorderRadiusLarge */
  /// Has for value token BorderRawTokens.borderRadius300
    @objc public final var borderRadiusLargeDark: BorderRadiusSemanticToken { BorderRawTokens.borderRadius300 } /* value of inverse token oudsBorderRadiusLarge */
    /// Has for value token BorderRawTokens.borderRadius9999
    @objc public final var borderRadiusPillLight: BorderRadiusSemanticToken { BorderRawTokens.borderRadius9999 } /* value of inverse token oudsBorderRadiusPill */
  /// Has for value token BorderRawTokens.borderRadius9999
    @objc public final var borderRadiusPillDark: BorderRadiusSemanticToken { BorderRawTokens.borderRadius9999 } /* value of inverse token oudsBorderRadiusPill */
    /// Has for value token BorderRawTokens.borderStyleSolid
    @objc public final var borderStyleDefaultLight: BorderStyleSemanticToken { BorderRawTokens.borderStyleSolid } /* value of inverse token oudsBorderStyleDefault */
  /// Has for value token BorderRawTokens.borderStyleSolid
    @objc public final var borderStyleDefaultDark: BorderStyleSemanticToken { BorderRawTokens.borderStyleSolid } /* value of inverse token oudsBorderStyleDefault */
    /// Has for value token BorderRawTokens.borderStyleDashed
    @objc public final var borderStyleDragLight: BorderStyleSemanticToken { BorderRawTokens.borderStyleDashed } /* value of inverse token oudsBorderStyleDrag */
  /// Has for value token BorderRawTokens.borderStyleDashed
    @objc public final var borderStyleDragDark: BorderStyleSemanticToken { BorderRawTokens.borderStyleDashed } /* value of inverse token oudsBorderStyleDrag */
}
