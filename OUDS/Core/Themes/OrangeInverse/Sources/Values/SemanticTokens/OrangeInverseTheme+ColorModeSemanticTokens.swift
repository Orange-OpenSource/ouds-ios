//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System
//

import Foundation
import OUDSTokensRaw
import OUDSTokensSemantic

// ðŸ§¬ Tokens version: 1.5.0 (Orange Inverse brand)
// ðŸ¤– Generated by Tokenator

extension OrangeInverseThemeColorModeSemanticTokensProvider: ColorModeSemanticTokens {
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnBgPrimaryLight: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnBgPrimaryDark: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnBgSecondaryLight: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnBgSecondaryDark: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnBgTertiaryLight: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnBgTertiaryDark: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.light
    @objc public final var modeOnBgEmphasizedLight: ColorModeSemanticToken { ColorModeRawTokens.light }
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnBgEmphasizedDark: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public final var modeOnBrandPrimaryLight: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight }
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public final var modeOnBrandPrimaryDark: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight }
    /// Has for value token ColorModeRawTokens.undefined
    @objc public final var modeOnBrandSecondaryLight: ColorModeSemanticToken { ColorModeRawTokens.undefined }
    /// Has for value token ColorModeRawTokens.undefined
    @objc public final var modeOnBrandSecondaryDark: ColorModeSemanticToken { ColorModeRawTokens.undefined }
    /// Has for value token ColorModeRawTokens.undefined
    @objc public final var modeOnBrandTertiaryLight: ColorModeSemanticToken { ColorModeRawTokens.undefined }
    /// Has for value token ColorModeRawTokens.undefined
    @objc public final var modeOnBrandTertiaryDark: ColorModeSemanticToken { ColorModeRawTokens.undefined }
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnStatusNeutralMutedLight: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnStatusNeutralMutedDark: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.light
    @objc public final var modeOnStatusNeutralEmphasizedLight: ColorModeSemanticToken { ColorModeRawTokens.light }
    /// Has for value token ColorModeRawTokens.light
    @objc public final var modeOnStatusNeutralEmphasizedDark: ColorModeSemanticToken { ColorModeRawTokens.light }
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnStatusPositiveMutedLight: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnStatusPositiveMutedDark: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public final var modeOnStatusPositiveEmphasizedLight: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight }
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public final var modeOnStatusPositiveEmphasizedDark: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight }
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnStatusInfoMutedLight: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnStatusInfoMutedDark: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public final var modeOnStatusInfoEmphasizedLight: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight }
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public final var modeOnStatusInfoEmphasizedDark: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight }
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnStatusWarningMutedLight: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnStatusWarningMutedDark: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public final var modeOnStatusWarningEmphasizedLight: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight }
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public final var modeOnStatusWarningEmphasizedDark: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight }
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnStatusNegativeMutedLight: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnStatusNegativeMutedDark: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public final var modeOnStatusNegativeEmphasizedLight: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight }
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public final var modeOnStatusNegativeEmphasizedDark: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight }
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnStatusAccentMutedLight: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnStatusAccentMutedDark: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public final var modeOnStatusAccentEmphasizedLight: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight }
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public final var modeOnStatusAccentEmphasizedDark: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight }
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnOverlayDefaultLight: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnOverlayDefaultDark: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.light
    @objc public final var modeOnOverlayEmphasizedLight: ColorModeSemanticToken { ColorModeRawTokens.light }
    /// Has for value token ColorModeRawTokens.light
    @objc public final var modeOnOverlayEmphasizedDark: ColorModeSemanticToken { ColorModeRawTokens.light }
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnOverlayModalLight: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnOverlayModalDark: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeNavigationBarLight: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeNavigationBarDark: ColorModeSemanticToken { ColorModeRawTokens.dark }
}
