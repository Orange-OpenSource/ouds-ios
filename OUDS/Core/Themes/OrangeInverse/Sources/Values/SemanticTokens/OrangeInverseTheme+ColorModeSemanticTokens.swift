//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System
//

import Foundation
import OUDSTokensRaw
import OUDSTokensSemantic

// ðŸ§± Tokens version: 1.1.0
// ðŸ¤– Generated by Tokenator

extension OrangeInverseThemeColorModeSemanticTokensProvider: ColorModeSemanticTokens {
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnBgPrimaryLightLight: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnBgPrimaryLight */
  /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnBgPrimaryLightDark: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnBgPrimaryLight */
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnBgPrimaryDarkLight: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnBgPrimaryDark */
  /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnBgPrimaryDarkDark: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnBgPrimaryDark */
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnBgSecondaryLightLight: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnBgSecondaryLight */
  /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnBgSecondaryLightDark: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnBgSecondaryLight */
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnBgSecondaryDarkLight: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnBgSecondaryDark */
  /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnBgSecondaryDarkDark: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnBgSecondaryDark */
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnBgTertiaryLightLight: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnBgTertiaryLight */
  /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnBgTertiaryLightDark: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnBgTertiaryLight */
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnBgTertiaryDarkLight: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnBgTertiaryDark */
  /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnBgTertiaryDarkDark: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnBgTertiaryDark */
    /// Has for value token ColorModeRawTokens.light
    @objc public final var modeOnBgEmphasizedLightLight: ColorModeSemanticToken { ColorModeRawTokens.light } /* value of inverse token oudsColor1f4a1ModesOnBgEmphasizedLight */
  /// Has for value token ColorModeRawTokens.light
    @objc public final var modeOnBgEmphasizedLightDark: ColorModeSemanticToken { ColorModeRawTokens.light } /* value of inverse token oudsColor1f4a1ModesOnBgEmphasizedLight */
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnBgEmphasizedDarkLight: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnBgEmphasizedDark */
  /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnBgEmphasizedDarkDark: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnBgEmphasizedDark */
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public final var modeOnBrandPrimaryLightLight: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight } /* value of inverse token oudsColor1f4a1ModesOnBrandPrimaryLight */
  /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public final var modeOnBrandPrimaryLightDark: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight } /* value of inverse token oudsColor1f4a1ModesOnBrandPrimaryLight */
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public final var modeOnBrandPrimaryDarkLight: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight } /* value of inverse token oudsColor1f4a1ModesOnBrandPrimaryDark */
  /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public final var modeOnBrandPrimaryDarkDark: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight } /* value of inverse token oudsColor1f4a1ModesOnBrandPrimaryDark */
    /// Has for value token ColorModeRawTokens.undefined
    @objc public final var modeOnBrandSecondaryLightLight: ColorModeSemanticToken { ColorModeRawTokens.undefined } /* value of inverse token oudsColor1f4a1ModesOnBrandSecondaryLight */
  /// Has for value token ColorModeRawTokens.undefined
    @objc public final var modeOnBrandSecondaryLightDark: ColorModeSemanticToken { ColorModeRawTokens.undefined } /* value of inverse token oudsColor1f4a1ModesOnBrandSecondaryLight */
    /// Has for value token ColorModeRawTokens.undefined
    @objc public final var modeOnBrandSecondaryDarkLight: ColorModeSemanticToken { ColorModeRawTokens.undefined } /* value of inverse token oudsColor1f4a1ModesOnBrandSecondaryDark */
  /// Has for value token ColorModeRawTokens.undefined
    @objc public final var modeOnBrandSecondaryDarkDark: ColorModeSemanticToken { ColorModeRawTokens.undefined } /* value of inverse token oudsColor1f4a1ModesOnBrandSecondaryDark */
    /// Has for value token ColorModeRawTokens.undefined
    @objc public final var modeOnBrandTertiaryLightLight: ColorModeSemanticToken { ColorModeRawTokens.undefined } /* value of inverse token oudsColor1f4a1ModesOnBrandTertiaryLight */
  /// Has for value token ColorModeRawTokens.undefined
    @objc public final var modeOnBrandTertiaryLightDark: ColorModeSemanticToken { ColorModeRawTokens.undefined } /* value of inverse token oudsColor1f4a1ModesOnBrandTertiaryLight */
    /// Has for value token ColorModeRawTokens.undefined
    @objc public final var modeOnBrandTertiaryDarkLight: ColorModeSemanticToken { ColorModeRawTokens.undefined } /* value of inverse token oudsColor1f4a1ModesOnBrandTertiaryDark */
  /// Has for value token ColorModeRawTokens.undefined
    @objc public final var modeOnBrandTertiaryDarkDark: ColorModeSemanticToken { ColorModeRawTokens.undefined } /* value of inverse token oudsColor1f4a1ModesOnBrandTertiaryDark */
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnStatusNeutralMutedLightLight: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnStatusNeutralMutedLight */
  /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnStatusNeutralMutedLightDark: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnStatusNeutralMutedLight */
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnStatusNeutralMutedDarkLight: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnStatusNeutralMutedDark */
  /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnStatusNeutralMutedDarkDark: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnStatusNeutralMutedDark */
    /// Has for value token ColorModeRawTokens.light
    @objc public final var modeOnStatusNeutralEmphasizedLightLight: ColorModeSemanticToken { ColorModeRawTokens.light } /* value of inverse token oudsColor1f4a1ModesOnStatusNeutralEmphasizedLight */
  /// Has for value token ColorModeRawTokens.light
    @objc public final var modeOnStatusNeutralEmphasizedLightDark: ColorModeSemanticToken { ColorModeRawTokens.light } /* value of inverse token oudsColor1f4a1ModesOnStatusNeutralEmphasizedLight */
    /// Has for value token ColorModeRawTokens.light
    @objc public final var modeOnStatusNeutralEmphasizedDarkLight: ColorModeSemanticToken { ColorModeRawTokens.light } /* value of inverse token oudsColor1f4a1ModesOnStatusNeutralEmphasizedDark */
  /// Has for value token ColorModeRawTokens.light
    @objc public final var modeOnStatusNeutralEmphasizedDarkDark: ColorModeSemanticToken { ColorModeRawTokens.light } /* value of inverse token oudsColor1f4a1ModesOnStatusNeutralEmphasizedDark */
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnStatusPositiveMutedLightLight: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnStatusPositiveMutedLight */
  /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnStatusPositiveMutedLightDark: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnStatusPositiveMutedLight */
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnStatusPositiveMutedDarkLight: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnStatusPositiveMutedDark */
  /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnStatusPositiveMutedDarkDark: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnStatusPositiveMutedDark */
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public final var modeOnStatusPositiveEmphasizedLightLight: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight } /* value of inverse token oudsColor1f4a1ModesOnStatusPositiveEmphasizedLight */
  /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public final var modeOnStatusPositiveEmphasizedLightDark: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight } /* value of inverse token oudsColor1f4a1ModesOnStatusPositiveEmphasizedLight */
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public final var modeOnStatusPositiveEmphasizedDarkLight: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight } /* value of inverse token oudsColor1f4a1ModesOnStatusPositiveEmphasizedDark */
  /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public final var modeOnStatusPositiveEmphasizedDarkDark: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight } /* value of inverse token oudsColor1f4a1ModesOnStatusPositiveEmphasizedDark */
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnStatusInfoMutedLightLight: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnStatusInfoMutedLight */
  /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnStatusInfoMutedLightDark: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnStatusInfoMutedLight */
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnStatusInfoMutedDarkLight: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnStatusInfoMutedDark */
  /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnStatusInfoMutedDarkDark: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnStatusInfoMutedDark */
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public final var modeOnStatusInfoEmphasizedLightLight: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight } /* value of inverse token oudsColor1f4a1ModesOnStatusInfoEmphasizedLight */
  /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public final var modeOnStatusInfoEmphasizedLightDark: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight } /* value of inverse token oudsColor1f4a1ModesOnStatusInfoEmphasizedLight */
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public final var modeOnStatusInfoEmphasizedDarkLight: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight } /* value of inverse token oudsColor1f4a1ModesOnStatusInfoEmphasizedDark */
  /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public final var modeOnStatusInfoEmphasizedDarkDark: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight } /* value of inverse token oudsColor1f4a1ModesOnStatusInfoEmphasizedDark */
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnStatusWarningMutedLightLight: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnStatusWarningMutedLight */
  /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnStatusWarningMutedLightDark: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnStatusWarningMutedLight */
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnStatusWarningMutedDarkLight: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnStatusWarningMutedDark */
  /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnStatusWarningMutedDarkDark: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnStatusWarningMutedDark */
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public final var modeOnStatusWarningEmphasizedLightLight: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight } /* value of inverse token oudsColor1f4a1ModesOnStatusWarningEmphasizedLight */
  /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public final var modeOnStatusWarningEmphasizedLightDark: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight } /* value of inverse token oudsColor1f4a1ModesOnStatusWarningEmphasizedLight */
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public final var modeOnStatusWarningEmphasizedDarkLight: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight } /* value of inverse token oudsColor1f4a1ModesOnStatusWarningEmphasizedDark */
  /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public final var modeOnStatusWarningEmphasizedDarkDark: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight } /* value of inverse token oudsColor1f4a1ModesOnStatusWarningEmphasizedDark */
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnStatusNegativeMutedLightLight: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnStatusNegativeMutedLight */
  /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnStatusNegativeMutedLightDark: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnStatusNegativeMutedLight */
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnStatusNegativeMutedDarkLight: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnStatusNegativeMutedDark */
  /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnStatusNegativeMutedDarkDark: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnStatusNegativeMutedDark */
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public final var modeOnStatusNegativeEmphasizedLightLight: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight } /* value of inverse token oudsColor1f4a1ModesOnStatusNegativeEmphasizedLight */
  /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public final var modeOnStatusNegativeEmphasizedLightDark: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight } /* value of inverse token oudsColor1f4a1ModesOnStatusNegativeEmphasizedLight */
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public final var modeOnStatusNegativeEmphasizedDarkLight: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight } /* value of inverse token oudsColor1f4a1ModesOnStatusNegativeEmphasizedDark */
  /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public final var modeOnStatusNegativeEmphasizedDarkDark: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight } /* value of inverse token oudsColor1f4a1ModesOnStatusNegativeEmphasizedDark */
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnStatusAccentMutedLightLight: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnStatusAccentMutedLight */
  /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnStatusAccentMutedLightDark: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnStatusAccentMutedLight */
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnStatusAccentMutedDarkLight: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnStatusAccentMutedDark */
  /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnStatusAccentMutedDarkDark: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnStatusAccentMutedDark */
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public final var modeOnStatusAccentEmphasizedLightLight: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight } /* value of inverse token oudsColor1f4a1ModesOnStatusAccentEmphasizedLight */
  /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public final var modeOnStatusAccentEmphasizedLightDark: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight } /* value of inverse token oudsColor1f4a1ModesOnStatusAccentEmphasizedLight */
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public final var modeOnStatusAccentEmphasizedDarkLight: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight } /* value of inverse token oudsColor1f4a1ModesOnStatusAccentEmphasizedDark */
  /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public final var modeOnStatusAccentEmphasizedDarkDark: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight } /* value of inverse token oudsColor1f4a1ModesOnStatusAccentEmphasizedDark */
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnOverlayDefaultLightLight: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnOverlayDefaultLight */
  /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnOverlayDefaultLightDark: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnOverlayDefaultLight */
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnOverlayDefaultDarkLight: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnOverlayDefaultDark */
  /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnOverlayDefaultDarkDark: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnOverlayDefaultDark */
    /// Has for value token ColorModeRawTokens.light
    @objc public final var modeOnOverlayEmphasizedLightLight: ColorModeSemanticToken { ColorModeRawTokens.light } /* value of inverse token oudsColor1f4a1ModesOnOverlayEmphasizedLight */
  /// Has for value token ColorModeRawTokens.light
    @objc public final var modeOnOverlayEmphasizedLightDark: ColorModeSemanticToken { ColorModeRawTokens.light } /* value of inverse token oudsColor1f4a1ModesOnOverlayEmphasizedLight */
    /// Has for value token ColorModeRawTokens.light
    @objc public final var modeOnOverlayEmphasizedDarkLight: ColorModeSemanticToken { ColorModeRawTokens.light } /* value of inverse token oudsColor1f4a1ModesOnOverlayEmphasizedDark */
  /// Has for value token ColorModeRawTokens.light
    @objc public final var modeOnOverlayEmphasizedDarkDark: ColorModeSemanticToken { ColorModeRawTokens.light } /* value of inverse token oudsColor1f4a1ModesOnOverlayEmphasizedDark */
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnModalLightLight: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnModalLight */
  /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnModalLightDark: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnModalLight */
    /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnModalDarkLight: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnModalDark */
  /// Has for value token ColorModeRawTokens.dark
    @objc public final var modeOnModalDarkDark: ColorModeSemanticToken { ColorModeRawTokens.dark } /* value of inverse token oudsColor1f4a1ModesOnModalDark */
}
