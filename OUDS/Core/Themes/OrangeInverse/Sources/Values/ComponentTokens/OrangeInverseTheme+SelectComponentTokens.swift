//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System
//

import Foundation
import OUDSTokensComponent
import OUDSTokensRaw
import OUDSTokensSemantic

// ðŸ§± Tokens version: 0.11.0
// ðŸ¤– Generated by Tokenator

extension OrangeInverseThemeSelectComponentTokensProvider: SelectComponentTokens {
    @objc public var selectSizeMaxHeightContainerIcon: SizeSemanticToken { DimensionRawTokens.dimension600 }
    @objc public var selectSizeMinHeight: SizeSemanticToken { DimensionRawTokens.dimension600 }
    @objc public var selectSizeMinHeightIconOnly: SizeSemanticToken { DimensionRawTokens.dimension600 }
    @objc public var selectSizeMinWidth: SizeSemanticToken { DimensionRawTokens.dimension600 }
    @objc public var selectSizeMinWidthIconOnly: SizeSemanticToken { DimensionRawTokens.dimension600 }
    @objc public var selectColorBgDisabled: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc public var selectColorBgEnabled: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc public var selectColorBgFocus: MultipleColorSemanticTokens { colors.colorActionSupportFocus }
    @objc public var selectColorBgHover: MultipleColorSemanticTokens { colors.colorActionSupportHover }
    @objc public var selectColorBgLoading: MultipleColorSemanticTokens { colors.colorActionSupportLoading }
    @objc public var selectColorBgPressed: MultipleColorSemanticTokens { colors.colorActionSupportPressed }
    @objc public var selectColorBorderDisabled: MultipleColorSemanticTokens { colors.colorActionDisabled }
    @objc public var selectColorBorderEnabled: MultipleColorSemanticTokens { colors.colorActionSelected }
    @objc public var selectColorBorderHover: MultipleColorSemanticTokens { colors.colorActionHover }
    @objc public var selectColorBorderLoading: MultipleColorSemanticTokens { colors.colorActionLoading }
    @objc public var selectColorBorderPressed: MultipleColorSemanticTokens { colors.colorActionPressed }
    @objc public var selectColorContentDisabled: MultipleColorSemanticTokens { colors.colorContentDisabled }
    @objc public var selectColorContentEnabled: MultipleColorSemanticTokens { colors.colorContentDefault }
    @objc public var selectColorContentFocus: MultipleColorSemanticTokens { colors.colorContentDefault }
    @objc public var selectColorContentHelperTextDisabled: MultipleColorSemanticTokens { colors.colorContentDisabled }
    @objc public var selectColorContentHelperTextEnabled: MultipleColorSemanticTokens { colors.colorContentMuted }
    @objc public var selectColorContentHelperTextFocus: MultipleColorSemanticTokens { colors.colorContentMuted }
    @objc public var selectColorContentHelperTextHover: MultipleColorSemanticTokens { colors.colorContentMuted }
    @objc public var selectColorContentHelperTextLoading: MultipleColorSemanticTokens { colors.colorContentMuted }
    @objc public var selectColorContentHelperTextPressed: MultipleColorSemanticTokens { colors.colorContentMuted }
    @objc public var selectColorContentHover: MultipleColorSemanticTokens { colors.colorContentDefault }
    @objc public var selectColorContentLoading: MultipleColorSemanticTokens { colors.colorContentDefault }
    @objc public var selectColorContentPressed: MultipleColorSemanticTokens { colors.colorContentDefault }
    @objc public var selectSizeCheckBox: SizeSemanticToken { sizes.sizeIconWithLabelLargeSizeSm }
    @objc public var selectSizeIcon: SizeSemanticToken { sizes.sizeIconWithLabelLargeSizeMd }
    @objc public var selectSizeLoader: SizeSemanticToken { sizes.sizeIconWithLabelLargeSizeSm }
    @objc public var selectSpaceColumnGap: SpaceSemanticToken { spaces.spaceColumnGapLg }
    @objc public var selectSpacePaddingInset: SpaceSemanticToken { spaces.spaceInsetMd }
    @objc public var selectSpaceRowGap: SpaceSemanticToken { spaces.spaceRowGapNone }
}
