//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System
//

import Foundation
import OUDSTokensRaw
import OUDSTokensSemantic

// ðŸ§± Tokens version: 1.1.0
// ðŸ¤– Generated by Tokenator

extension OrangeBusinessToolsThemeElevationSemanticTokensProvider: ElevationSemanticTokens {
    /// Has for value token ElevationRawTokens.elevationX0
    @objc public final var elevationXNone: ElevationXSemanticToken { ElevationRawTokens.elevationX0 }
    /// Has for value token ElevationRawTokens.elevationX0
    @objc public final var elevationXRaised: ElevationXSemanticToken { ElevationRawTokens.elevationX0 }
    /// Has for value token ElevationRawTokens.elevationX0
    @objc public final var elevationXDefault: ElevationXSemanticToken { ElevationRawTokens.elevationX0 }
    /// Has for value token ElevationRawTokens.elevationX0
    @objc public final var elevationXEmphasized: ElevationXSemanticToken { ElevationRawTokens.elevationX0 }
    /// Has for value token ElevationRawTokens.elevationX0
    @objc public final var elevationXDrag: ElevationXSemanticToken { ElevationRawTokens.elevationX0 }
    /// Has for value token ElevationRawTokens.elevationX0
    @objc public final var elevationXStickyDefault: ElevationXSemanticToken { ElevationRawTokens.elevationX0 }
    /// Has for value token ElevationRawTokens.elevationX0
    @objc public final var elevationXStickyEmphasized: ElevationXSemanticToken { ElevationRawTokens.elevationX0 }
    /// Has for value token ElevationRawTokens.elevationX0
    @objc public final var elevationXStickyNavigationScrolled: ElevationXSemanticToken { ElevationRawTokens.elevationX0 }
    /// Has for value token ElevationRawTokens.elevationY0
    @objc public final var elevationYNone: ElevationYSemanticToken { ElevationRawTokens.elevationY0 }
    /// Has for value token ElevationRawTokens.elevationY100
    @objc public final var elevationYRaised: ElevationYSemanticToken { ElevationRawTokens.elevationY100 }
    /// Has for value token ElevationRawTokens.elevationY200
    @objc public final var elevationYDefault: ElevationYSemanticToken { ElevationRawTokens.elevationY200 }
    /// Has for value token ElevationRawTokens.elevationY500
    @objc public final var elevationYEmphasized: ElevationYSemanticToken { ElevationRawTokens.elevationY500 }
    /// Has for value token ElevationRawTokens.elevationY300
    @objc public final var elevationYDrag: ElevationYSemanticToken { ElevationRawTokens.elevationY300 }
    /// Has for value token ElevationRawTokens.elevationY300
    @objc public final var elevationYStickyDefault: ElevationYSemanticToken { ElevationRawTokens.elevationY300 }
    /// Has for value token ElevationRawTokens.elevationY300
    @objc public final var elevationYStickyEmphasized: ElevationYSemanticToken { ElevationRawTokens.elevationY300 }
    /// Has for value token ElevationRawTokens.elevationY300
    @objc public final var elevationYStickyNavigationScrolled: ElevationYSemanticToken { ElevationRawTokens.elevationY300 }
    /// Has for value token ElevationRawTokens.elevationBlur0
    @objc public final var elevationBlurNone: ElevationBlurSemanticToken { ElevationRawTokens.elevationBlur0 }
    /// Has for value token ElevationRawTokens.elevationBlur200
    @objc public final var elevationBlurRaised: ElevationBlurSemanticToken { ElevationRawTokens.elevationBlur200 }
    /// Has for value token ElevationRawTokens.elevationBlur300
    @objc public final var elevationBlurDefault: ElevationBlurSemanticToken { ElevationRawTokens.elevationBlur300 }
    /// Has for value token ElevationRawTokens.elevationBlur600
    @objc public final var elevationBlurEmphasized: ElevationBlurSemanticToken { ElevationRawTokens.elevationBlur600 }
    /// Has for value token ElevationRawTokens.elevationBlur400
    @objc public final var elevationBlurDrag: ElevationBlurSemanticToken { ElevationRawTokens.elevationBlur400 }
    /// Has for value token ElevationRawTokens.elevationBlur400
    @objc public final var elevationBlurStickyDefault: ElevationBlurSemanticToken { ElevationRawTokens.elevationBlur400 }
    /// Has for value token ElevationRawTokens.elevationBlur400
    @objc public final var elevationBlurStickyEmphasized: ElevationBlurSemanticToken { ElevationRawTokens.elevationBlur400 }
    /// Has for value token ElevationRawTokens.elevationBlur400
    @objc public final var elevationBlurStickyNavigationScrolled: ElevationBlurSemanticToken { ElevationRawTokens.elevationBlur400 }
    /// Has for value token ColorRawTokens.colorOpacityBlack0
    @objc public final var elevationColorNone: ElevationColorSemanticToken { ColorRawTokens.colorOpacityBlack0 }
    /// Has for value token ColorRawTokens.colorOpacityBlack320
    @objc public final var elevationColorRaised: ElevationColorSemanticToken { ColorRawTokens.colorOpacityBlack320 }
    /// Has for value token ColorRawTokens.colorOpacityBlack240
    @objc public final var elevationColorDefault: ElevationColorSemanticToken { ColorRawTokens.colorOpacityBlack240 }
    /// Has for value token ColorRawTokens.colorOpacityBlack160
    @objc public final var elevationColorEmphasized: ElevationColorSemanticToken { ColorRawTokens.colorOpacityBlack160 }
    /// Has for value token ColorRawTokens.colorOpacityBlack320
    @objc public final var elevationColorDrag: ElevationColorSemanticToken { ColorRawTokens.colorOpacityBlack320 }
    /// Has for value token ColorRawTokens.colorOpacityBlack160
    @objc public final var elevationColorStickyDefault: ElevationColorSemanticToken { ColorRawTokens.colorOpacityBlack160 }
    /// Has for value token ColorRawTokens.colorOpacityBlack160
    @objc public final var elevationColorStickyEmphasized: ElevationColorSemanticToken { ColorRawTokens.colorOpacityBlack160 }
    /// Has for value token ColorRawTokens.colorOpacityBlack160
    @objc public final var elevationColorStickyNavigationScrolled: ElevationColorSemanticToken { ColorRawTokens.colorOpacityBlack160 }
}
