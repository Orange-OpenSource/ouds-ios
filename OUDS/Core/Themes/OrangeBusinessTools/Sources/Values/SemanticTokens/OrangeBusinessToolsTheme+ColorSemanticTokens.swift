//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System
//

import Foundation
import OUDSTokensRaw
import OUDSTokensSemantic

// ðŸ§± Tokens version: 1.1.0
// ðŸ¤– Generated by Tokenator

// swiftlint:disable file_length
// swiftlint:disable identifier_name

extension OrangeBusinessToolsThemeColorSemanticTokensProvider: ColorSemanticTokens {
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryPrimaryLowest: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryPrimaryLower: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token OrangeBrandColorRawTokens.colorOrange500
    @objc public final var colorRepositoryPrimaryLow: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange500 }
    /// Has for value token OrangeBrandColorRawTokens.colorOrange550
    @objc public final var colorRepositoryPrimaryDefault: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange550 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryPrimaryHigh: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryPrimaryHigher: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryPrimaryHighest: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositorySecondaryLowest: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositorySecondaryLower: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositorySecondaryLow: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositorySecondaryDefault: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositorySecondaryHigh: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositorySecondaryHigher: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositorySecondaryHighest: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryTertiaryLowest: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryTertiaryLower: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryTertiaryLow: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryTertiaryDefault: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryTertiaryHigh: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryTertiaryHigher: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryTertiaryHighest: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalWhite
    @objc public final var colorRepositoryNeutralMutedWhite: ColorSemanticToken { ColorRawTokens.colorFunctionalWhite }
    /// Has for value token ColorRawTokens.colorFunctionalGrayLight80
    @objc public final var colorRepositoryNeutralMutedLowest: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayLight80 }
    /// Has for value token ColorRawTokens.colorFunctionalGrayLight160
    @objc public final var colorRepositoryNeutralMutedLower: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayLight160 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryNeutralMutedLow: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryNeutralMutedMedium: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryNeutralMutedHigh: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryNeutralMutedHigher: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryNeutralMutedHighest: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryNeutralEmphasizedLowest: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryNeutralEmphasizedLower: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryNeutralEmphasizedLow: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalGrayDark640
    @objc public final var colorRepositoryNeutralEmphasizedMedium: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayDark640 }
    /// Has for value token ColorRawTokens.colorFunctionalGrayDark720
    @objc public final var colorRepositoryNeutralEmphasizedHigh: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayDark720 }
    /// Has for value token ColorRawTokens.colorFunctionalGrayDark800
    @objc public final var colorRepositoryNeutralEmphasizedHigher: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayDark800 }
    /// Has for value token ColorRawTokens.colorFunctionalGrayDark880
    @objc public final var colorRepositoryNeutralEmphasizedHighest: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayDark880 }
    /// Has for value token ColorRawTokens.colorFunctionalBlack
    @objc public final var colorRepositoryNeutralEmphasizedBlack: ColorSemanticToken { ColorRawTokens.colorFunctionalBlack }
    /// Has for value token ColorRawTokens.colorFunctionalSun100
    @objc public final var colorRepositoryWarningLowest: ColorSemanticToken { ColorRawTokens.colorFunctionalSun100 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryWarningLower: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalSun300
    @objc public final var colorRepositoryWarningLow: ColorSemanticToken { ColorRawTokens.colorFunctionalSun300 }
    /// Has for value token ColorRawTokens.colorFunctionalSun500
    @objc public final var colorRepositoryWarningDefault: ColorSemanticToken { ColorRawTokens.colorFunctionalSun500 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryWarningHigh: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryWarningHigher: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalSun900
    @objc public final var colorRepositoryWarningHighest: ColorSemanticToken { ColorRawTokens.colorFunctionalSun900 }
    /// Has for value token ColorRawTokens.colorFunctionalScarlet100
    @objc public final var colorRepositoryNegativeLowest: ColorSemanticToken { ColorRawTokens.colorFunctionalScarlet100 }
    /// Has for value token ColorRawTokens.colorFunctionalScarlet200
    @objc public final var colorRepositoryNegativeLower: ColorSemanticToken { ColorRawTokens.colorFunctionalScarlet200 }
    /// Has for value token ColorRawTokens.colorFunctionalScarlet300
    @objc public final var colorRepositoryNegativeLow: ColorSemanticToken { ColorRawTokens.colorFunctionalScarlet300 }
    /// Has for value token ColorRawTokens.colorFunctionalScarlet600
    @objc public final var colorRepositoryNegativeDefault: ColorSemanticToken { ColorRawTokens.colorFunctionalScarlet600 }
    /// Has for value token ColorRawTokens.colorFunctionalScarlet700
    @objc public final var colorRepositoryNegativeHigh: ColorSemanticToken { ColorRawTokens.colorFunctionalScarlet700 }
    /// Has for value token ColorRawTokens.colorFunctionalScarlet800
    @objc public final var colorRepositoryNegativeHigher: ColorSemanticToken { ColorRawTokens.colorFunctionalScarlet800 }
    /// Has for value token ColorRawTokens.colorFunctionalScarlet900
    @objc public final var colorRepositoryNegativeHighest: ColorSemanticToken { ColorRawTokens.colorFunctionalScarlet900 }
    /// Has for value token ColorRawTokens.colorFunctionalMalachite100
    @objc public final var colorRepositoryPositiveLowest: ColorSemanticToken { ColorRawTokens.colorFunctionalMalachite100 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryPositiveLower: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalMalachite300
    @objc public final var colorRepositoryPositiveLow: ColorSemanticToken { ColorRawTokens.colorFunctionalMalachite300 }
    /// Has for value token ColorRawTokens.colorFunctionalMalachite500
    @objc public final var colorRepositoryPositiveDefault: ColorSemanticToken { ColorRawTokens.colorFunctionalMalachite500 }
    /// Has for value token ColorRawTokens.colorFunctionalMalachite600
    @objc public final var colorRepositoryPositiveHigh: ColorSemanticToken { ColorRawTokens.colorFunctionalMalachite600 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryPositiveHigher: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalMalachite900
    @objc public final var colorRepositoryPositiveHighest: ColorSemanticToken { ColorRawTokens.colorFunctionalMalachite900 }
    /// Has for value token ColorRawTokens.colorFunctionalDodgerBlue100
    @objc public final var colorRepositoryInfoLowest: ColorSemanticToken { ColorRawTokens.colorFunctionalDodgerBlue100 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryInfoLower: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalDodgerBlue300
    @objc public final var colorRepositoryInfoLow: ColorSemanticToken { ColorRawTokens.colorFunctionalDodgerBlue300 }
    /// Has for value token ColorRawTokens.colorFunctionalDodgerBlue500
    @objc public final var colorRepositoryInfoDefault: ColorSemanticToken { ColorRawTokens.colorFunctionalDodgerBlue500 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryInfoHigh: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryInfoHigher: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalDodgerBlue900
    @objc public final var colorRepositoryInfoHighest: ColorSemanticToken { ColorRawTokens.colorFunctionalDodgerBlue900 }
    /// Has for value token OrangeBrandColorRawTokens.colorWarmGray100
    @objc public final var colorRepositoryAccentLowest: ColorSemanticToken { OrangeBrandColorRawTokens.colorWarmGray100 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryAccentLower: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalSun300
    @objc public final var colorRepositoryAccentLow: ColorSemanticToken { ColorRawTokens.colorFunctionalSun300 }
    /// Has for value token ColorRawTokens.colorFunctionalSun500
    @objc public final var colorRepositoryAccentDefault: ColorSemanticToken { ColorRawTokens.colorFunctionalSun500 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryAccentHigh: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryAccentHigher: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token OrangeBrandColorRawTokens.colorWarmGray1000
    @objc public final var colorRepositoryAccentHighest: ColorSemanticToken { OrangeBrandColorRawTokens.colorWarmGray1000 }
    /// Has for value token ColorRawTokens.colorOpacityScarlet
    @objc public final var colorRepositoryOpacityNegative: ColorSemanticToken { ColorRawTokens.colorOpacityScarlet }
    /// Has for value token ColorRawTokens.colorOpacitySun
    @objc public final var colorRepositoryOpacityWarning: ColorSemanticToken { ColorRawTokens.colorOpacitySun }
    /// Has for value token ColorRawTokens.colorOpacityMalachite
    @objc public final var colorRepositoryOpacityPositive: ColorSemanticToken { ColorRawTokens.colorOpacityMalachite }
    /// Has for value token ColorRawTokens.colorOpacityDodgerBlue
    @objc public final var colorRepositoryOpacityInfo: ColorSemanticToken { ColorRawTokens.colorOpacityDodgerBlue }
    /// Has for value token ColorRawTokens.colorOpacityBlack0
    @objc public final var colorRepositoryOpacityBlackTransparent: ColorSemanticToken { ColorRawTokens.colorOpacityBlack0 }
    /// Has for value token ColorRawTokens.colorOpacityBlack40
    @objc public final var colorRepositoryOpacityBlackLowest: ColorSemanticToken { ColorRawTokens.colorOpacityBlack40 }
    /// Has for value token ColorRawTokens.colorOpacityBlack80
    @objc public final var colorRepositoryOpacityBlackLower: ColorSemanticToken { ColorRawTokens.colorOpacityBlack80 }
    /// Has for value token ColorRawTokens.colorOpacityBlack120
    @objc public final var colorRepositoryOpacityBlackLow: ColorSemanticToken { ColorRawTokens.colorOpacityBlack120 }
    /// Has for value token ColorRawTokens.colorOpacityBlack200
    @objc public final var colorRepositoryOpacityBlackMediumLow: ColorSemanticToken { ColorRawTokens.colorOpacityBlack200 }
    /// Has for value token ColorRawTokens.colorOpacityBlack280
    @objc public final var colorRepositoryOpacityBlackMedium: ColorSemanticToken { ColorRawTokens.colorOpacityBlack280 }
    /// Has for value token ColorRawTokens.colorOpacityBlack440
    @objc public final var colorRepositoryOpacityBlackMediumHigh: ColorSemanticToken { ColorRawTokens.colorOpacityBlack440 }
    /// Has for value token ColorRawTokens.colorOpacityBlack520
    @objc public final var colorRepositoryOpacityBlackHigh: ColorSemanticToken { ColorRawTokens.colorOpacityBlack520 }
    /// Has for value token ColorRawTokens.colorOpacityBlack680
    @objc public final var colorRepositoryOpacityBlackHigher: ColorSemanticToken { ColorRawTokens.colorOpacityBlack680 }
    /// Has for value token ColorRawTokens.colorOpacityBlack840
    @objc public final var colorRepositoryOpacityBlackHighest: ColorSemanticToken { ColorRawTokens.colorOpacityBlack840 }
    /// Has for value token ColorRawTokens.colorOpacityWhite0
    @objc public final var colorRepositoryOpacityWhiteTransparent: ColorSemanticToken { ColorRawTokens.colorOpacityWhite0 }
    /// Has for value token ColorRawTokens.colorOpacityWhite40
    @objc public final var colorRepositoryOpacityWhiteLowest: ColorSemanticToken { ColorRawTokens.colorOpacityWhite40 }
    /// Has for value token ColorRawTokens.colorOpacityWhite80
    @objc public final var colorRepositoryOpacityWhiteLower: ColorSemanticToken { ColorRawTokens.colorOpacityWhite80 }
    /// Has for value token ColorRawTokens.colorOpacityWhite120
    @objc public final var colorRepositoryOpacityWhiteLow: ColorSemanticToken { ColorRawTokens.colorOpacityWhite120 }
    /// Has for value token ColorRawTokens.colorOpacityWhite200
    @objc public final var colorRepositoryOpacityWhiteMediumLow: ColorSemanticToken { ColorRawTokens.colorOpacityWhite200 }
    /// Has for value token ColorRawTokens.colorOpacityWhite440
    @objc public final var colorRepositoryOpacityWhiteMedium: ColorSemanticToken { ColorRawTokens.colorOpacityWhite440 }
    /// Has for value token ColorRawTokens.colorOpacityWhite640
    @objc public final var colorRepositoryOpacityWhiteHigh: ColorSemanticToken { ColorRawTokens.colorOpacityWhite640 }
    /// Has for value token ColorRawTokens.colorOpacityWhite800
    @objc public final var colorRepositoryOpacityWhiteHigher: ColorSemanticToken { ColorRawTokens.colorOpacityWhite800 }
    /// Has for value token ColorRawTokens.colorOpacityWhite920
    @objc public final var colorRepositoryOpacityWhiteHighest: ColorSemanticToken { ColorRawTokens.colorOpacityWhite920 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryOpacityPrimaryTransparent: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryOpacityPrimaryLowest: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryOpacityPrimaryLower: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryOpacityPrimaryLow: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryOpacityPrimaryMedium: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryOpacityPrimaryHigh: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryOpacityPrimaryHigher: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorRepositoryOpacityPrimaryHighest: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc public final var colorBgPrimaryLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite }
    /// Has for value token colorRepositoryNeutralEmphasizedHighest
    @objc public final var colorBgPrimaryDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedHighest }
    /// Has for value token colorRepositoryNeutralMutedLowest
    @objc public final var colorBgSecondaryLight: ColorSemanticToken { colorRepositoryNeutralMutedLowest }
    /// Has for value token colorRepositoryNeutralEmphasizedHigher
    @objc public final var colorBgSecondaryDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedHigher }
    /// Has for value token colorRepositoryAccentLowest
    @objc public final var colorBgTertiaryLight: ColorSemanticToken { colorRepositoryAccentLowest }
    /// Has for value token colorRepositoryAccentHighest
    @objc public final var colorBgTertiaryDark: ColorSemanticToken { colorRepositoryAccentHighest }
    /// Has for value token colorRepositoryNeutralEmphasizedHighest
    @objc public final var colorBgEmphasizedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedHighest }
    /// Has for value token colorRepositoryNeutralEmphasizedMedium
    @objc public final var colorBgEmphasizedDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedMedium }
    /// Has for value token colorRepositoryPrimaryLow
    @objc public final var colorSurfaceBrandPrimaryLight: ColorSemanticToken { colorRepositoryPrimaryLow }
    /// Has for value token colorRepositoryPrimaryLow
    @objc public final var colorSurfaceBrandPrimaryDark: ColorSemanticToken { colorRepositoryPrimaryLow }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorSurfaceBrandSecondaryLight: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorSurfaceBrandSecondaryDark: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorSurfaceBrandTertiaryLight: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorSurfaceBrandTertiaryDark: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token colorRepositoryOpacityBlackLowest
    @objc public final var colorSurfaceStatusNeutralMutedLight: ColorSemanticToken { colorRepositoryOpacityBlackLowest }
    /// Has for value token colorRepositoryOpacityWhiteLower
    @objc public final var colorSurfaceStatusNeutralMutedDark: ColorSemanticToken { colorRepositoryOpacityWhiteLower }
    /// Has for value token colorRepositoryOpacityBlackHighest
    @objc public final var colorSurfaceStatusNeutralEmphasizedLight: ColorSemanticToken { colorRepositoryOpacityBlackHighest }
    /// Has for value token colorRepositoryOpacityWhiteHighest
    @objc public final var colorSurfaceStatusNeutralEmphasizedDark: ColorSemanticToken { colorRepositoryOpacityWhiteHighest }
    /// Has for value token colorRepositoryOpacityPositive
    @objc public final var colorSurfaceStatusPositiveMutedLight: ColorSemanticToken { colorRepositoryOpacityPositive }
    /// Has for value token colorRepositoryPositiveHighest
    @objc public final var colorSurfaceStatusPositiveMutedDark: ColorSemanticToken { colorRepositoryPositiveHighest }
    /// Has for value token colorRepositoryPositiveDefault
    @objc public final var colorSurfaceStatusPositiveEmphasizedLight: ColorSemanticToken { colorRepositoryPositiveDefault }
    /// Has for value token colorRepositoryPositiveLow
    @objc public final var colorSurfaceStatusPositiveEmphasizedDark: ColorSemanticToken { colorRepositoryPositiveLow }
    /// Has for value token colorRepositoryOpacityInfo
    @objc public final var colorSurfaceStatusInfoMutedLight: ColorSemanticToken { colorRepositoryOpacityInfo }
    /// Has for value token colorRepositoryInfoHighest
    @objc public final var colorSurfaceStatusInfoMutedDark: ColorSemanticToken { colorRepositoryInfoHighest }
    /// Has for value token colorRepositoryInfoDefault
    @objc public final var colorSurfaceStatusInfoEmphasizedLight: ColorSemanticToken { colorRepositoryInfoDefault }
    /// Has for value token colorRepositoryInfoLow
    @objc public final var colorSurfaceStatusInfoEmphasizedDark: ColorSemanticToken { colorRepositoryInfoLow }
    /// Has for value token colorRepositoryOpacityWarning
    @objc public final var colorSurfaceStatusWarningMutedLight: ColorSemanticToken { colorRepositoryOpacityWarning }
    /// Has for value token colorRepositoryWarningHighest
    @objc public final var colorSurfaceStatusWarningMutedDark: ColorSemanticToken { colorRepositoryWarningHighest }
    /// Has for value token colorRepositoryWarningDefault
    @objc public final var colorSurfaceStatusWarningEmphasizedLight: ColorSemanticToken { colorRepositoryWarningDefault }
    /// Has for value token colorRepositoryWarningLow
    @objc public final var colorSurfaceStatusWarningEmphasizedDark: ColorSemanticToken { colorRepositoryWarningLow }
    /// Has for value token colorRepositoryOpacityNegative
    @objc public final var colorSurfaceStatusNegativeMutedLight: ColorSemanticToken { colorRepositoryOpacityNegative }
    /// Has for value token colorRepositoryNegativeHighest
    @objc public final var colorSurfaceStatusNegativeMutedDark: ColorSemanticToken { colorRepositoryNegativeHighest }
    /// Has for value token colorRepositoryNegativeDefault
    @objc public final var colorSurfaceStatusNegativeEmphasizedLight: ColorSemanticToken { colorRepositoryNegativeDefault }
    /// Has for value token colorRepositoryNegativeLow
    @objc public final var colorSurfaceStatusNegativeEmphasizedDark: ColorSemanticToken { colorRepositoryNegativeLow }
    /// Has for value token colorRepositoryAccentLowest
    @objc public final var colorSurfaceStatusAccentMutedLight: ColorSemanticToken { colorRepositoryAccentLowest }
    /// Has for value token colorRepositoryAccentHighest
    @objc public final var colorSurfaceStatusAccentMutedDark: ColorSemanticToken { colorRepositoryAccentHighest }
    /// Has for value token colorRepositoryWarningDefault
    @objc public final var colorSurfaceStatusAccentEmphasizedLight: ColorSemanticToken { colorRepositoryWarningDefault }
    /// Has for value token colorRepositoryWarningLow
    @objc public final var colorSurfaceStatusAccentEmphasizedDark: ColorSemanticToken { colorRepositoryWarningLow }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentDefaultLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralMutedLower
    @objc public final var colorContentDefaultDark: ColorSemanticToken { colorRepositoryNeutralMutedLower }
    /// Has for value token colorRepositoryOpacityBlackHigher
    @objc public final var colorContentMutedLight: ColorSemanticToken { colorRepositoryOpacityBlackHigher }
    /// Has for value token colorRepositoryOpacityWhiteHigh
    @objc public final var colorContentMutedDark: ColorSemanticToken { colorRepositoryOpacityWhiteHigh }
    /// Has for value token colorRepositoryOpacityBlackMediumLow
    @objc public final var colorContentDisabledLight: ColorSemanticToken { colorRepositoryOpacityBlackMediumLow }
    /// Has for value token colorRepositoryOpacityWhiteMediumLow
    @objc public final var colorContentDisabledDark: ColorSemanticToken { colorRepositoryOpacityWhiteMediumLow }
    /// Has for value token colorRepositoryPrimaryDefault
    @objc public final var colorContentBrandPrimaryLight: ColorSemanticToken { colorRepositoryPrimaryDefault }
    /// Has for value token colorRepositoryPrimaryLow
    @objc public final var colorContentBrandPrimaryDark: ColorSemanticToken { colorRepositoryPrimaryLow }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorContentBrandSecondaryLight: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorContentBrandSecondaryDark: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorContentBrandTertiaryLight: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorContentBrandTertiaryDark: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token colorRepositoryPositiveDefault
    @objc public final var colorContentStatusPositiveLight: ColorSemanticToken { colorRepositoryPositiveDefault }
    /// Has for value token colorRepositoryPositiveDefault
    @objc public final var colorContentStatusPositiveDark: ColorSemanticToken { colorRepositoryPositiveDefault }
    /// Has for value token colorRepositoryInfoDefault
    @objc public final var colorContentStatusInfoLight: ColorSemanticToken { colorRepositoryInfoDefault }
    /// Has for value token colorRepositoryInfoDefault
    @objc public final var colorContentStatusInfoDark: ColorSemanticToken { colorRepositoryInfoDefault }
    /// Has for value token colorRepositoryWarningDefault
    @objc public final var colorContentStatusWarningLight: ColorSemanticToken { colorRepositoryWarningDefault }
    /// Has for value token colorRepositoryWarningDefault
    @objc public final var colorContentStatusWarningDark: ColorSemanticToken { colorRepositoryWarningDefault }
    /// Has for value token colorRepositoryNegativeDefault
    @objc public final var colorContentStatusNegativeLight: ColorSemanticToken { colorRepositoryNegativeDefault }
    /// Has for value token colorRepositoryNegativeDefault
    @objc public final var colorContentStatusNegativeDark: ColorSemanticToken { colorRepositoryNegativeDefault }
    /// Has for value token colorRepositoryAccentDefault
    @objc public final var colorContentStatusAccentLight: ColorSemanticToken { colorRepositoryAccentDefault }
    /// Has for value token colorRepositoryAccentDefault
    @objc public final var colorContentStatusAccentDark: ColorSemanticToken { colorRepositoryAccentDefault }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnBrandPrimaryLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnBrandPrimaryDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorContentOnBrandSecondaryLight: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorContentOnBrandSecondaryDark: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorContentOnBrandTertiaryLight: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorContentOnBrandTertiaryDark: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnStatusNeutralMutedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralMutedLower
    @objc public final var colorContentOnStatusNeutralMutedDark: ColorSemanticToken { colorRepositoryNeutralMutedLower }
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc public final var colorContentOnStatusNeutralEmphasizedLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnStatusNeutralEmphasizedDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnStatusPositiveMutedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralMutedLower
    @objc public final var colorContentOnStatusPositiveMutedDark: ColorSemanticToken { colorRepositoryNeutralMutedLower }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnStatusPositiveEmphasizedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnStatusPositiveEmphasizedDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnStatusInfoMutedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralMutedLower
    @objc public final var colorContentOnStatusInfoMutedDark: ColorSemanticToken { colorRepositoryNeutralMutedLower }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnStatusInfoEmphasizedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnStatusInfoEmphasizedDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnStatusWarningMutedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralMutedLower
    @objc public final var colorContentOnStatusWarningMutedDark: ColorSemanticToken { colorRepositoryNeutralMutedLower }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnStatusWarningEmphasizedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnStatusWarningEmphasizedDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnStatusNegativeMutedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralMutedLower
    @objc public final var colorContentOnStatusNegativeMutedDark: ColorSemanticToken { colorRepositoryNeutralMutedLower }
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc public final var colorContentOnStatusNegativeEmphasizedLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnStatusNegativeEmphasizedDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnStatusAccentMutedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralMutedLower
    @objc public final var colorContentOnStatusAccentMutedDark: ColorSemanticToken { colorRepositoryNeutralMutedLower }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnStatusAccentEmphasizedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnStatusAccentEmphasizedDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc public final var colorContentOnActionEnabledLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnActionEnabledDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc public final var colorContentOnActionHoverLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnActionHoverDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc public final var colorContentOnActionPressedLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnActionPressedDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc public final var colorContentOnActionLoadingLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnActionLoadingDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc public final var colorContentOnActionDisabledLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnActionDisabledDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc public final var colorContentOnActionFocusLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnActionFocusDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorContentOnActionSelectedLight: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorContentOnActionSelectedDark: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc public final var colorContentOnActionHighlightedLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnActionHighlightedDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc public final var colorContentOnOverlayEmphasizedLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorContentOnOverlayEmphasizedDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryOpacityBlackMediumLow
    @objc public final var colorBorderDefaultLight: ColorSemanticToken { colorRepositoryOpacityBlackMediumLow }
    /// Has for value token colorRepositoryOpacityWhiteMediumLow
    @objc public final var colorBorderDefaultDark: ColorSemanticToken { colorRepositoryOpacityWhiteMediumLow }
    /// Has for value token colorRepositoryOpacityBlackLower
    @objc public final var colorBorderMutedLight: ColorSemanticToken { colorRepositoryOpacityBlackLower }
    /// Has for value token colorRepositoryOpacityWhiteLower
    @objc public final var colorBorderMutedDark: ColorSemanticToken { colorRepositoryOpacityWhiteLower }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorBorderEmphasizedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryOpacityWhiteHighest
    @objc public final var colorBorderEmphasizedDark: ColorSemanticToken { colorRepositoryOpacityWhiteHighest }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorBorderFocusLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralMutedLower
    @objc public final var colorBorderFocusDark: ColorSemanticToken { colorRepositoryNeutralMutedLower }
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc public final var colorBorderFocusInsetLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorBorderFocusInsetDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryPrimaryDefault
    @objc public final var colorBorderBrandPrimaryLight: ColorSemanticToken { colorRepositoryPrimaryDefault }
    /// Has for value token colorRepositoryPrimaryLow
    @objc public final var colorBorderBrandPrimaryDark: ColorSemanticToken { colorRepositoryPrimaryLow }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorBorderBrandSecondaryLight: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorBorderBrandSecondaryDark: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorBorderBrandTertiaryLight: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorBorderBrandTertiaryDark: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorBorderStatusPositiveLight: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorBorderStatusPositiveDark: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorBorderStatusInfoLight: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorBorderStatusInfoDark: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorBorderStatusWarningLight: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorBorderStatusWarningDark: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorBorderStatusNegativeLight: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorBorderStatusNegativeDark: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorBorderStatusAccentLight: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorBorderStatusAccentDark: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorBorderOnBrandPrimaryLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorBorderOnBrandPrimaryDark: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorBorderOnBrandSecondaryLight: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorBorderOnBrandSecondaryDark: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorBorderOnBrandTertiaryLight: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorBorderOnBrandTertiaryDark: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorActionEnabledLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralMutedLower
    @objc public final var colorActionEnabledDark: ColorSemanticToken { colorRepositoryNeutralMutedLower }
    /// Has for value token colorRepositoryOpacityBlackHigher
    @objc public final var colorActionHoverLight: ColorSemanticToken { colorRepositoryOpacityBlackHigher }
    /// Has for value token colorRepositoryOpacityWhiteHigh
    @objc public final var colorActionHoverDark: ColorSemanticToken { colorRepositoryOpacityWhiteHigh }
    /// Has for value token colorRepositoryPrimaryDefault
    @objc public final var colorActionPressedLight: ColorSemanticToken { colorRepositoryPrimaryDefault }
    /// Has for value token colorRepositoryPrimaryLow
    @objc public final var colorActionPressedDark: ColorSemanticToken { colorRepositoryPrimaryLow }
    /// Has for value token colorRepositoryPrimaryDefault
    @objc public final var colorActionLoadingLight: ColorSemanticToken { colorRepositoryPrimaryDefault }
    /// Has for value token colorRepositoryPrimaryLow
    @objc public final var colorActionLoadingDark: ColorSemanticToken { colorRepositoryPrimaryLow }
    /// Has for value token colorRepositoryOpacityBlackMediumLow
    @objc public final var colorActionDisabledLight: ColorSemanticToken { colorRepositoryOpacityBlackMediumLow }
    /// Has for value token colorRepositoryOpacityWhiteMediumLow
    @objc public final var colorActionDisabledDark: ColorSemanticToken { colorRepositoryOpacityWhiteMediumLow }
    /// Has for value token colorRepositoryOpacityBlackHigher
    @objc public final var colorActionFocusLight: ColorSemanticToken { colorRepositoryOpacityBlackHigher }
    /// Has for value token colorRepositoryOpacityWhiteHigh
    @objc public final var colorActionFocusDark: ColorSemanticToken { colorRepositoryOpacityWhiteHigh }
    /// Has for value token colorRepositoryPrimaryDefault
    @objc public final var colorActionSelectedLight: ColorSemanticToken { colorRepositoryPrimaryDefault }
    /// Has for value token colorRepositoryPrimaryLow
    @objc public final var colorActionSelectedDark: ColorSemanticToken { colorRepositoryPrimaryLow }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeAmethyst600
    @objc public final var colorActionVisitedLight: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeAmethyst600 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeAmethyst400
    @objc public final var colorActionVisitedDark: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeAmethyst400 }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorActionHighlightedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralMutedLower
    @objc public final var colorActionHighlightedDark: ColorSemanticToken { colorRepositoryNeutralMutedLower }
    /// Has for value token colorRepositoryOpacityBlackLowest
    @objc public final var colorActionSupportEnabledLight: ColorSemanticToken { colorRepositoryOpacityBlackLowest }
    /// Has for value token colorRepositoryOpacityWhiteLowest
    @objc public final var colorActionSupportEnabledDark: ColorSemanticToken { colorRepositoryOpacityWhiteLowest }
    /// Has for value token colorRepositoryOpacityBlackLower
    @objc public final var colorActionSupportHoverLight: ColorSemanticToken { colorRepositoryOpacityBlackLower }
    /// Has for value token colorRepositoryOpacityWhiteLower
    @objc public final var colorActionSupportHoverDark: ColorSemanticToken { colorRepositoryOpacityWhiteLower }
    /// Has for value token colorRepositoryOpacityBlackLow
    @objc public final var colorActionSupportPressedLight: ColorSemanticToken { colorRepositoryOpacityBlackLow }
    /// Has for value token colorRepositoryOpacityWhiteLow
    @objc public final var colorActionSupportPressedDark: ColorSemanticToken { colorRepositoryOpacityWhiteLow }
    /// Has for value token colorRepositoryOpacityBlackLow
    @objc public final var colorActionSupportLoadingLight: ColorSemanticToken { colorRepositoryOpacityBlackLow }
    /// Has for value token colorRepositoryOpacityWhiteLow
    @objc public final var colorActionSupportLoadingDark: ColorSemanticToken { colorRepositoryOpacityWhiteLow }
    /// Has for value token colorRepositoryOpacityBlackLower
    @objc public final var colorActionSupportFocusLight: ColorSemanticToken { colorRepositoryOpacityBlackLower }
    /// Has for value token colorRepositoryOpacityWhiteLower
    @objc public final var colorActionSupportFocusDark: ColorSemanticToken { colorRepositoryOpacityWhiteLower }
    /// Has for value token colorRepositoryNegativeDefault
    @objc public final var colorActionNegativeEnabledLight: ColorSemanticToken { colorRepositoryNegativeDefault }
    /// Has for value token colorRepositoryNegativeLow
    @objc public final var colorActionNegativeEnabledDark: ColorSemanticToken { colorRepositoryNegativeLow }
    /// Has for value token colorRepositoryNegativeHigh
    @objc public final var colorActionNegativeHoverLight: ColorSemanticToken { colorRepositoryNegativeHigh }
    /// Has for value token colorRepositoryNegativeLower
    @objc public final var colorActionNegativeHoverDark: ColorSemanticToken { colorRepositoryNegativeLower }
    /// Has for value token colorRepositoryNegativeHigher
    @objc public final var colorActionNegativePressedLight: ColorSemanticToken { colorRepositoryNegativeHigher }
    /// Has for value token colorRepositoryNegativeLowest
    @objc public final var colorActionNegativePressedDark: ColorSemanticToken { colorRepositoryNegativeLowest }
    /// Has for value token colorRepositoryNegativeHigher
    @objc public final var colorActionNegativeLoadingLight: ColorSemanticToken { colorRepositoryNegativeHigher }
    /// Has for value token colorRepositoryNegativeLowest
    @objc public final var colorActionNegativeLoadingDark: ColorSemanticToken { colorRepositoryNegativeLowest }
    /// Has for value token colorRepositoryNegativeHigh
    @objc public final var colorActionNegativeFocusLight: ColorSemanticToken { colorRepositoryNegativeHigh }
    /// Has for value token colorRepositoryNegativeLower
    @objc public final var colorActionNegativeFocusDark: ColorSemanticToken { colorRepositoryNegativeLower }
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc public final var colorOverlayDefaultLight: ColorSemanticToken { colorRepositoryNeutralMutedWhite }
    /// Has for value token colorRepositoryOpacityWhiteLower
    @objc public final var colorOverlayDefaultDark: ColorSemanticToken { colorRepositoryOpacityWhiteLower }
    /// Has for value token colorRepositoryNeutralEmphasizedHigh
    @objc public final var colorOverlayEmphasizedLight: ColorSemanticToken { colorRepositoryNeutralEmphasizedHigh }
    /// Has for value token colorRepositoryNeutralMutedLower
    @objc public final var colorOverlayEmphasizedDark: ColorSemanticToken { colorRepositoryNeutralMutedLower }
    /// Has for value token colorRepositoryOpacityBlackLowest
    @objc public final var colorOverlayDragLight: ColorSemanticToken { colorRepositoryOpacityBlackLowest }
    /// Has for value token colorRepositoryOpacityWhiteMediumLow
    @objc public final var colorOverlayDragDark: ColorSemanticToken { colorRepositoryOpacityWhiteMediumLow }
    /// Has for value token colorBgPrimaryLight
    @objc public final var colorOverlayModalLight: ColorSemanticToken { colorBgPrimaryLight }
    /// Has for value token colorBgEmphasizedDark
    @objc public final var colorOverlayModalDark: ColorSemanticToken { colorBgEmphasizedDark }
    /// Has for value token colorRepositoryOpacityBlackTransparent
    @objc public final var colorOpacityTransparentLight: ColorSemanticToken { colorRepositoryOpacityBlackTransparent }
    /// Has for value token colorRepositoryOpacityWhiteTransparent
    @objc public final var colorOpacityTransparentDark: ColorSemanticToken { colorRepositoryOpacityWhiteTransparent }
    /// Has for value token colorRepositoryOpacityBlackLowest
    @objc public final var colorOpacityLowestLight: ColorSemanticToken { colorRepositoryOpacityBlackLowest }
    /// Has for value token colorRepositoryOpacityWhiteLowest
    @objc public final var colorOpacityLowestDark: ColorSemanticToken { colorRepositoryOpacityWhiteLowest }
    /// Has for value token colorRepositoryOpacityBlackLower
    @objc public final var colorOpacityLowerLight: ColorSemanticToken { colorRepositoryOpacityBlackLower }
    /// Has for value token colorRepositoryOpacityWhiteLower
    @objc public final var colorOpacityLowerDark: ColorSemanticToken { colorRepositoryOpacityWhiteLower }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorAlwaysBlack: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token colorRepositoryNeutralMutedWhite
    @objc public final var colorAlwaysWhite: ColorSemanticToken { colorRepositoryNeutralMutedWhite }
    /// Has for value token colorRepositoryNeutralMutedLower
    @objc public final var colorAlwaysOnBlack: ColorSemanticToken { colorRepositoryNeutralMutedLower }
    /// Has for value token colorRepositoryNeutralEmphasizedBlack
    @objc public final var colorAlwaysOnWhite: ColorSemanticToken { colorRepositoryNeutralEmphasizedBlack }
    /// Has for value token OrangeBrandColorRawTokens.colorOrange500
    @objc public final var colorDecorativeBrandPrimary: ColorSemanticToken { OrangeBrandColorRawTokens.colorOrange500 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorDecorativeBrandPrimaryMuted: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorDecorativeBrandPrimaryEmphasized: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalBlack
    @objc public final var colorDecorativeBrandSecondary: ColorSemanticToken { ColorRawTokens.colorFunctionalBlack }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorDecorativeBrandSecondaryMuted: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorDecorativeBrandSecondaryEmphasized: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalWhite
    @objc public final var colorDecorativeBrandTertiary: ColorSemanticToken { ColorRawTokens.colorFunctionalWhite }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorDecorativeBrandTertiaryMuted: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorDecorativeBrandTertiaryEmphasized: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalGrayLight80
    @objc public final var colorDecorativeNeutralMutedLowest: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayLight80 }
    /// Has for value token ColorRawTokens.colorFunctionalGrayLight160
    @objc public final var colorDecorativeNeutralMutedLower: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayLight160 }
    /// Has for value token ColorRawTokens.colorFunctionalGrayLight240
    @objc public final var colorDecorativeNeutralMutedLow: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayLight240 }
    /// Has for value token ColorRawTokens.colorFunctionalGrayLight320
    @objc public final var colorDecorativeNeutralMutedMedium: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayLight320 }
    /// Has for value token ColorRawTokens.colorFunctionalGrayLight400
    @objc public final var colorDecorativeNeutralMutedHigh: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayLight400 }
    /// Has for value token ColorRawTokens.colorFunctionalGrayLight800
    @objc public final var colorDecorativeNeutralMutedHigher: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayLight800 }
    /// Has for value token ColorRawTokens.colorFunctionalGrayLight960
    @objc public final var colorDecorativeNeutralMutedHighest: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayLight960 }
    /// Has for value token ColorRawTokens.colorFunctionalGrayDark240
    @objc public final var colorDecorativeNeutralEmphasizedLowest: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayDark240 }
    /// Has for value token ColorRawTokens.colorFunctionalGrayDark320
    @objc public final var colorDecorativeNeutralEmphasizedLower: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayDark320 }
    /// Has for value token ColorRawTokens.colorFunctionalGrayDark400
    @objc public final var colorDecorativeNeutralEmphasizedLow: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayDark400 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorDecorativeNeutralEmphasizedMedium: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorDecorativeNeutralEmphasizedHigh: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token ColorRawTokens.colorFunctionalGrayDark640
    @objc public final var colorDecorativeNeutralEmphasizedHigher: ColorSemanticToken { ColorRawTokens.colorFunctionalGrayDark640 }
    /// This token has a forbidden color value (#FF000000 in tokenator) and **must not be used if you use this OrangeBusinessToolsTheme**
    @objc public final var colorDecorativeNeutralEmphasizedHighest: ColorSemanticToken { "ouds-forbidden-color-value" }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeEmerald200
    @objc public final var colorDecorativeAccent1Muted: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeEmerald200 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeEmerald500
    @objc public final var colorDecorativeAccent1Default: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeEmerald500 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeEmerald700
    @objc public final var colorDecorativeAccent1Emphasized: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeEmerald700 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeSky200
    @objc public final var colorDecorativeAccent2Muted: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeSky200 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeSky400
    @objc public final var colorDecorativeAccent2Default: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeSky400 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeSky700
    @objc public final var colorDecorativeAccent2Emphasized: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeSky700 }
    /// Has for value token ColorRawTokens.colorFunctionalSun200
    @objc public final var colorDecorativeAccent3Muted: ColorSemanticToken { ColorRawTokens.colorFunctionalSun200 }
    /// Has for value token ColorRawTokens.colorFunctionalSun500
    @objc public final var colorDecorativeAccent3Default: ColorSemanticToken { ColorRawTokens.colorFunctionalSun500 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeAmber500
    @objc public final var colorDecorativeAccent3Emphasized: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeAmber500 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeAmethyst200
    @objc public final var colorDecorativeAccent4Muted: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeAmethyst200 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeAmethyst400
    @objc public final var colorDecorativeAccent4Default: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeAmethyst400 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeAmethyst800
    @objc public final var colorDecorativeAccent4Emphasized: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeAmethyst800 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeShockingPink100
    @objc public final var colorDecorativeAccent5Muted: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeShockingPink100 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeShockingPink200
    @objc public final var colorDecorativeAccent5Default: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeShockingPink200 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeShockingPink300
    @objc public final var colorDecorativeAccent5Emphasized: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeShockingPink300 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeDeepPeach100
    @objc public final var colorDecorativeSkinTint100: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeDeepPeach100 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeDeepPeach200
    @objc public final var colorDecorativeSkinTint200: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeDeepPeach200 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeDeepPeach300
    @objc public final var colorDecorativeSkinTint300: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeDeepPeach300 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeDeepPeach400
    @objc public final var colorDecorativeSkinTint400: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeDeepPeach400 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeDeepPeach500
    @objc public final var colorDecorativeSkinTint500: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeDeepPeach500 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeDeepPeach600
    @objc public final var colorDecorativeSkinTint600: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeDeepPeach600 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeDeepPeach700
    @objc public final var colorDecorativeSkinTint700: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeDeepPeach700 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeDeepPeach800
    @objc public final var colorDecorativeSkinTint800: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeDeepPeach800 }
    /// Has for value token OrangeBrandColorRawTokens.colorDecorativeDeepPeach900
    @objc public final var colorDecorativeSkinTint900: ColorSemanticToken { OrangeBrandColorRawTokens.colorDecorativeDeepPeach900 }
}

// swiftlint:enable identifier_name
