//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System
//

import Foundation
import OUDSTokensComponent
import OUDSTokensRaw
import OUDSTokensSemantic

// ðŸ§± Tokens version: 0.11.0
// ðŸ¤– Generated by Tokenator

extension OrangeBusinessToolsThemeSelectComponentTokensProvider: SelectComponentTokens {
    @objc public final var selectSizeMaxHeightContainerIcon: SizeSemanticToken { DimensionRawTokens.dimension600 }
    @objc public final var selectSizeMinHeight: SizeSemanticToken { DimensionRawTokens.dimension600 }
    @objc public final var selectSizeMinHeightIconOnly: SizeSemanticToken { DimensionRawTokens.dimension600 }
    @objc public final var selectSizeMinWidth: SizeSemanticToken { DimensionRawTokens.dimension600 }
    @objc public final var selectSizeMinWidthIconOnly: SizeSemanticToken { DimensionRawTokens.dimension600 }
    @objc public final var selectColorBgDisabled: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc public final var selectColorBgEnabled: MultipleColorSemanticTokens { colors.colorOpacityTransparent }
    @objc public final var selectColorBgFocus: MultipleColorSemanticTokens { colors.colorActionSupportFocus }
    @objc public final var selectColorBgHover: MultipleColorSemanticTokens { colors.colorActionSupportHover }
    @objc public final var selectColorBgLoading: MultipleColorSemanticTokens { colors.colorActionSupportLoading }
    @objc public final var selectColorBgPressed: MultipleColorSemanticTokens { colors.colorActionSupportPressed }
    @objc public final var selectColorBorderDisabled: MultipleColorSemanticTokens { colors.colorActionDisabled }
    @objc public final var selectColorBorderEnabled: MultipleColorSemanticTokens { colors.colorActionSelected }
    @objc public final var selectColorBorderHover: MultipleColorSemanticTokens { colors.colorActionHover }
    @objc public final var selectColorBorderLoading: MultipleColorSemanticTokens { colors.colorActionLoading }
    @objc public final var selectColorBorderPressed: MultipleColorSemanticTokens { colors.colorActionPressed }
    @objc public final var selectColorContentDisabled: MultipleColorSemanticTokens { colors.colorContentDisabled }
    @objc public final var selectColorContentEnabled: MultipleColorSemanticTokens { colors.colorContentDefault }
    @objc public final var selectColorContentFocus: MultipleColorSemanticTokens { colors.colorContentDefault }
    @objc public final var selectColorContentHelperTextDisabled: MultipleColorSemanticTokens { colors.colorContentDisabled }
    @objc public final var selectColorContentHelperTextEnabled: MultipleColorSemanticTokens { colors.colorContentMuted }
    @objc public final var selectColorContentHelperTextFocus: MultipleColorSemanticTokens { colors.colorContentMuted }
    @objc public final var selectColorContentHelperTextHover: MultipleColorSemanticTokens { colors.colorContentMuted }
    @objc public final var selectColorContentHelperTextLoading: MultipleColorSemanticTokens { colors.colorContentMuted }
    @objc public final var selectColorContentHelperTextPressed: MultipleColorSemanticTokens { colors.colorContentMuted }
    @objc public final var selectColorContentHover: MultipleColorSemanticTokens { colors.colorContentDefault }
    @objc public final var selectColorContentLoading: MultipleColorSemanticTokens { colors.colorContentDefault }
    @objc public final var selectColorContentPressed: MultipleColorSemanticTokens { colors.colorContentDefault }
    @objc public final var selectSizeCheckBox: SizeSemanticToken { sizes.sizeIconWithLabelLargeSizeSm }
    @objc public final var selectSizeIcon: SizeSemanticToken { sizes.sizeIconWithLabelLargeSizeMd }
    @objc public final var selectSizeLoader: SizeSemanticToken { sizes.sizeIconWithLabelLargeSizeSm }
    @objc public final var selectSpaceColumnGap: SpaceSemanticToken { spaces.spaceColumnGapLg }
    @objc public final var selectSpacePaddingInset: SpaceSemanticToken { spaces.spaceInsetMd }
    @objc public final var selectSpaceRowGap: SpaceSemanticToken { spaces.spaceRowGapNone }
}
