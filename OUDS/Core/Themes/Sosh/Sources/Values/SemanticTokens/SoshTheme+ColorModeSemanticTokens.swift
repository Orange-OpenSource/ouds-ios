//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System
//

import Foundation
import OUDSTokensRaw
import OUDSTokensSemantic

// ðŸ§± Tokens version: 1.1.0
// ðŸ¤– Generated by Tokenator

extension SoshThemeColorModeSemanticTokensProvider: ColorModeSemanticTokens {
    /// Has for value token ColorModeRawTokens.light
    @objc public var modeOnBgPrimaryLight: ColorModeSemanticToken { ColorModeRawTokens.light }
    /// Has for value token ColorModeRawTokens.dark
    @objc public var modeOnBgPrimaryDark: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.light
    @objc public var modeOnBgSecondaryLight: ColorModeSemanticToken { ColorModeRawTokens.light }
    /// Has for value token ColorModeRawTokens.dark
    @objc public var modeOnBgSecondaryDark: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.light
    @objc public var modeOnBgTertiaryLight: ColorModeSemanticToken { ColorModeRawTokens.light }
    /// Has for value token ColorModeRawTokens.dark
    @objc public var modeOnBgTertiaryDark: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.dark
    @objc public var modeOnBgEmphasizedLight: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.dark
    @objc public var modeOnBgEmphasizedDark: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public var modeOnBrandPrimaryLight: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight }
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public var modeOnBrandPrimaryDark: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight }
    /// Has for value token ColorModeRawTokens.undefined
    @objc public var modeOnBrandSecondaryLight: ColorModeSemanticToken { ColorModeRawTokens.undefined }
    /// Has for value token ColorModeRawTokens.undefined
    @objc public var modeOnBrandSecondaryDark: ColorModeSemanticToken { ColorModeRawTokens.undefined }
    /// Has for value token ColorModeRawTokens.undefined
    @objc public var modeOnBrandTertiaryLight: ColorModeSemanticToken { ColorModeRawTokens.undefined }
    /// Has for value token ColorModeRawTokens.undefined
    @objc public var modeOnBrandTertiaryDark: ColorModeSemanticToken { ColorModeRawTokens.undefined }
    /// Has for value token ColorModeRawTokens.light
    @objc public var modeOnStatusNeutralMutedLight: ColorModeSemanticToken { ColorModeRawTokens.light }
    /// Has for value token ColorModeRawTokens.dark
    @objc public var modeOnStatusNeutralMutedDark: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.dark
    @objc public var modeOnStatusNeutralEmphasizedLight: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.light
    @objc public var modeOnStatusNeutralEmphasizedDark: ColorModeSemanticToken { ColorModeRawTokens.light }
    /// Has for value token ColorModeRawTokens.light
    @objc public var modeOnStatusPositiveMutedLight: ColorModeSemanticToken { ColorModeRawTokens.light }
    /// Has for value token ColorModeRawTokens.dark
    @objc public var modeOnStatusPositiveMutedDark: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public var modeOnStatusPositiveEmphasizedLight: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight }
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public var modeOnStatusPositiveEmphasizedDark: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight }
    /// Has for value token ColorModeRawTokens.light
    @objc public var modeOnStatusInfoMutedLight: ColorModeSemanticToken { ColorModeRawTokens.light }
    /// Has for value token ColorModeRawTokens.dark
    @objc public var modeOnStatusInfoMutedDark: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public var modeOnStatusInfoEmphasizedLight: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight }
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public var modeOnStatusInfoEmphasizedDark: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight }
    /// Has for value token ColorModeRawTokens.light
    @objc public var modeOnStatusWarningMutedLight: ColorModeSemanticToken { ColorModeRawTokens.light }
    /// Has for value token ColorModeRawTokens.dark
    @objc public var modeOnStatusWarningMutedDark: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public var modeOnStatusWarningEmphasizedLight: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight }
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public var modeOnStatusWarningEmphasizedDark: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight }
    /// Has for value token ColorModeRawTokens.light
    @objc public var modeOnStatusNegativeMutedLight: ColorModeSemanticToken { ColorModeRawTokens.light }
    /// Has for value token ColorModeRawTokens.dark
    @objc public var modeOnStatusNegativeMutedDark: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.monochromeDark
    @objc public var modeOnStatusNegativeEmphasizedLight: ColorModeSemanticToken { ColorModeRawTokens.monochromeDark }
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public var modeOnStatusNegativeEmphasizedDark: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight }
    /// Has for value token ColorModeRawTokens.light
    @objc public var modeOnStatusAccentMutedLight: ColorModeSemanticToken { ColorModeRawTokens.light }
    /// Has for value token ColorModeRawTokens.dark
    @objc public var modeOnStatusAccentMutedDark: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public var modeOnStatusAccentEmphasizedLight: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight }
    /// Has for value token ColorModeRawTokens.monochromeLight
    @objc public var modeOnStatusAccentEmphasizedDark: ColorModeSemanticToken { ColorModeRawTokens.monochromeLight }
    /// Has for value token ColorModeRawTokens.light
    @objc public var modeOnOverlayDefaultLight: ColorModeSemanticToken { ColorModeRawTokens.light }
    /// Has for value token ColorModeRawTokens.dark
    @objc public var modeOnOverlayDefaultDark: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.dark
    @objc public var modeOnOverlayEmphasizedLight: ColorModeSemanticToken { ColorModeRawTokens.dark }
    /// Has for value token ColorModeRawTokens.light
    @objc public var modeOnOverlayEmphasizedDark: ColorModeSemanticToken { ColorModeRawTokens.light }
    /// Has for value token ColorModeRawTokens.light
    @objc public var modeOnModalLight: ColorModeSemanticToken { ColorModeRawTokens.light }
    /// Has for value token ColorModeRawTokens.dark
    @objc public var modeOnModalDark: ColorModeSemanticToken { ColorModeRawTokens.dark }
}
