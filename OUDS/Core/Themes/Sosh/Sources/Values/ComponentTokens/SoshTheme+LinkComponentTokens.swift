//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System
//

import Foundation
import OUDSTokensComponent
import OUDSTokensRaw
import OUDSTokensSemantic

// ðŸ§± Tokens version: 1.1.0
// ðŸ¤– Generated by Tokenator

extension SoshThemeLinkComponentTokensProvider: LinkComponentTokens {
    /// Has for value token colors.colorActionEnabled
    @objc public var linkColorContentEnabled: MultipleColorSemanticTokens { colors.colorActionEnabled }
    /// Has for value token colors.colorActionHover
    @objc public var linkColorContentHover: MultipleColorSemanticTokens { colors.colorActionHover }
    /// Has for value token colors.colorActionPressed
    @objc public var linkColorContentPressed: MultipleColorSemanticTokens { colors.colorActionPressed }
    /// Has for value token colors.colorActionFocus
    @objc public var linkColorContentFocus: MultipleColorSemanticTokens { colors.colorActionFocus }
    /// Has for value token colors.colorContentBrandPrimary
    @objc public var linkColorArrowEnabled: MultipleColorSemanticTokens { colors.colorContentBrandPrimary }
    /// Has for value token colors.colorContentBrandPrimary
    @objc public var linkColorArrowHover: MultipleColorSemanticTokens { colors.colorContentBrandPrimary }
    /// Has for value token colors.colorContentBrandPrimary
    @objc public var linkColorArrowPressed: MultipleColorSemanticTokens { colors.colorContentBrandPrimary }
    /// Has for value token colors.colorContentBrandPrimary
    @objc public var linkColorArrowFocus: MultipleColorSemanticTokens { colors.colorContentBrandPrimary }
    /// Has for value token spaces.spacePaddingInlineNone
    @objc public var linkSpacePaddingInline: SpaceSemanticToken { spaces.spacePaddingInlineNone }
    /// Has for value token spaces.spacePaddingBlockMd
    @objc public var linkSpacePaddingBlock: SpaceSemanticToken { spaces.spacePaddingBlockMd }
    /// Has for value token spaces.spaceColumnGapSm
    @objc public var linkSpaceColumnGapIconDefault: SpaceSemanticToken { spaces.spaceColumnGapSm }
    /// Has for value token spaces.spaceColumnGapXs
    @objc public var linkSpaceColumnGapIconSmall: SpaceSemanticToken { spaces.spaceColumnGapXs }
    /// Has for value token spaces.spaceColumnGap2xs
    @objc public var linkSpaceColumnGapArrowDefault: SpaceSemanticToken { spaces.spaceColumnGap2xs }
    /// Has for value token spaces.spaceColumnGap2xs
    @objc public var linkSpaceColumnGapArrowSmall: SpaceSemanticToken { spaces.spaceColumnGap2xs }
    /// Has for value token sizes.sizeIconWithLabelLargeSizeXs
    @objc public var linkSizeIconDefault: SizeSemanticToken { sizes.sizeIconWithLabelLargeSizeXs }
    /// Has for value token sizes.sizeIconWithLabelMediumSizeSm
    @objc public var linkSizeIconSmall: SizeSemanticToken { sizes.sizeIconWithLabelMediumSizeSm }
    /// Has for value token sizes.sizeMinInteractiveArea
    @objc public var linkSizeMinHeightDefault: SizeSemanticToken { sizes.sizeMinInteractiveArea }
    /// Has for value token sizes.sizeMinInteractiveArea
    @objc public var linkSizeMinWidthDefault: SizeSemanticToken { sizes.sizeMinInteractiveArea }
    /// Has for value token DimensionRawTokens.dimension550
    @objc public var linkSizeMinHeightSmall: SizeSemanticToken { DimensionRawTokens.dimension550 }
    /// Has for value token DimensionRawTokens.dimension550
    @objc public var linkSizeMinWidthSmall: SizeSemanticToken { DimensionRawTokens.dimension550 }
}
