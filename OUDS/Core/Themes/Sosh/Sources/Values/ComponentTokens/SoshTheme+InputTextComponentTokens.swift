//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System
//

import Foundation
import OUDSTokensComponent
import OUDSTokensRaw
import OUDSTokensSemantic

// ðŸ§± Tokens version: 1.1.0
// ðŸ¤– Generated by Tokenator

// swiftlint:disable identifier_name

extension SoshThemeInputTextComponentTokensProvider: InputTextComponentTokens {
    /// Has for value token colors.colorActionSupportEnabled
    @objc public final var inputTextColorBgDefaultEnabled: MultipleColorSemanticTokens { colors.colorActionSupportEnabled }
    /// Has for value token colors.colorActionSupportHover
    @objc public final var inputTextColorBgDefaultHover: MultipleColorSemanticTokens { colors.colorActionSupportHover }
    /// Has for value token colors.colorActionSupportPressed
    @objc public final var inputTextColorBgDefaultPressed: MultipleColorSemanticTokens { colors.colorActionSupportPressed }
    /// Has for value token colors.colorActionSupportLoading
    @objc public final var inputTextColorBgDefaultLoading: MultipleColorSemanticTokens { colors.colorActionSupportLoading }
    /// Has for value token colors.colorActionSupportEnabled
    @objc public final var inputTextColorBgDefaultDisabled: MultipleColorSemanticTokens { colors.colorActionSupportEnabled }
    /// Has for value token colors.colorActionSupportFocus
    @objc public final var inputTextColorBgDefaultFocus: MultipleColorSemanticTokens { colors.colorActionSupportFocus }
    /// Has for value token colors.colorContentDefault
    @objc public final var inputTextColorContentDefaultEnabled: MultipleColorSemanticTokens { colors.colorContentDefault }
    /// Has for value token colors.colorContentDefault
    @objc public final var inputTextColorContentDefaultHover: MultipleColorSemanticTokens { colors.colorContentDefault }
    /// Has for value token colors.colorContentDefault
    @objc public final var inputTextColorContentDefaultPressed: MultipleColorSemanticTokens { colors.colorContentDefault }
    /// Has for value token colors.colorContentDefault
    @objc public final var inputTextColorContentDefaultLoading: MultipleColorSemanticTokens { colors.colorContentDefault }
    /// Has for value token colors.colorContentDisabled
    @objc public final var inputTextColorContentDefaultDisabled: MultipleColorSemanticTokens { colors.colorContentDisabled }
    /// Has for value token colors.colorContentDefault
    @objc public final var inputTextColorContentDefaultFocus: MultipleColorSemanticTokens { colors.colorContentDefault }
    /// Has for value token spaces.spaceInsetMd
    @objc public final var inputTextSpaceInsetIconAlone: SpaceSemanticToken { spaces.spaceInsetMd }
    /// Has for value token spaces.spacePaddingBlockMd
    @objc public final var inputTextSpacePaddingBlock: SpaceSemanticToken { spaces.spacePaddingBlockMd }
    /// Has for value token spaces.spacePaddingInlineMd
    @objc public final var inputTextSpacePaddingInlineContainerStart: SpaceSemanticToken { spaces.spacePaddingInlineMd }
    /// Has for value token spaces.spacePaddingInline2xs
    @objc public final var inputTextSpacePaddingInlineContainerEnd: SpaceSemanticToken { spaces.spacePaddingInline2xs }
    /// Has for value token spaces.spacePaddingInlineXs
    @objc public final var inputTextSpacePaddingInlineTextEnd: SpaceSemanticToken { spaces.spacePaddingInlineXs }
    /// Has for value token spaces.spacePaddingInlineXs
    @objc public final var inputTextSpacePaddingInlinePrefixTextEnd: SpaceSemanticToken { spaces.spacePaddingInlineXs }
    /// Has for value token spaces.spacePaddingInline3xs
    @objc public final var inputTextSpacePaddingInlineSuffixTextEnd: SpaceSemanticToken { spaces.spacePaddingInline3xs }
    /// Has for value token spaces.spacePaddingInline2xs
    @objc public final var inputTextSpacePaddingInlineIconEnd: SpaceSemanticToken { spaces.spacePaddingInline2xs }
    /// Has for value token DimensionRawTokens.dimension1600
    @objc public final var inputTextSizeMinWidth: SizeSemanticToken { DimensionRawTokens.dimension1600 }
    /// Has for value token DimensionRawTokens.dimension4000
    @objc public final var inputTextSizeMaxWidth: SizeSemanticToken { DimensionRawTokens.dimension4000 }
}

// swiftlint:enable identifier_name
