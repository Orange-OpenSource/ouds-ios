//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System
//

// ðŸ§± Tokens version: 1.1.0
// ðŸ¤– Generated by Tokenator

extension DimensionRawTokens {
    /// Has for value 0
    public static let dimension0: DimensionRawToken = dimensionBase * 0 // 0px
    /// Has for value 4
    public static let dimension50: DimensionRawToken = dimensionBase * 1 // 4px
    /// Has for value 8
    public static let dimension100: DimensionRawToken = dimensionBase * 2 // 8px
    /// Has for value 12
    public static let dimension150: DimensionRawToken = dimensionBase * 3 // 12px
    /// Has for value 16
    public static let dimension200: DimensionRawToken = dimensionBase * 4 // 16px
    /// Has for value 20
    public static let dimension250: DimensionRawToken = dimensionBase * 5 // 20px
    /// Has for value 24
    public static let dimension300: DimensionRawToken = dimensionBase * 6 // 24px
    /// Has for value 28
    public static let dimension350: DimensionRawToken = dimensionBase * 7 // 28px
    /// Has for value 32
    public static let dimension400: DimensionRawToken = dimensionBase * 8 // 32px
    /// Has for value 36
    public static let dimension450: DimensionRawToken = dimensionBase * 9 // 36px
    /// Has for value 40
    public static let dimension500: DimensionRawToken = dimensionBase * 10 // 40px
    /// Has for value 44
    public static let dimension550: DimensionRawToken = dimensionBase * 11 // 44px
    /// Has for value 48
    public static let dimension600: DimensionRawToken = dimensionBase * 12 // 48px
    /// Has for value 52
    public static let dimension650: DimensionRawToken = dimensionBase * 13 // 52px
    /// Has for value 56
    public static let dimension700: DimensionRawToken = dimensionBase * 14 // 56px
    /// Has for value 60
    public static let dimension750: DimensionRawToken = dimensionBase * 15 // 60px
    /// Has for value 64
    public static let dimension800: DimensionRawToken = dimensionBase * 16 // 64px
    /// Has for value 68
    public static let dimension850: DimensionRawToken = dimensionBase * 17 // 68px
    /// Has for value 72
    public static let dimension900: DimensionRawToken = dimensionBase * 18 // 72px
    /// Has for value 80
    public static let dimension1000: DimensionRawToken = dimensionBase * 20 // 80px
    /// Has for value 96
    public static let dimension1200: DimensionRawToken = dimensionBase * 24 // 96px
    /// Has for value 100
    public static let dimension1250: DimensionRawToken = dimensionBase * 25 // 100px
    /// Has for value 112
    public static let dimension1400: DimensionRawToken = dimensionBase * 28 // 112px
    /// Has for value 128
    public static let dimension1600: DimensionRawToken = dimensionBase * 32 // 128px
    /// Has for value 144
    public static let dimension1800: DimensionRawToken = dimensionBase * 36 // 144px
    /// Has for value 160
    public static let dimension2000: DimensionRawToken = dimensionBase * 40 // 160px
    /// Has for value 320
    public static let dimension3000: DimensionRawToken = dimensionBase * 80 // 320px
    /// Has for value 480
    public static let dimension4000: DimensionRawToken = dimensionBase * 120 // 480px
    /// Has for value 560
    public static let dimension5000: DimensionRawToken = dimensionBase * 140 // 560px
    /// Has for value 640
    public static let dimension6000: DimensionRawToken = dimensionBase * 160 // 640px
    /// Has for value 720
    public static let dimension7000: DimensionRawToken = dimensionBase * 180 // 720px
    /// Has for value 880
    public static let dimension9000: DimensionRawToken = dimensionBase * 220 // 880px
    /// Has for value 1040
    public static let dimension11000: DimensionRawToken = dimensionBase * 260 // 1040px
    /// Has for value 4
    public static let dimensionBase: Double = 4
    /// Has for value 1
    public static let dimensionOutOfSystem25: DimensionRawToken = dimensionBase * 0.25 // 1px
    /// Has for value 2
    public static let dimensionOutOfSystem50: DimensionRawToken = dimensionBase * 0.5 // 2px
    /// Has for value 3
    public static let dimensionOutOfSystem75: DimensionRawToken = dimensionBase * 0.75 // 3px
    /// Has for value 6
    public static let dimensionOutOfSystem150: DimensionRawToken = dimensionBase * 1.5 // 6px
    /// Has for value 10
    public static let dimensionOutOfSystem250: DimensionRawToken = dimensionBase * 2.5 // 10px
}
