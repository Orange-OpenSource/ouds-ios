//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
// 
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
// 
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System 
//

// ଘ( ･ω･)_/ﾟ･:*:･｡☆
// [File to generate with the tokenator]
// WARNING: Not synchronized anymore with the Figjam / Figma by developers team
// Create an issue for update https://github.com/Orange-OpenSource/ouds-ios/issues/new?template=token_update.yml

// swiftlint:disable missing_docs

/// This is a group of semantic tokens for **typography**.
/// It defines all typography semantic tokens a theme must have
/// (`TypographyFontFamilySemanticToken`, `TypographyFontWeightSemanticToken`, `TypographyFontSizeSemanticToken`, `TypographyFontLineHeightSemanticToken`).
///
/// However the composite tokens (here the ones gathering each type of semantic token here) are defined in `TypographyCompositeSemanticTokens` because the *tokenator*
/// is not able to generate them yet, and they must be defined elsewhere to not be deleted.
///
/// In the future this file should be generated by a parser converting Figma JSON to Swift code.
public protocol TypographySemanticTokens {

    // MARK: - Semantic token - Typography - Font - Family

    var fontFamily: TypographyFontFamilySemanticToken { get }
    var fontFamilyDisplay: TypographyFontFamilySemanticToken { get }
    var fontFamilyHeading: TypographyFontFamilySemanticToken { get }
    var fontFamilyBody: TypographyFontFamilySemanticToken { get }
    var fontFamilyLabel: TypographyFontFamilySemanticToken { get }
    var fontFamilyCode: TypographyFontFamilySemanticToken { get }

    // MARK: - Semantic token - Typography - Font - Weight

    var fontWeightDefault: TypographyFontWeightSemanticToken { get }
    var fontWeightCode: TypographyFontWeightSemanticToken { get }
    var fontWeightStrong: TypographyFontWeightSemanticToken { get }
    var fontWeightDisplay: TypographyFontWeightSemanticToken { get }
    var fontWeightHeading: TypographyFontWeightSemanticToken { get }
    var fontWeightBodyDefault: TypographyFontWeightSemanticToken { get }
    var fontWeightBodyStrong: TypographyFontWeightSemanticToken { get }
    var fontWeightLabelDefault: TypographyFontWeightSemanticToken { get }
    var fontWeightLabelStrong: TypographyFontWeightSemanticToken { get }

    // MARK: - Semantic token - Typography - Font - Size

    var fontSizeDisplayLarge: MultipleFontSizeTokens { get }
    var fontSizeDisplayMedium: MultipleFontSizeTokens { get }
    var fontSizeDisplaySmall: MultipleFontSizeTokens { get }
    var fontSizeHeadingXLarge: MultipleFontSizeTokens { get }
    var fontSizeHeadingLarge: MultipleFontSizeTokens { get }
    var fontSizeHeadingMedium: MultipleFontSizeTokens { get }
    var fontSizeHeadingSmall: MultipleFontSizeTokens { get }
    var fontSizeBodyLarge: MultipleFontSizeTokens { get }
    var fontSizeBodyMedium: MultipleFontSizeTokens { get }
    var fontSizeBodySmall: MultipleFontSizeTokens { get }

    // MARK: - Semantic token - Typography - Font - Size - Others

    var fontSizeLabelXLarge: TypographyFontSizeSemanticToken { get }
    var fontSizeLabelLarge: TypographyFontSizeSemanticToken { get }
    var fontSizeLabelMedium: TypographyFontSizeSemanticToken { get }
    var fontSizeLabelSmall: TypographyFontSizeSemanticToken { get }
    var fontSizeCodeMedium: TypographyFontSizeSemanticToken { get }
    var fontSizeCodeSmall: TypographyFontSizeSemanticToken { get }

    // MARK: - Semantic token - Typography - Font - Line height

    var fontLineHeightDisplayLarge: MultipleFontLineHeightTokens { get }
    var fontLineHeightDisplayMedium: MultipleFontLineHeightTokens { get }
    var fontLineHeightDisplaySmall: MultipleFontLineHeightTokens { get }
    var fontLineHeightHeadingXLarge: MultipleFontLineHeightTokens { get }
    var fontLineHeightHeadingLarge: MultipleFontLineHeightTokens { get }
    var fontLineHeightHeadingMedium: MultipleFontLineHeightTokens { get }
    var fontLineHeightHeadingSmall: MultipleFontLineHeightTokens { get }
    var fontLineHeightBodyLarge: MultipleFontLineHeightTokens { get }
    var fontLineHeightBodyMedium: MultipleFontLineHeightTokens { get }
    var fontLineHeightBodySmall: MultipleFontLineHeightTokens { get }
    var fontLineHeightLabelXLarge: MultipleFontLineHeightTokens { get }
    var fontLineHeightLabelLarge: MultipleFontLineHeightTokens { get }
    var fontLineHeightLabelMedium: MultipleFontLineHeightTokens { get }
    var fontLineHeightLabelSmall: MultipleFontLineHeightTokens { get }
    var fontLineHeightCodeMedium: MultipleFontLineHeightTokens { get }
    var fontLineHeightCodeSmall: MultipleFontLineHeightTokens { get }

    // MARK: - Semantic token - Typography - Font - Letter spacing

    var fontLetterSpacingDisplayLarge: MultipleFontLetterSpacingTokens { get }
    var fontLetterSpacingDisplayMedium: MultipleFontLetterSpacingTokens { get }
    var fontLetterSpacingDisplaySmall: MultipleFontLetterSpacingTokens { get }
    var fontLetterSpacingHeadingXLarge: MultipleFontLetterSpacingTokens { get }
    var fontLetterSpacingHeadingLarge: MultipleFontLetterSpacingTokens { get }
    var fontLetterSpacingHeadingMedium: MultipleFontLetterSpacingTokens { get }
    var fontLetterSpacingHeadingSmall: MultipleFontLetterSpacingTokens { get }
    var fontLetterSpacingBodyLarge: MultipleFontLetterSpacingTokens { get }
    var fontLetterSpacingBodyMedium: MultipleFontLetterSpacingTokens { get }
    var fontLetterSpacingBodySmall: MultipleFontLetterSpacingTokens { get }

    var fontLetterSpacingLabelXLarge: MultipleFontLetterSpacingTokens { get }
    var fontLetterSpacingLabelLarge: MultipleFontLetterSpacingTokens { get }
    var fontLetterSpacingLabelMedium: MultipleFontLetterSpacingTokens { get }
    var fontLetterSpacingLabelSmall: MultipleFontLetterSpacingTokens { get }
    var fontLetterSpacingCodeMedium: MultipleFontLetterSpacingTokens { get }
    var fontLetterSpacingCodeSmall: MultipleFontLetterSpacingTokens { get }
}

// swiftlint:enable missing_docs
