//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
// 
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
// 
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System 
//

// [File not generated by the tokenator]
// WARNING: Not synchronized anymore with the Figjam / Figma by developers team
// Create an issue for update https://github.com/Orange-OpenSource/ouds-ios/issues/new?template=token_update.yml

// swiftlint:disable missing_docs

/// This is a group of semantic tokens for **typography**.
/// It defines all typography semantic tokens a theme must have
/// (``TypographyFontFamilySemanticToken``, ``TypographyFontWeightSemanticToken``, ``TypographyFontSizeSemanticToken``, ``TypographyFontLineHeightSemanticToken``).
/// However the composite tokens (here the ones gathering each type of semantic token here) are defined in ``TypographyCompositeSemanticTokens`` because the *tokenator*
/// is not able to generate them yet, and they must be defined elsewhere to not be deleted.
/// Any typography semantic token must be declared there (except ``TypographyCompositeSemanticTokens``).
public protocol TypographySemanticTokens {

    // MARK: - Semantic token - Typography - Font - Family

    var fontFamily: FontFamilySemanticToken { get }
    var fontFamilyDisplay: FontFamilySemanticToken { get }
    var fontFamilyHeading: FontFamilySemanticToken { get }
    var fontFamilyBody: FontFamilySemanticToken { get }
    var fontFamilyLabel: FontFamilySemanticToken { get }
    var fontFamilyCode: FontFamilySemanticToken { get }

    // MARK: - Semantic token - Typography - Font - Weight

    var fontWeightDefault: FontWeightSemanticToken { get }
    var fontWeightCode: FontWeightSemanticToken { get }
    var fontWeightStrong: FontWeightSemanticToken { get }
    var fontWeightDisplay: FontWeightSemanticToken { get }
    var fontWeightHeading: FontWeightSemanticToken { get }
    var fontWeightBodyDefault: FontWeightSemanticToken { get }
    var fontWeightBodyStrong: FontWeightSemanticToken { get }
    var fontWeightLabelDefault: FontWeightSemanticToken { get }
    var fontWeightLabelStrong: FontWeightSemanticToken { get }

    // MARK: - Semantic token - Typography - Font - Size

    var fontSizeDisplayLargeMobile: FontSizeSemanticToken { get }
    var fontSizeDisplayLargeTablet: FontSizeSemanticToken { get }
    var fontSizeDisplayMediumMobile: FontSizeSemanticToken { get }
    var fontSizeDisplayMediumTablet: FontSizeSemanticToken { get }
    var fontSizeDisplaySmallMobile: FontSizeSemanticToken { get }
    var fontSizeDisplaySmallTablet: FontSizeSemanticToken { get }
    var fontSizeHeadingXLargeMobile: FontSizeSemanticToken { get }
    var fontSizeHeadingXLargeTablet: FontSizeSemanticToken { get }
    var fontSizeHeadingLargeMobile: FontSizeSemanticToken { get }
    var fontSizeHeadingLargeTablet: FontSizeSemanticToken { get }
    var fontSizeHeadingMediumMobile: FontSizeSemanticToken { get }
    var fontSizeHeadingMediumTablet: FontSizeSemanticToken { get }
    var fontSizeHeadingSmallMobile: FontSizeSemanticToken { get }
    var fontSizeHeadingSmallTablet: FontSizeSemanticToken { get }
    var fontSizeBodyLargeMobile: FontSizeSemanticToken { get }
    var fontSizeBodyLargeTablet: FontSizeSemanticToken { get }
    var fontSizeBodyMediumMobile: FontSizeSemanticToken { get }
    var fontSizeBodyMediumTablet: FontSizeSemanticToken { get }
    var fontSizeBodySmallMobile: FontSizeSemanticToken { get }
    var fontSizeBodySmallTablet: FontSizeSemanticToken { get }
    var fontSizeLabelXLargeMobile: FontSizeSemanticToken { get }
    var fontSizeLabelXLargeTablet: FontSizeSemanticToken { get }
    var fontSizeLabelLargeMobile: FontSizeSemanticToken { get }
    var fontSizeLabelLargeTablet: FontSizeSemanticToken { get }
    var fontSizeLabelMediumMobile: FontSizeSemanticToken { get }
    var fontSizeLabelMediumTablet: FontSizeSemanticToken { get }
    var fontSizeLabelSmallMobile: FontSizeSemanticToken { get }
    var fontSizeLabelSmallTablet: FontSizeSemanticToken { get }
    var fontSizeCodeMediumMobile: FontSizeSemanticToken { get }
    var fontSizeCodeMediumTablet: FontSizeSemanticToken { get }
    var fontSizeCodeSmallMobile: FontSizeSemanticToken { get }
    var fontSizeCodeSmallTablet: FontSizeSemanticToken { get }

    // MARK: - Semantic token - Typography - Font - Line height

    var fontLineHeightDisplayLargeMobile: FontLineHeightSemanticToken { get }
    var fontLineHeightDisplayLargeTablet: FontLineHeightSemanticToken { get }
    var fontLineHeightDisplayMediumMobile: FontLineHeightSemanticToken { get }
    var fontLineHeightDisplayMediumTablet: FontLineHeightSemanticToken { get }
    var fontLineHeightDisplaySmallMobile: FontLineHeightSemanticToken { get }
    var fontLineHeightDisplaySmallTablet: FontLineHeightSemanticToken { get }
    var fontLineHeightHeadingXLargeMobile: FontLineHeightSemanticToken { get }
    var fontLineHeightHeadingXLargeTablet: FontLineHeightSemanticToken { get }
    var fontLineHeightHeadingLargeMobile: FontLineHeightSemanticToken { get }
    var fontLineHeightHeadingLargeTablet: FontLineHeightSemanticToken { get }
    var fontLineHeightHeadingMediumMobile: FontLineHeightSemanticToken { get }
    var fontLineHeightHeadingMediumTablet: FontLineHeightSemanticToken { get }
    var fontLineHeightHeadingSmallMobile: FontLineHeightSemanticToken { get }
    var fontLineHeightHeadingSmallTablet: FontLineHeightSemanticToken { get }
    var fontLineHeightBodyLargeMobile: FontLineHeightSemanticToken { get }
    var fontLineHeightBodyLargeTablet: FontLineHeightSemanticToken { get }
    var fontLineHeightBodyMediumMobile: FontLineHeightSemanticToken { get }
    var fontLineHeightBodyMediumTablet: FontLineHeightSemanticToken { get }
    var fontLineHeightBodySmallMobile: FontLineHeightSemanticToken { get }
    var fontLineHeightBodySmallTablet: FontLineHeightSemanticToken { get }
    var fontLineHeightLabelXLargeMobile: FontLineHeightSemanticToken { get }
    var fontLineHeightLabelXLargeTablet: FontLineHeightSemanticToken { get }
    var fontLineHeightLabelLargeMobile: FontLineHeightSemanticToken { get }
    var fontLineHeightLabelLargeTablet: FontLineHeightSemanticToken { get }
    var fontLineHeightLabelMediumMobile: FontLineHeightSemanticToken { get }
    var fontLineHeightLabelMediumTablet: FontLineHeightSemanticToken { get }
    var fontLineHeightLabelSmallMobile: FontLineHeightSemanticToken { get }
    var fontLineHeightLabelSmallTablet: FontLineHeightSemanticToken { get }
    var fontLineHeightCodeMediumMobile: FontLineHeightSemanticToken { get }
    var fontLineHeightCodeMediumTablet: FontLineHeightSemanticToken { get }
    var fontLineHeightCodeSmallMobile: FontLineHeightSemanticToken { get }
    var fontLineHeightCodeSmallTablet: FontLineHeightSemanticToken { get }

    // MARK: - Semantic token - Typography - Font - Letter spacing

    var fontLetterSpacingDisplayLargeMobile: FontLetterSpacingSemanticToken { get }
    var fontLetterSpacingDisplayLargeTablet: FontLetterSpacingSemanticToken { get }
    var fontLetterSpacingDisplayMediumMobile: FontLetterSpacingSemanticToken { get }
    var fontLetterSpacingDisplayMediumTablet: FontLetterSpacingSemanticToken { get }
    var fontLetterSpacingDisplaySmallMobile: FontLetterSpacingSemanticToken { get }
    var fontLetterSpacingDisplaySmallTablet: FontLetterSpacingSemanticToken { get }
    var fontLetterSpacingHeadingXLargeMobile: FontLetterSpacingSemanticToken { get }
    var fontLetterSpacingHeadingXLargeTablet: FontLetterSpacingSemanticToken { get }
    var fontLetterSpacingHeadingLargeMobile: FontLetterSpacingSemanticToken { get }
    var fontLetterSpacingHeadingLargeTablet: FontLetterSpacingSemanticToken { get }
    var fontLetterSpacingHeadingMediumMobile: FontLetterSpacingSemanticToken { get }
    var fontLetterSpacingHeadingMediumTablet: FontLetterSpacingSemanticToken { get }
    var fontLetterSpacingHeadingSmallMobile: FontLetterSpacingSemanticToken { get }
    var fontLetterSpacingHeadingSmallTablet: FontLetterSpacingSemanticToken { get }
    var fontLetterSpacingBodyLargeMobile: FontLetterSpacingSemanticToken { get }
    var fontLetterSpacingBodyLargeTablet: FontLetterSpacingSemanticToken { get }
    var fontLetterSpacingBodyMediumMobile: FontLetterSpacingSemanticToken { get }
    var fontLetterSpacingBodyMediumTablet: FontLetterSpacingSemanticToken { get }
    var fontLetterSpacingBodySmallMobile: FontLetterSpacingSemanticToken { get }
    var fontLetterSpacingBodySmallTablet: FontLetterSpacingSemanticToken { get }
    var fontLetterSpacingLabelXLargeMobile: FontLetterSpacingSemanticToken { get }
    var fontLetterSpacingLabelXLargeTablet: FontLetterSpacingSemanticToken { get }
    var fontLetterSpacingLabelLargeMobile: FontLetterSpacingSemanticToken { get }
    var fontLetterSpacingLabelLargeTablet: FontLetterSpacingSemanticToken { get }
    var fontLetterSpacingLabelMediumMobile: FontLetterSpacingSemanticToken { get }
    var fontLetterSpacingLabelMediumTablet: FontLetterSpacingSemanticToken { get }
    var fontLetterSpacingLabelSmallMobile: FontLetterSpacingSemanticToken { get }
    var fontLetterSpacingLabelSmallTablet: FontLetterSpacingSemanticToken { get }
    var fontLetterSpacingCodeMediumMobile: FontLetterSpacingSemanticToken { get }
    var fontLetterSpacingCodeMediumTablet: FontLetterSpacingSemanticToken { get }
    var fontLetterSpacingCodeSmallMobile: FontLetterSpacingSemanticToken { get }
    var fontLetterSpacingCodeSmallTablet: FontLetterSpacingSemanticToken { get }
}

// swiftlint:enable missing_docs
