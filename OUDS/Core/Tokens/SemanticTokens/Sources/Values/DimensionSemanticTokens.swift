//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
// 
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
// 
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System 
//

// ଘ( ･ω･)_/ﾟ･:*:･｡☆
// [File to generate with the tokenator]

/// This is a group of semantic tokens for **dimensions**.
/// It defines all `DimensionSemanticToken` a theme must have.
///
/// In the future this file should be generated by a parser converting Figma JSON to Swift code.
public protocol DimensionSemanticTokens {

    var dimensionNone: DimensionSemanticToken { get }
    var dimension10XS: DimensionSemanticToken { get }
    var dimension9XS: DimensionSemanticToken { get }
    var dimension8XS: DimensionSemanticToken { get }
    var dimension7XS: DimensionSemanticToken { get }
    var dimension6XS: DimensionSemanticToken { get }
    var dimension5XS: DimensionSemanticToken { get }
    var dimension4XS: DimensionSemanticToken { get }
    var dimension3XS: DimensionSemanticToken { get }
    var dimension2XS: DimensionSemanticToken { get }
    var dimensionXS: DimensionSemanticToken { get }
    var dimensionSM: DimensionSemanticToken { get }
    var dimensionMD: DimensionSemanticToken { get }
    var dimensionLG: DimensionSemanticToken { get }
    var dimensionXL: DimensionSemanticToken { get }
    var dimension2XL: DimensionSemanticToken { get }
    var dimension3XL: DimensionSemanticToken { get }
    var dimension4XL: DimensionSemanticToken { get }
    var dimension5XL: DimensionSemanticToken { get }
    var dimension6XL: DimensionSemanticToken { get }
    var dimension7XL: DimensionSemanticToken { get }
    var dimension8XL: DimensionSemanticToken { get }
    var dimension9XL: DimensionSemanticToken { get }
    var dimension10XL: DimensionSemanticToken { get }
    var dimension11XL: DimensionSemanticToken { get }
}
