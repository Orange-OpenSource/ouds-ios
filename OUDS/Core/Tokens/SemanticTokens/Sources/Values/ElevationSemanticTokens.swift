//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System
//

// [File not generated by the tokenator]
// WARNING: Not synchronized anymore with the Figjam / Figma by developers team
// Create an issue for update https://github.com/Orange-OpenSource/ouds-ios/issues/new?template=token_update.yml

// swiftlint:disable missing_docs
// swiftlint:disable identifier_name

/// This is a group of semantic tokens for **elevations**.
/// It defines all elevation semantic tokens a theme must have (``ElevationXSemanticToken``, ``ElevationYSemanticToken``,
/// ``ElevationBlurSemanticToken`` and ``ElevationColorSemanticToken``).
/// However the composite tokens (here for box shadows) are defined in ``ElevationCompositeSemanticTokens`` because the *tokenator*
/// is not able to generate them yet, and they must be defined elsewhere to not be deleted.
/// Any elevation semantic token must be declared there (except ``ElevationCompositeSemanticTokens``)
///
/// - Since: 0.8.0
public protocol ElevationSemanticTokens {

    // MARK: Semantic token - Elevation - X

    var elevationXNone: ElevationXSemanticToken { get }
    var elevationXRaised: ElevationXSemanticToken { get }
    var elevationXDrag: ElevationXSemanticToken { get }
    var elevationXStickyDefault: ElevationXSemanticToken { get }
    var elevationXStickyEmphasized: ElevationXSemanticToken { get }
    var elevationXStickyNavigationScrolled: ElevationXSemanticToken { get }

    // MARK: Semantic token - Elevation - Y

    var elevationYNone: ElevationYSemanticToken { get }
    var elevationYRaised: ElevationYSemanticToken { get }
    var elevationYDrag: ElevationYSemanticToken { get }
    var elevationYStickyDefault: ElevationYSemanticToken { get }
    var elevationYStickyEmphasized: ElevationYSemanticToken { get }
    var elevationYStickyNavigationScrolled: ElevationYSemanticToken { get }

    // MARK: Semantic token - Elevation - Blur

    var elevationBlurNone: ElevationBlurSemanticToken { get }
    var elevationBlurRaised: ElevationBlurSemanticToken { get }
    var elevationBlurDrag: ElevationBlurSemanticToken { get }
    var elevationBlurStickyDefault: ElevationBlurSemanticToken { get }
    var elevationBlurStickyEmphasized: ElevationBlurSemanticToken { get }
    var elevationBlurStickyNavigationScrolled: ElevationBlurSemanticToken { get }

    // MARK: Semantic token - Elevation - Color

    var elevationColorDefault: ElevationColorSemanticToken { get }
    var elevationColorNone: ElevationColorSemanticToken { get }
    var elevationColorRaised: ElevationColorSemanticToken { get }
    var elevationColorDrag: ElevationColorSemanticToken { get }
    var elevationColorEmphasized: ElevationColorSemanticToken { get }
    var elevationColorStickyDefault: ElevationColorSemanticToken { get }
    var elevationColorStickyEmphasized: ElevationColorSemanticToken { get }
    var elevationColorStickyNavigationScrolled: ElevationColorSemanticToken { get }
}

// swiftlint:enable missing_docs
// swiftlint:enable identifier_name
