//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
// 
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
// 
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System 
//

// ଘ( ･ω･)_/ﾟ･:*:･｡☆
// [File to generate with the tokenator]

// swiftlint:disable missing_docs

/// This is a group of semantic tokens for **elevations**.
/// It defines all elevation semantic tokens a theme must have. (`ElevationXSemanticToken`,`ElevationYSemanticToken`,
/// `ElevationBlurSemanticToken` and `ElevationColorSemanticToken`)
///
/// In the future this file should be generated by a parser converting Figma JSON to Swift code.
public protocol ElevationSemanticTokens {

    // MARK: Semantic token - Elevation - X

    var elevationXNone: ElevationXSemanticToken { get }
    var elevationXRaised: ElevationXSemanticToken { get }
    var elevationXDrag: ElevationXSemanticToken { get }
    var elevationXOverlayDefault: ElevationXSemanticToken { get }
    var elevationXOverlayEmphasized: ElevationXSemanticToken { get }
    var elevationXStickyDefault: ElevationXSemanticToken { get }
    var elevationXStickyEmphasized: ElevationXSemanticToken { get }
    var elevationXStickyNavigationScrolled: ElevationXSemanticToken { get }
    var elevationXFocus: ElevationXSemanticToken { get }

    // MARK: Semantic token - Elevation - Y

    var elevationYNone: ElevationYSemanticToken { get }
    var elevationYRaised: ElevationYSemanticToken { get }
    var elevationYDrag: ElevationYSemanticToken { get }
    var elevationYOverlayDefault: ElevationYSemanticToken { get }
    var elevationYOverlayEmphasized: ElevationYSemanticToken { get }
    var elevationYStickyDefault: ElevationYSemanticToken { get }
    var elevationYStickyEmphasized: ElevationYSemanticToken { get }
    var elevationYStickyNavigationScrolled: ElevationYSemanticToken { get }
    var elevationYFocus: ElevationYSemanticToken { get }

    // MARK: Semantic token - Elevation - Blur

    var elevationBlurNone: ElevationBlurSemanticToken { get }
    var elevationBlurRaised: ElevationBlurSemanticToken { get }
    var elevationBlurDrag: ElevationBlurSemanticToken { get }
    var elevationBlurOverlayDefault: ElevationBlurSemanticToken { get }
    var elevationBlurOverlayEmphasized: ElevationBlurSemanticToken { get }
    var elevationBlurStickyDefault: ElevationBlurSemanticToken { get }
    var elevationBlurStickyEmphasized: ElevationBlurSemanticToken { get }
    var elevationBlurStickyNavigationScrolled: ElevationBlurSemanticToken { get }
    var elevationBlurFocus: ElevationBlurSemanticToken { get }

    // MARK: Semantic token - Elevation - Color - None

    var elevationColorNone: ElevationColorSemanticToken { get }

    // MARK: Semantic token - Elevation - Color - Raised

    var elevationColorRaised: ElevationColorSemanticToken { get }

    // MARK: Semantic token - Elevation - Color - Drag

    var elevationColorDrag: ElevationColorSemanticToken { get }

    // MARK: Semantic token - Elevation - Color - Overlay - Default

    var elevationColorOverlayDefault: ElevationColorSemanticToken { get }

    // MARK: Semantic token - Elevation - Color - Overlay - Emphasized

    var elevationColorOverlayEmphasized: ElevationColorSemanticToken { get }

    // MARK: Semantic token - Elevation - Color - Sticky - Default

    var elevationColorStickyDefault: ElevationColorSemanticToken { get }

    // MARK: Semantic token - Elevation - Color - Sticky - Emphasized

    var elevationColorStickyEmphasized: ElevationColorSemanticToken { get }

    // MARK: Semantic token - Elevation - Color - Sticky - Navigation scrolled

    var elevationColorStickyNavigationScrolled: ElevationColorSemanticToken { get }

    // MARK: Semantic token - Elevation - Color - Focus

    var elevationColorFocus: ElevationColorSemanticToken { get }

    // MARK: Semantic token - Elevation - Box shadow

    var elevationNone: ElevationCompositeSemanticToken { get }

    var elevationRaised: ElevationCompositeSemanticToken { get }

    var elevationDrag: ElevationCompositeSemanticToken { get }

    var elevationOverlayDefault: ElevationCompositeSemanticToken { get }

    var elevationOverlayEmphasized: ElevationCompositeSemanticToken { get }

    var elevationStickyDefault: ElevationCompositeSemanticToken { get }

    var elevationStickyEmphasized: ElevationCompositeSemanticToken { get }

    var elevationStickyNavigationScrolled: ElevationCompositeSemanticToken { get }

    var elevationFocus: ElevationCompositeSemanticToken { get }
}

// swiftlint:enable missing_docs
