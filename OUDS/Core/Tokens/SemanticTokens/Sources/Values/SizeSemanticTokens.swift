//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
// 
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
// 
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System 
//

// ଘ( ･ω･)_/ﾟ･:*:･｡☆
// [File to generate with the tokenator]
// WARNING: Not synchronized anymore with the Figjam / Figma by developers team
// Create an issue for update https://github.com/Orange-OpenSource/ouds-ios/issues/new?template=token_update.yml

// swiftlint:disable missing_docs

/// This is a group of semantic tokens for **sizing**.
/// It defines all `SizeSemanticToken` a theme must have.
///
/// In the future this file should be generated by a parser converting Figma JSON to Swift code.
public protocol SizeSemanticTokens {

    // MARK: - Semantic token - Sizing - Icon with typography

    var sizeIconWithHeadingXLargeShortMobile: SizeSemanticToken { get }
    var sizeIconWithHeadingXLargeShortTablet: SizeSemanticToken { get }

    var sizeIconWithHeadingXLargeMediumMobile: SizeSemanticToken { get }
    var sizeIconWithHeadingXLargeMediumTablet: SizeSemanticToken { get }

    var sizeIconWithHeadingXLargeTallMobile: SizeSemanticToken { get }
    var sizeIconWithHeadingXLargeTallTablet: SizeSemanticToken { get }

    var sizeIconWithHeadingLargeShortMobile: SizeSemanticToken { get }
    var sizeIconWithHeadingLargeShortTablet: SizeSemanticToken { get }

    var sizeIconWithHeadingLargeMediumMobile: SizeSemanticToken { get }
    var sizeIconWithHeadingLargeMediumTablet: SizeSemanticToken { get }

    var sizeIconWithHeadingLargeTallMobile: SizeSemanticToken { get }
    var sizeIconWithHeadingLargeTallTablet: SizeSemanticToken { get }

    var sizeIconWithHeadingMediumShortMobile: SizeSemanticToken { get }
    var sizeIconWithHeadingMediumShortTablet: SizeSemanticToken { get }

    var sizeIconWithHeadingMediumMediumMobile: SizeSemanticToken { get }
    var sizeIconWithHeadingMediumMediumTablet: SizeSemanticToken { get }

    var sizeIconWithHeadingMediumTallMobile: SizeSemanticToken { get }
    var sizeIconWithHeadingMediumTallTablet: SizeSemanticToken { get }

    var sizeIconWithHeadingSmallShortMobile: SizeSemanticToken { get }
    var sizeIconWithHeadingSmallShortTablet: SizeSemanticToken { get }

    var sizeIconWithHeadingSmallMediumMobile: SizeSemanticToken { get }
    var sizeIconWithHeadingSmallMediumTablet: SizeSemanticToken { get }

    var sizeIconWithHeadingSmallTallMobile: SizeSemanticToken { get }
    var sizeIconWithHeadingSmallTallTablet: SizeSemanticToken { get }

    var sizeIconWithBodyLargeShortMobile: SizeSemanticToken { get }
    var sizeIconWithBodyLargeShortTablet: SizeSemanticToken { get }

    var sizeIconWithBodyLargeMediumMobile: SizeSemanticToken { get }
    var sizeIconWithBodyLargeMediumTablet: SizeSemanticToken { get }

    var sizeIconWithBodyLargeTallMobile: SizeSemanticToken { get }
    var sizeIconWithBodyLargeTallTablet: SizeSemanticToken { get }

    var sizeIconWithBodyMediumShortMobile: SizeSemanticToken { get }
    var sizeIconWithBodyMediumShortTablet: SizeSemanticToken { get }

    var sizeIconWithBodyMediumMediumMobile: SizeSemanticToken { get }
    var sizeIconWithBodyMediumMediumTablet: SizeSemanticToken { get }

    var sizeIconWithBodyMediumTallMobile: SizeSemanticToken { get }
    var sizeIconWithBodyMediumTallTablet: SizeSemanticToken { get }

    var sizeIconWithBodySmallShortMobile: SizeSemanticToken { get }
    var sizeIconWithBodySmallShortTablet: SizeSemanticToken { get }

    var sizeIconWithBodySmallMediumMobile: SizeSemanticToken { get }
    var sizeIconWithBodySmallMediumTablet: SizeSemanticToken { get }

    var sizeIconWithBodySmallTallMobile: SizeSemanticToken { get }
    var sizeIconWithBodySmallTallTablet: SizeSemanticToken { get }

    // MARK: - Semantic token - Sizing - Max width typography

    var sizeMaxWidthTypeDisplayLargeMobile: SizeSemanticToken { get }
    var sizeMaxWidthTypeDisplayLargeTablet: SizeSemanticToken { get }

    var sizeMaxWidthTypeDisplayMediumMobile: SizeSemanticToken { get }
    var sizeMaxWidthTypeDisplayMediumTablet: SizeSemanticToken { get }

    var sizeMaxWidthTypeDisplaySmallMobile: SizeSemanticToken { get }
    var sizeMaxWidthTypeDisplaySmallTablet: SizeSemanticToken { get }

    var sizeMaxWidthTypeHeadingXLargeMobile: SizeSemanticToken { get }
    var sizeMaxWidthTypeHeadingXLargeTablet: SizeSemanticToken { get }

    var sizeMaxWidthTypeHeadingLargeMobile: SizeSemanticToken { get }
    var sizeMaxWidthTypeHeadingLargeTablet: SizeSemanticToken { get }

    var sizeMaxWidthTypeHeadingMediumMobile: SizeSemanticToken { get }
    var sizeMaxWidthTypeHeadingMediumTablet: SizeSemanticToken { get }

    var sizeMaxWidthTypeHeadingSmallMobile: SizeSemanticToken { get }
    var sizeMaxWidthTypeHeadingSmallTablet: SizeSemanticToken { get }

    var sizeMaxWidthTypeBodyLargeMobile: SizeSemanticToken { get }
    var sizeMaxWidthTypeBodyLargeTablet: SizeSemanticToken { get }

    var sizeMaxWidthTypeBodyMediumMobile: SizeSemanticToken { get }
    var sizeMaxWidthTypeBodyMediumTablet: SizeSemanticToken { get }

    var sizeMaxWidthTypeBodySmallMobile: SizeSemanticToken { get }
    var sizeMaxWidthTypeBodySmallTablet: SizeSemanticToken { get }

    // MARK: - Semantic token - Sizing - Icon with typography

    var sizeIconWithLabelXLargeSizeShort: SizeSemanticToken { get }
    var sizeIconWithLabelXLargeSizeMedium: SizeSemanticToken { get }
    var sizeIconWithLabelXLargeSizeTall: SizeSemanticToken { get }

    var sizeIconWithLabelLargeSizeShorter: SizeSemanticToken { get }
    var sizeIconWithLabelLargeSizeShort: SizeSemanticToken { get }
    var sizeIconWithLabelLargeSizeMedium: SizeSemanticToken { get }
    var sizeIconWithLabelLargeSizeTall: SizeSemanticToken { get }
    var sizeIconWithLabelLargeSizeTaller: SizeSemanticToken { get }

    var sizeIconWithLabelMediumSizeShort: SizeSemanticToken { get }
    var sizeIconWithLabelMediumSizeMedium: SizeSemanticToken { get }
    var sizeIconWithLabelMediumSizeTall: SizeSemanticToken { get }

    var sizeIconWithLabelSmallSizeShort: SizeSemanticToken { get }
    var sizeIconWithLabelSmallSizeMedium: SizeSemanticToken { get }
    var sizeIconWithLabelSmallSizeTall: SizeSemanticToken { get }

    // MARK: - Semantic token - Sizing - Icon decorative

    var sizeIconDecorativeShortest: SizeSemanticToken { get }
    var sizeIconDecorativeShorter: SizeSemanticToken { get }
    var sizeIconDecorativeShort: SizeSemanticToken { get }
    var sizeIconDecorativeMedium: SizeSemanticToken { get }
    var sizeIconDecorativeTall: SizeSemanticToken { get }
    var sizeIconDecorativeTaller: SizeSemanticToken { get }
    var sizeIconDecorativeTallest: SizeSemanticToken { get }
}

// swiftlint:enable missing_docs
