//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
// 
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
// 
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System 
//

// ଘ( ･ω･)_/ﾟ･:*:･｡☆
// [File to generate with the tokenator]
// WARNING: Not synchronized anymore with the Figjam / Figma by developers team

// swiftlint:disable missing_docs

/// This is a group of semantic tokens for **sizing**.
/// It defines all `SizeSemanticToken` a theme must have.
///
/// In the future this file should be generated by a parser converting Figma JSON to Swift code.
public protocol SizeSemanticTokens {

    // MARK: - Semantic token - Sizing - Icon with typography

    var sizeIconWithHeadingXLargeShort: MultipleSizeTokens { get }
    var sizeIconWithHeadingXLargeMedium: MultipleSizeTokens { get }
    var sizeIconWithHeadingXLargeTall: MultipleSizeTokens { get }

    var sizeIconWithHeadingLargeShort: MultipleSizeTokens { get }
    var sizeIconWithHeadingLargeMedium: MultipleSizeTokens { get }
    var sizeIconWithHeadingLargeTall: MultipleSizeTokens { get }

    var sizeIconWithHeadingMediumShort: MultipleSizeTokens { get }
    var sizeIconWithHeadingMediumMedium: MultipleSizeTokens { get }
    var sizeIconWithHeadingMediumTall: MultipleSizeTokens { get }

    var sizeIconWithHeadingSmallShort: MultipleSizeTokens { get }
    var sizeIconWithHeadingSmallMedium: MultipleSizeTokens { get }
    var sizeIconWithHeadingSmallTall: MultipleSizeTokens { get }

    var sizeIconWithBodyLargeShort: MultipleSizeTokens { get }
    var sizeIconWithBodyLargeMedium: MultipleSizeTokens { get }
    var sizeIconWithBodyLargeTall: MultipleSizeTokens { get }

    var sizeIconWithBodyMediumShort: MultipleSizeTokens { get }
    var sizeIconWithBodyMediumMedium: MultipleSizeTokens { get }
    var sizeIconWithBodyMediumTall: MultipleSizeTokens { get }

    var sizeIconWithBodySmallShort: MultipleSizeTokens { get }
    var sizeIconWithBodySmallMedium: MultipleSizeTokens { get }
    var sizeIconWithBodySmallTall: MultipleSizeTokens { get }

    var sizeIconWithLabelXLargeSizeShort: SizeSemanticToken { get }
    var sizeIconWithLabelXLargeSizeMedium: SizeSemanticToken { get }
    var sizeIconWithLabelXLargeSizeTall: SizeSemanticToken { get }

    var sizeIconWithLabelLargeSizeShorter: SizeSemanticToken { get }
    var sizeIconWithLabelLargeSizeShort: SizeSemanticToken { get }
    var sizeIconWithLabelLargeSizeMedium: SizeSemanticToken { get }
    var sizeIconWithLabelLargeSizeTall: SizeSemanticToken { get }
    var sizeIconWithLabelLargeSizeTaller: SizeSemanticToken { get }

    var sizeIconWithLabelMediumSizeShort: SizeSemanticToken { get }
    var sizeIconWithLabelMediumSizeMedium: SizeSemanticToken { get }
    var sizeIconWithLabelMediumSizeTall: SizeSemanticToken { get }

    var sizeIconWithLabelSmallSizeShort: SizeSemanticToken { get }
    var sizeIconWithLabelSmallSizeMedium: SizeSemanticToken { get }
    var sizeIconWithLabelSmallSizeTall: SizeSemanticToken { get }

    // MARK: - Semantic token - Sizing - Max width typography

    var sizeMaxWidthTypeDisplayLarge: MultipleSizeTokens { get }
    var sizeMaxWidthTypeDisplayMedium: MultipleSizeTokens { get }
    var sizeMaxWidthTypeDisplaySmall: MultipleSizeTokens { get }

    var sizeMaxWidthTypeHeadingXLarge: MultipleSizeTokens { get }
    var sizeMaxWidthTypeHeadingLarge: MultipleSizeTokens { get }
    var sizeMaxWidthTypeHeadingMedium: MultipleSizeTokens { get }
    var sizeMaxWidthTypeHeadingSmall: MultipleSizeTokens { get }

    var sizeMaxWidthTypeBodyLarge: MultipleSizeTokens { get }
    var sizeMaxWidthTypeBodyMedium: MultipleSizeTokens { get }
    var sizeMaxWidthTypeBodySmall: MultipleSizeTokens { get }
}

// swiftlint:enable missing_docs
