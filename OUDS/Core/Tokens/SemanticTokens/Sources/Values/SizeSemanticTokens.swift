//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
// 
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
// 
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System 
//

// ଘ( ･ω･)_/ﾟ･:*:･｡☆
// [File to generate by the tokenator]
// WARNING: Not synchronized anymore with the Figjam / Figma by developers team
// Create an issue for update https://github.com/Orange-OpenSource/ouds-ios/issues/new?template=token_update.yml

// swiftlint:disable missing_docs
// swiftlint:disable identifier_name

/// This is a group of semantic tokens for **sizing**.
/// It defines all ``SizeSemanticToken`` a theme must have.
///
/// In the future this file should be generated by a the tokenator.
public protocol SizeSemanticTokens {

    // MARK: - Semantic token - Sizing - Icon with typography

    var sizeIconWithHeadingXlargeSizeShortMobile: SizeSemanticToken { get }
    var sizeIconWithHeadingXlargeSizeShortTablet: SizeSemanticToken { get }
    var sizeIconWithHeadingXlargeSizeMediumMobile: SizeSemanticToken { get }
    var sizeIconWithHeadingXlargeSizeMediumTablet: SizeSemanticToken { get }
    var sizeIconWithHeadingXlargeSizeTallMobile: SizeSemanticToken { get }
    var sizeIconWithHeadingXlargeSizeTallTablet: SizeSemanticToken { get }

    var sizeIconWithHeadingLargeSizeShortMobile: SizeSemanticToken { get }
    var sizeIconWithHeadingLargeSizeShortTablet: SizeSemanticToken { get }
    var sizeIconWithHeadingLargeSizeMediumMobile: SizeSemanticToken { get }
    var sizeIconWithHeadingLargeSizeMediumTablet: SizeSemanticToken { get }
    var sizeIconWithHeadingLargeSizeTallMobile: SizeSemanticToken { get }
    var sizeIconWithHeadingLargeSizeTallTablet: SizeSemanticToken { get }

    var sizeIconWithHeadingMediumSizeShortMobile: SizeSemanticToken { get }
    var sizeIconWithHeadingMediumSizeShortTablet: SizeSemanticToken { get }
    var sizeIconWithHeadingMediumSizeMediumMobile: SizeSemanticToken { get }
    var sizeIconWithHeadingMediumSizeMediumTablet: SizeSemanticToken { get }
    var sizeIconWithHeadingMediumSizeTallMobile: SizeSemanticToken { get }
    var sizeIconWithHeadingMediumSizeTallTablet: SizeSemanticToken { get }

    var sizeIconWithHeadingSmallSizeShortMobile: SizeSemanticToken { get }
    var sizeIconWithHeadingSmallSizeShortTablet: SizeSemanticToken { get }
    var sizeIconWithHeadingSmallSizeMediumMobile: SizeSemanticToken { get }
    var sizeIconWithHeadingSmallSizeMediumTablet: SizeSemanticToken { get }
    var sizeIconWithHeadingSmallSizeTallMobile: SizeSemanticToken { get }
    var sizeIconWithHeadingSmallSizeTallTablet: SizeSemanticToken { get }

    var sizeIconWithBodyLargeSizeShortMobile: SizeSemanticToken { get }
    var sizeIconWithBodyLargeSizeShortTablet: SizeSemanticToken { get }
    var sizeIconWithBodyLargeSizeMediumMobile: SizeSemanticToken { get }
    var sizeIconWithBodyLargeSizeMediumTablet: SizeSemanticToken { get }
    var sizeIconWithBodyLargeSizeTallMobile: SizeSemanticToken { get }
    var sizeIconWithBodyLargeSizeTallTablet: SizeSemanticToken { get }

    var sizeIconWithBodyMediumSizeShortMobile: SizeSemanticToken { get }
    var sizeIconWithBodyMediumSizeShortTablet: SizeSemanticToken { get }
    var sizeIconWithBodyMediumSizeMediumMobile: SizeSemanticToken { get }
    var sizeIconWithBodyMediumSizeMediumTablet: SizeSemanticToken { get }
    var sizeIconWithBodyMediumSizeTallMobile: SizeSemanticToken { get }
    var sizeIconWithBodyMediumSizeTallTablet: SizeSemanticToken { get }

    var sizeIconWithBodySmallSizeShortMobile: SizeSemanticToken { get }
    var sizeIconWithBodySmallSizeShortTablet: SizeSemanticToken { get }
    var sizeIconWithBodySmallSizeMediumMobile: SizeSemanticToken { get }
    var sizeIconWithBodySmallSizeMediumTablet: SizeSemanticToken { get }
    var sizeIconWithBodySmallSizeTallMobile: SizeSemanticToken { get }
    var sizeIconWithBodySmallSizeTallTablet: SizeSemanticToken { get }

    // MARK: - Semantic token - Sizing - Max width typography

    var sizeMaxWidthTypeDisplayLargeMobile: SizeSemanticToken { get }
    var sizeMaxWidthTypeDisplayLargeTablet: SizeSemanticToken { get }
    var sizeMaxWidthTypeDisplayMediumMobile: SizeSemanticToken { get }
    var sizeMaxWidthTypeDisplayMediumTablet: SizeSemanticToken { get }
    var sizeMaxWidthTypeDisplaySmallMobile: SizeSemanticToken { get }
    var sizeMaxWidthTypeDisplaySmallTablet: SizeSemanticToken { get }

    var sizeMaxWidthTypeHeadingXlargeMobile: SizeSemanticToken { get }
    var sizeMaxWidthTypeHeadingXlargeTablet: SizeSemanticToken { get }
    var sizeMaxWidthTypeHeadingLargeMobile: SizeSemanticToken { get }
    var sizeMaxWidthTypeHeadingLargeTablet: SizeSemanticToken { get }
    var sizeMaxWidthTypeHeadingMediumMobile: SizeSemanticToken { get }
    var sizeMaxWidthTypeHeadingMediumTablet: SizeSemanticToken { get }
    var sizeMaxWidthTypeHeadingSmallMobile: SizeSemanticToken { get }
    var sizeMaxWidthTypeHeadingSmallTablet: SizeSemanticToken { get }

    var sizeMaxWidthTypeBodyLargeMobile: SizeSemanticToken { get }
    var sizeMaxWidthTypeBodyLargeTablet: SizeSemanticToken { get }
    var sizeMaxWidthTypeBodyMediumMobile: SizeSemanticToken { get }
    var sizeMaxWidthTypeBodyMediumTablet: SizeSemanticToken { get }
    var sizeMaxWidthTypeBodySmallMobile: SizeSemanticToken { get }
    var sizeMaxWidthTypeBodySmallTablet: SizeSemanticToken { get }

    // MARK: - Semantic token - Sizing - Icon with typography

    var sizeIconWithLabelXlargeSizeShort: SizeSemanticToken { get }
    var sizeIconWithLabelXlargeSizeMedium: SizeSemanticToken { get }
    var sizeIconWithLabelXlargeSizeTall: SizeSemanticToken { get }

    var sizeIconWithLabelLargeSizeShorter: SizeSemanticToken { get }
    var sizeIconWithLabelLargeSizeShort: SizeSemanticToken { get }
    var sizeIconWithLabelLargeSizeMedium: SizeSemanticToken { get }
    var sizeIconWithLabelLargeSizeTall: SizeSemanticToken { get }
    var sizeIconWithLabelLargeSizeTaller: SizeSemanticToken { get }

    var sizeIconWithLabelMediumSizeShort: SizeSemanticToken { get }
    var sizeIconWithLabelMediumSizeMedium: SizeSemanticToken { get }
    var sizeIconWithLabelMediumSizeTall: SizeSemanticToken { get }

    var sizeIconWithLabelSmallSizeShort: SizeSemanticToken { get }
    var sizeIconWithLabelSmallSizeMedium: SizeSemanticToken { get }
    var sizeIconWithLabelSmallSizeTall: SizeSemanticToken { get }

    // MARK: - Semantic token - Sizing - Icon decorative

    var sizeIconDecorativeShortest: SizeSemanticToken { get }
    var sizeIconDecorativeShorter: SizeSemanticToken { get }
    var sizeIconDecorativeShort: SizeSemanticToken { get }
    var sizeIconDecorativeMedium: SizeSemanticToken { get }
    var sizeIconDecorativeTall: SizeSemanticToken { get }
    var sizeIconDecorativeTaller: SizeSemanticToken { get }
    var sizeIconDecorativeTallest: SizeSemanticToken { get }
}

// swiftlint:enable missing_docs
// swiftlint:enable identifier_name
