//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
// 
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
// 
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System 
//

// ଘ( ･ω･)_/ﾟ･:*:･｡☆
// [File to generate with the tokenator]

/// This is a group of semantic tokens for **sizing**.
/// It defines all `SizingSemanticToken` a theme must have.
///
/// In the future this file should be generated by a parser converting Figma JSON to Swift code.
public protocol SizingSemanticTokens {

    // MARK: - Semantic token - Sizing - Icon decorative

    var sizeIconDecorativeShortest: SizingSemanticToken { get }
    var sizeIconDecorativeShorter: SizingSemanticToken { get }
    var sizeIconDecorativeShort: SizingSemanticToken { get }
    var sizeIconDecorativeMedium: SizingSemanticToken { get }
    var sizeIconDecorativeTall: SizingSemanticToken { get }
    var sizeIconDecorativeTaller: SizingSemanticToken { get }
    var sizeIconDecorativeTallest: SizingSemanticToken { get }

    // MARK: - Semantic token - Sizing - Icon with typography

    var sizeIconWithTypeHeadingSmallShort: MultipleSizingSemanticToken { get }
    var sizeIconWithTypeHeadingSmallMedium: MultipleSizingSemanticToken { get }
    var sizeIconWithTypeHeadingSmallTall: MultipleSizingSemanticToken { get }

    var sizeIconWithTypeHeadingMediumShort: MultipleSizingSemanticToken { get }
    var sizeIconWithTypeHeadingMediumMedium: MultipleSizingSemanticToken { get }
    var sizeIconWithTypeHeadingMediumTall: MultipleSizingSemanticToken { get }

    var sizeIconWithTypeHeadingLargeShort: MultipleSizingSemanticToken { get }
    var sizeIconWithTypeHeadingLargeMedium: MultipleSizingSemanticToken { get }
    var sizeIconWithTypeHeadingLargeTall: MultipleSizingSemanticToken { get }

    var sizeIconWithTypeHeadingXLargeShort: MultipleSizingSemanticToken { get }
    var sizeIconWithTypeHeadingXLargeMedium: MultipleSizingSemanticToken { get }
    var sizeIconWithTypeHeadingXLargeTall: MultipleSizingSemanticToken { get }

    var sizeIconWithTypeBodySmallShort: MultipleSizingSemanticToken { get }
    var sizeIconWithTypeBodySmallMedium: MultipleSizingSemanticToken { get }
    var sizeIconWithTypeBodySmallTall: MultipleSizingSemanticToken { get }

    var sizeIconWithTypeBodyMediumShort: MultipleSizingSemanticToken { get }
    var sizeIconWithTypeBodyMediumMedium: MultipleSizingSemanticToken { get }
    var sizeIconWithTypeBodyMediumTall: MultipleSizingSemanticToken { get }

    var sizeIconWithTypeBodyLargeShort: MultipleSizingSemanticToken { get }
    var sizeIconWithTypeBodyLargeMedium: MultipleSizingSemanticToken { get }
    var sizeIconWithTypeBodyLargeTall: MultipleSizingSemanticToken { get }

    var sizeIconWithTypeLabelSmallShort: SizingSemanticToken { get }
    var sizeIconWithTypeLabelSmallMedium: SizingSemanticToken { get }
    var sizeIconWithTypeLabelSmallTall: SizingSemanticToken { get }

    var sizeIconWithTypeLabelMediumShort: SizingSemanticToken { get }
    var sizeIconWithTypeLabelMediumMedium: SizingSemanticToken { get }
    var sizeIconWithTypeLabelMediumTall: SizingSemanticToken { get }

    var sizeIconWithTypeLabelLargeShorter: SizingSemanticToken { get }
    var sizeIconWithTypeLabelLargeShort: SizingSemanticToken { get }
    var sizeIconWithTypeLabelLargeMedium: SizingSemanticToken { get }
    var sizeIconWithTypeLabelLargeTall: SizingSemanticToken { get }
    var sizeIconWithTypeLabelLargeTaller: SizingSemanticToken { get }

    var sizeIconWithTypeLabelXLargeShort: SizingSemanticToken { get }
    var sizeIconWithTypeLabelXLargeMedium: SizingSemanticToken { get }
    var sizeIconWithTypeLabelXLargeTall: SizingSemanticToken { get } // TODO: #122: Unit test to add

    // MARK: - Semantic token - Sizing - Max width typography

    var sizeMaxWidthTypeDisplaySmall: MultipleSizingSemanticToken { get }
    var sizeMaxWidthTypeDisplayMedium: MultipleSizingSemanticToken { get }
    var sizeMaxWidthTypeDisplayLarge: MultipleSizingSemanticToken { get }

    var sizeMaxWidthTypeHeadingSmall: MultipleSizingSemanticToken { get }
    var sizeMaxWidthTypeHeadingMedium: MultipleSizingSemanticToken { get }
    var sizeMaxWidthTypeHeadingLarge: MultipleSizingSemanticToken { get }
    var sizeMaxWidthTypeHeadingXLarge: MultipleSizingSemanticToken { get }

    var sizeMaxWidthTypeBodySmall: MultipleSizingSemanticToken { get }
    var sizeMaxWidthTypeBodyMedium: MultipleSizingSemanticToken { get }
    var sizeMaxWidthTypeBodyLarge: MultipleSizingSemanticToken { get }
}
