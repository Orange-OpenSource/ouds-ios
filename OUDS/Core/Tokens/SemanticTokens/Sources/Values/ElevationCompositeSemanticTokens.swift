//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System
//

// swiftlint:disable missing_docs

// [File not generated by the tokenator]
// WARNING: Not synchronized anymore with the Figjam / Figma by developers team
// Create an issue for update https://github.com/Orange-OpenSource/ouds-ios/issues/new?template=token_update.yml

/// This is a group of semantic tokens for **elevations**, but only **composite tokens**.
/// There are splitted and not declared in ``ElevationSemanticTokens`` as the *tokenator* tool parsing *Figma* JSON to Swift code is not able to manage them.
/// Thus we need to declare them in another file to prevent them to be erased.
/// It declares in fact box shadows effects.
///
/// This protocol makes themes able to provide and override ``ElevationCompositeSemanticToken``.
/// ``ElevationCompositeSemanticToken`` refers to ``MultipleElevationCompositeRawTokens``, which contains for light and dark color schemes `ElevationCompositeRawToken`.
/// This `ElevationCompositeRawToken` is not managed by tokenator yet as it is composed by three properties.
///
/// This ``ElevationCompositeSemanticTokens`` protocol contains a set of ``ElevationCompositeSemanticToken``.
/// They can be applied to views and components using `shadow(elevation:)` or `elevation(for:)`:
///
/// ```swift
///      @Environment(\.theme) var theme
///      @Environment(\.colorScheme) var colorScheme
///
///     // Given you want to apply the elevation token "elevationRaised"
///     var body: some View {
///         // Apply the token of elevation for the shadow effect without managing yourself the color scheme
///         Rectangle()
///             .shadow(elevation: theme.elevations.elevationRaised))
///     }
/// ```
///
/// ```swift
///     // Or get the token depending to the color scheme and do whatever you want with
///     theme.elevations.elevationRaised.elevation(for: colorScheme)
/// ```
///
/// - Since: 0.8.0
public protocol ElevationCompositeSemanticTokens {

    var elevationNone: ElevationCompositeSemanticToken { get }
    var elevationRaised: ElevationCompositeSemanticToken { get }
    var elevationDrag: ElevationCompositeSemanticToken { get }
    var elevationOverlayDefault: ElevationCompositeSemanticToken { get }
    var elevationOverlayEmphasized: ElevationCompositeSemanticToken { get }
    var elevationStickyDefault: ElevationCompositeSemanticToken { get }
    var elevationStickyEmphasized: ElevationCompositeSemanticToken { get }
    var elevationStickyNavigationScrolled: ElevationCompositeSemanticToken { get }
}

// swiftlint:enable missing_docs
