//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System
//

// [File not generated by the tokenator]
// WARNING: Not synchronized anymore with the Figjam / Figma by developers team
// Create an issue for update https://github.com/Orange-OpenSource/ouds-ios/issues/new?template=token_update.yml

// swiftlint:disable missing_docs
// swiftlint:disable identifier_name
// swiftlint:disable file_length

/// This is a group of semantic tokens for **colors**.
/// It defines all ``ColorSemanticToken``  a theme must have.
/// These tokens are then gathered inside ``ColorSemanticToken`` defined in ``ColorMultipleSemanticTokens``.
/// Any color semantic token must be declared there (except ``ColorSemanticToken``)
///
/// - Since: 0.8.0
public protocol ColorSemanticTokens {

    // MARK: - Color - Opacity

    var colorOpacityLowestLight: ColorSemanticToken { get }
    var colorOpacityLowestDark: ColorSemanticToken { get }

    var colorOpacityLowerLight: ColorSemanticToken { get }
    var colorOpacityLowerDark: ColorSemanticToken { get }

    var colorOpacityTransparentLight: ColorSemanticToken { get }
    var colorOpacityTransparentDark: ColorSemanticToken { get }

    // MARK: - Color - Action

    var colorActionDisabledLight: ColorSemanticToken { get }
    var colorActionDisabledDark: ColorSemanticToken { get }

    var colorActionEnabledLight: ColorSemanticToken { get }
    var colorActionEnabledDark: ColorSemanticToken { get }

    var colorActionFocusLight: ColorSemanticToken { get }
    var colorActionFocusDark: ColorSemanticToken { get }

    var colorActionHighlightedLight: ColorSemanticToken { get }
    var colorActionHighlightedDark: ColorSemanticToken { get }

    var colorActionHoverLight: ColorSemanticToken { get }
    var colorActionHoverDark: ColorSemanticToken { get }

    var colorActionLoadingLight: ColorSemanticToken { get }
    var colorActionLoadingDark: ColorSemanticToken { get }

    var colorActionNegativeEnabledLight: ColorSemanticToken { get }
    var colorActionNegativeEnabledDark: ColorSemanticToken { get }

    var colorActionNegativeFocusLight: ColorSemanticToken { get }
    var colorActionNegativeFocusDark: ColorSemanticToken { get }

    var colorActionNegativeHoverLight: ColorSemanticToken { get }
    var colorActionNegativeHoverDark: ColorSemanticToken { get }

    var colorActionNegativeLoadingLight: ColorSemanticToken { get }
    var colorActionNegativeLoadingDark: ColorSemanticToken { get }

    var colorActionNegativePressedLight: ColorSemanticToken { get }
    var colorActionNegativePressedDark: ColorSemanticToken { get }

    var colorActionPressedLight: ColorSemanticToken { get }
    var colorActionPressedDark: ColorSemanticToken { get }

    var colorActionSelectedLight: ColorSemanticToken { get }
    var colorActionSelectedDark: ColorSemanticToken { get }

    var colorActionSupportEnabledLight: ColorSemanticToken { get }
    var colorActionSupportEnabledDark: ColorSemanticToken { get }

    var colorActionSupportFocusLight: ColorSemanticToken { get }
    var colorActionSupportFocusDark: ColorSemanticToken { get }

    var colorActionSupportHoverLight: ColorSemanticToken { get }
    var colorActionSupportHoverDark: ColorSemanticToken { get }

    var colorActionSupportLoadingLight: ColorSemanticToken { get }
    var colorActionSupportLoadingDark: ColorSemanticToken { get }

    var colorActionSupportPressedLight: ColorSemanticToken { get }
    var colorActionSupportPressedDark: ColorSemanticToken { get }

    var colorActionVisitedLight: ColorSemanticToken { get }
    var colorActionVisitedDark: ColorSemanticToken { get }

    // MARK: - Color - Always

    var colorAlwaysBlack: ColorSemanticToken { get }
    var colorAlwaysOnBlack: ColorSemanticToken { get }
    var colorAlwaysOnWhite: ColorSemanticToken { get }
    var colorAlwaysWhite: ColorSemanticToken { get }

    // MARK: - Color - Background

    var colorBgEmphasizedLight: ColorSemanticToken { get }
    var colorBgEmphasizedDark: ColorSemanticToken { get }

    var colorBgPrimaryLight: ColorSemanticToken { get }
    var colorBgPrimaryDark: ColorSemanticToken { get }

    var colorBgSecondaryLight: ColorSemanticToken { get }
    var colorBgSecondaryDark: ColorSemanticToken { get }

    var colorBgTertiaryLight: ColorSemanticToken { get }
    var colorBgTertiaryDark: ColorSemanticToken { get }

    // MARK: - Color - Borders

    var colorBorderBrandPrimaryLight: ColorSemanticToken { get }
    var colorBorderBrandPrimaryDark: ColorSemanticToken { get }

    var colorBorderDefaultLight: ColorSemanticToken { get }
    var colorBorderDefaultDark: ColorSemanticToken { get }

    var colorBorderEmphasizedLight: ColorSemanticToken { get }
    var colorBorderEmphasizedDark: ColorSemanticToken { get }

    var colorBorderFocusLight: ColorSemanticToken { get }
    var colorBorderFocusDark: ColorSemanticToken { get }

    var colorBorderFocusInsetLight: ColorSemanticToken { get }
    var colorBorderFocusInsetDark: ColorSemanticToken { get }

    var colorBorderMutedLight: ColorSemanticToken { get }
    var colorBorderMutedDark: ColorSemanticToken { get }

    var colorBorderOnBrandPrimaryLight: ColorSemanticToken { get }
    var colorBorderOnBrandPrimaryDark: ColorSemanticToken { get }

    // MARK: - Color - Content

    var colorContentBrandPrimaryLight: ColorSemanticToken { get }
    var colorContentBrandPrimaryDark: ColorSemanticToken { get }

    var colorContentDefaultLight: ColorSemanticToken { get }
    var colorContentDefaultDark: ColorSemanticToken { get }

    var colorContentDisabledLight: ColorSemanticToken { get }
    var colorContentDisabledDark: ColorSemanticToken { get }

    var colorContentMutedLight: ColorSemanticToken { get }
    var colorContentMutedDark: ColorSemanticToken { get }

    var colorContentOnActionSelectedLight: ColorSemanticToken { get }
    var colorContentOnActionSelectedDark: ColorSemanticToken { get }

    var colorContentOnActionDisabledLight: ColorSemanticToken { get }
    var colorContentOnActionDisabledDark: ColorSemanticToken { get }

    var colorContentOnActionEnabledLight: ColorSemanticToken { get }
    var colorContentOnActionEnabledDark: ColorSemanticToken { get }

    var colorContentOnActionFocusLight: ColorSemanticToken { get }
    var colorContentOnActionFocusDark: ColorSemanticToken { get }

    var colorContentOnActionHighlightedLight: ColorSemanticToken { get }
    var colorContentOnActionHighlightedDark: ColorSemanticToken { get }

    var colorContentOnActionHoverLight: ColorSemanticToken { get }
    var colorContentOnActionHoverDark: ColorSemanticToken { get }

    var colorContentOnActionLoadingLight: ColorSemanticToken { get }
    var colorContentOnActionLoadingDark: ColorSemanticToken { get }

    var colorContentOnActionPressedLight: ColorSemanticToken { get }
    var colorContentOnActionPressedDark: ColorSemanticToken { get }

    var colorContentOnBrandPrimaryLight: ColorSemanticToken { get }
    var colorContentOnBrandPrimaryDark: ColorSemanticToken { get }

    var colorContentOnOverlayEmphasizedLight: ColorSemanticToken { get }
    var colorContentOnOverlayEmphasizedDark: ColorSemanticToken { get }

    var colorContentOnStatusPositiveMutedLight: ColorSemanticToken { get }
    var colorContentOnStatusPositiveMutedDark: ColorSemanticToken { get }

    var colorContentOnStatusPositiveEmphasizedLight: ColorSemanticToken { get }
    var colorContentOnStatusPositiveEmphasizedDark: ColorSemanticToken { get }

    var colorContentOnStatusNeutralMutedLight: ColorSemanticToken { get }
    var colorContentOnStatusNeutralMutedDark: ColorSemanticToken { get }

    var colorContentOnStatusNeutralEmphasizedLight: ColorSemanticToken { get }
    var colorContentOnStatusNeutralEmphasizedDark: ColorSemanticToken { get }

    var colorContentOnStatusNegativeMutedLight: ColorSemanticToken { get }
    var colorContentOnStatusNegativeMutedDark: ColorSemanticToken { get }

    var colorContentOnStatusNegativeEmphasizedLight: ColorSemanticToken { get }
    var colorContentOnStatusNegativeEmphasizedDark: ColorSemanticToken { get }

    var colorContentOnStatusWarningMutedLight: ColorSemanticToken { get }
    var colorContentOnStatusWarningMutedDark: ColorSemanticToken { get }

    var colorContentOnStatusWarningEmphasizedLight: ColorSemanticToken { get }
    var colorContentOnStatusWarningEmphasizedDark: ColorSemanticToken { get }

    var colorContentOnStatusAccentMutedLight: ColorSemanticToken { get }
    var colorContentOnStatusAccentMutedDark: ColorSemanticToken { get }

    var colorContentOnStatusAccentEmphasizedLight: ColorSemanticToken { get }
    var colorContentOnStatusAccentEmphasizedDark: ColorSemanticToken { get }

    var colorContentStatusInfoLight: ColorSemanticToken { get }
    var colorContentStatusInfoDark: ColorSemanticToken { get }

    var colorContentStatusNegativeLight: ColorSemanticToken { get }
    var colorContentStatusNegativeDark: ColorSemanticToken { get }

    var colorContentStatusPositiveLight: ColorSemanticToken { get }
    var colorContentStatusPositiveDark: ColorSemanticToken { get }

    var colorContentStatusWarningLight: ColorSemanticToken { get }
    var colorContentStatusWarningDark: ColorSemanticToken { get }

    // MARK: - Color - Overlay

    var colorOverlayDefaultLight: ColorSemanticToken { get }
    var colorOverlayDefaultDark: ColorSemanticToken { get }

    var colorOverlayDragLight: ColorSemanticToken { get }
    var colorOverlayDragDark: ColorSemanticToken { get }

    var colorOverlayEmphasizedLight: ColorSemanticToken { get }
    var colorOverlayEmphasizedDark: ColorSemanticToken { get }

    var colorOverlayModalLight: ColorSemanticToken { get }
    var colorOverlayModalDark: ColorSemanticToken { get }

    // MARK: - Color - Surface

    var colorSurfaceBrandPrimaryLight: ColorSemanticToken { get }
    var colorSurfaceBrandPrimaryDark: ColorSemanticToken { get }

    var colorSurfaceStatusAccentEmphasizedLight: ColorSemanticToken { get }
    var colorSurfaceStatusAccentEmphasizedDark: ColorSemanticToken { get }

    var colorSurfaceStatusAccentMutedLight: ColorSemanticToken { get }
    var colorSurfaceStatusAccentMutedDark: ColorSemanticToken { get }

    var colorSurfaceStatusInfoEmphasizedLight: ColorSemanticToken { get }
    var colorSurfaceStatusInfoEmphasizedDark: ColorSemanticToken { get }

    var colorSurfaceStatusInfoMutedLight: ColorSemanticToken { get }
    var colorSurfaceStatusInfoMutedDark: ColorSemanticToken { get }

    var colorSurfaceStatusNegativeEmphasizedLight: ColorSemanticToken { get }
    var colorSurfaceStatusNegativeEmphasizedDark: ColorSemanticToken { get }

    var colorSurfaceStatusNegativeMutedLight: ColorSemanticToken { get }
    var colorSurfaceStatusNegativeMutedDark: ColorSemanticToken { get }

    var colorSurfaceStatusNeutralEmphasizedLight: ColorSemanticToken { get }
    var colorSurfaceStatusNeutralEmphasizedDark: ColorSemanticToken { get }

    var colorSurfaceStatusNeutralMutedLight: ColorSemanticToken { get }
    var colorSurfaceStatusNeutralMutedDark: ColorSemanticToken { get }

    var colorSurfaceStatusPositiveEmphasizedLight: ColorSemanticToken { get }
    var colorSurfaceStatusPositiveEmphasizedDark: ColorSemanticToken { get }

    var colorSurfaceStatusPositiveMutedLight: ColorSemanticToken { get }
    var colorSurfaceStatusPositiveMutedDark: ColorSemanticToken { get }

    var colorSurfaceStatusWarningEmphasizedLight: ColorSemanticToken { get }
    var colorSurfaceStatusWarningEmphasizedDark: ColorSemanticToken { get }

    var colorSurfaceStatusWarningMutedLight: ColorSemanticToken { get }
    var colorSurfaceStatusWarningMutedDark: ColorSemanticToken { get }

    // MARK: - Color - Decorative

    var colorDecorativeAccent1Default: ColorSemanticToken { get }
    var colorDecorativeAccent1Emphasized: ColorSemanticToken { get }
    var colorDecorativeAccent1Muted: ColorSemanticToken { get }
    var colorDecorativeAccent2Default: ColorSemanticToken { get }
    var colorDecorativeAccent2Emphasized: ColorSemanticToken { get }
    var colorDecorativeAccent2Muted: ColorSemanticToken { get }
    var colorDecorativeAccent3Default: ColorSemanticToken { get }
    var colorDecorativeAccent3Emphasized: ColorSemanticToken { get }
    var colorDecorativeAccent3Muted: ColorSemanticToken { get }
    var colorDecorativeAccent4Default: ColorSemanticToken { get }
    var colorDecorativeAccent4Emphasized: ColorSemanticToken { get }
    var colorDecorativeAccent4Muted: ColorSemanticToken { get }
    var colorDecorativeAccent5Default: ColorSemanticToken { get }
    var colorDecorativeAccent5Emphasized: ColorSemanticToken { get }
    var colorDecorativeAccent5Muted: ColorSemanticToken { get }

    var colorDecorativeBrandPrimary: ColorSemanticToken { get }
    var colorDecorativeBrandSecondary: ColorSemanticToken { get }
    var colorDecorativeBrandTertiary: ColorSemanticToken { get }
    var colorDecorativeSkinTint100: ColorSemanticToken { get }
    var colorDecorativeSkinTint200: ColorSemanticToken { get }
    var colorDecorativeSkinTint300: ColorSemanticToken { get }
    var colorDecorativeSkinTint400: ColorSemanticToken { get }
    var colorDecorativeSkinTint500: ColorSemanticToken { get }
    var colorDecorativeSkinTint600: ColorSemanticToken { get }
    var colorDecorativeSkinTint700: ColorSemanticToken { get }
    var colorDecorativeSkinTint800: ColorSemanticToken { get }
    var colorDecorativeSkinTint900: ColorSemanticToken { get }

    var colorDecorativeNeutralEmphasizedHigher: ColorSemanticToken { get }
    var colorDecorativeNeutralEmphasizedLow: ColorSemanticToken { get }
    var colorDecorativeNeutralEmphasizedLower: ColorSemanticToken { get }
    var colorDecorativeNeutralEmphasizedLowest: ColorSemanticToken { get }
    var colorDecorativeNeutralMutedHigh: ColorSemanticToken { get }
    var colorDecorativeNeutralMutedHigher: ColorSemanticToken { get }
    var colorDecorativeNeutralMutedHighest: ColorSemanticToken { get }
    var colorDecorativeNeutralMutedLow: ColorSemanticToken { get }
    var colorDecorativeNeutralMutedLower: ColorSemanticToken { get }
    var colorDecorativeNeutralMutedLowest: ColorSemanticToken { get }
    var colorDecorativeNeutralMutedMedium: ColorSemanticToken { get }

    // MARK: - Color - Chart

    var colorChartBorderLight: ColorSemanticToken { get }
    var colorChartBorderDark: ColorSemanticToken { get }

    var colorChartBorderContrastLight: ColorSemanticToken { get }
    var colorChartBorderContrastDark: ColorSemanticToken { get }

    var colorChartCategoricalTier1Light: ColorSemanticToken { get }
    var colorChartCategoricalTier1Dark: ColorSemanticToken { get }

    var colorChartCategoricalTier2Light: ColorSemanticToken { get }
    var colorChartCategoricalTier2Dark: ColorSemanticToken { get }

    var colorChartCategoricalTier3Light: ColorSemanticToken { get }
    var colorChartCategoricalTier3Dark: ColorSemanticToken { get }

    var colorChartCategoricalTier4Light: ColorSemanticToken { get }
    var colorChartCategoricalTier4Dark: ColorSemanticToken { get }

    var colorChartCategoricalTier5Light: ColorSemanticToken { get }
    var colorChartCategoricalTier5Dark: ColorSemanticToken { get }

    var colorChartCategoricalTier6Light: ColorSemanticToken { get }
    var colorChartCategoricalTier6Dark: ColorSemanticToken { get }

    var colorChartCategoricalTier7Light: ColorSemanticToken { get }
    var colorChartCategoricalTier7Dark: ColorSemanticToken { get }

    var colorChartCategoricalTier8Light: ColorSemanticToken { get }
    var colorChartCategoricalTier8Dark: ColorSemanticToken { get }

    var colorChartCategoricalTier9Light: ColorSemanticToken { get }
    var colorChartCategoricalTier9Dark: ColorSemanticToken { get }

    var colorChartCategoricalTier10Light: ColorSemanticToken { get }
    var colorChartCategoricalTier10Dark: ColorSemanticToken { get }

    var colorChartFunctionalInfoLight: ColorSemanticToken { get }
    var colorChartFunctionalInfoDark: ColorSemanticToken { get }

    var colorChartFunctionalNegativeLight: ColorSemanticToken { get }
    var colorChartFunctionalNegativeDark: ColorSemanticToken { get }

    var colorChartFunctionalPositiveLight: ColorSemanticToken { get }
    var colorChartFunctionalPositiveDark: ColorSemanticToken { get }

    var colorChartFunctionalWarningLight: ColorSemanticToken { get }
    var colorChartFunctionalWarningDark: ColorSemanticToken { get }

    var colorChartGridlinesLight: ColorSemanticToken { get }
    var colorChartGridlinesDark: ColorSemanticToken { get }

    var colorChartHighlightLight: ColorSemanticToken { get }
    var colorChartHighlightDark: ColorSemanticToken { get }

    var colorChartNeutralLight: ColorSemanticToken { get }
    var colorChartNeutralDark: ColorSemanticToken { get }

    // MARK: - Color - Repository

    var colorRepositoryAccentDefault: ColorSemanticToken { get }
    var colorRepositoryAccentHighest: ColorSemanticToken { get }
    var colorRepositoryAccentLow: ColorSemanticToken { get }
    var colorRepositoryAccentLowest: ColorSemanticToken { get }
    var colorRepositoryInfoDefault: ColorSemanticToken { get }
    var colorRepositoryInfoHighest: ColorSemanticToken { get }
    var colorRepositoryInfoLow: ColorSemanticToken { get }
    var colorRepositoryInfoLowest: ColorSemanticToken { get }
    var colorRepositoryNegativeDefault: ColorSemanticToken { get }
    var colorRepositoryNegativeHigh: ColorSemanticToken { get }
    var colorRepositoryNegativeHigher: ColorSemanticToken { get }
    var colorRepositoryNegativeHighest: ColorSemanticToken { get }
    var colorRepositoryNegativeLow: ColorSemanticToken { get }
    var colorRepositoryNegativeLower: ColorSemanticToken { get }
    var colorRepositoryNegativeLowest: ColorSemanticToken { get }
    var colorRepositoryNeutralEmphasizedBlack: ColorSemanticToken { get }
    var colorRepositoryNeutralEmphasizedHigh: ColorSemanticToken { get }
    var colorRepositoryNeutralEmphasizedHigher: ColorSemanticToken { get }
    var colorRepositoryNeutralEmphasizedHighest: ColorSemanticToken { get }
    var colorRepositoryNeutralEmphasizedMedium: ColorSemanticToken { get }
    var colorRepositoryNeutralMutedLower: ColorSemanticToken { get }
    var colorRepositoryNeutralMutedLowest: ColorSemanticToken { get }
    var colorRepositoryNeutralMutedWhite: ColorSemanticToken { get }
    var colorRepositoryOpacityBlackHigh: ColorSemanticToken { get }
    var colorRepositoryOpacityBlackHigher: ColorSemanticToken { get }
    var colorRepositoryOpacityBlackHighest: ColorSemanticToken { get }
    var colorRepositoryOpacityBlackLow: ColorSemanticToken { get }
    var colorRepositoryOpacityBlackLower: ColorSemanticToken { get }
    var colorRepositoryOpacityBlackLowest: ColorSemanticToken { get }
    var colorRepositoryOpacityBlackMedium: ColorSemanticToken { get }
    var colorRepositoryOpacityBlackMediumLow: ColorSemanticToken { get }
    var colorRepositoryOpacityBlackMediumHigh: ColorSemanticToken { get }
    var colorRepositoryOpacityBlackTransparent: ColorSemanticToken { get }
    var colorRepositoryOpacityInfo: ColorSemanticToken { get }
    var colorRepositoryOpacityNegative: ColorSemanticToken { get }
    var colorRepositoryOpacityPositive: ColorSemanticToken { get }
    var colorRepositoryOpacityWarning: ColorSemanticToken { get }
    var colorRepositoryOpacityWhiteHigh: ColorSemanticToken { get }
    var colorRepositoryOpacityWhiteHigher: ColorSemanticToken { get }
    var colorRepositoryOpacityWhiteHighest: ColorSemanticToken { get }
    var colorRepositoryOpacityWhiteMedium: ColorSemanticToken { get }
    var colorRepositoryOpacityWhiteMediumLow: ColorSemanticToken { get }
    var colorRepositoryOpacityWhiteLow: ColorSemanticToken { get }
    var colorRepositoryOpacityWhiteLower: ColorSemanticToken { get }
    var colorRepositoryOpacityWhiteLowest: ColorSemanticToken { get }
    var colorRepositoryOpacityWhiteTransparent: ColorSemanticToken { get }
    var colorRepositoryOpacityPrimaryLow: ColorSemanticToken { get }
    var colorRepositoryOpacityPrimaryLower: ColorSemanticToken { get }
    var colorRepositoryOpacityPrimaryLowest: ColorSemanticToken { get }
    var colorRepositoryOpacityPrimaryMedium: ColorSemanticToken { get }
    var colorRepositoryOpacityPrimaryHigh: ColorSemanticToken { get }
    var colorRepositoryOpacityPrimaryHigher: ColorSemanticToken { get }
    var colorRepositoryOpacityPrimaryHighest: ColorSemanticToken { get }
    var colorRepositoryPositiveDefault: ColorSemanticToken { get }
    var colorRepositoryPositiveHigh: ColorSemanticToken { get }
    var colorRepositoryPositiveHighest: ColorSemanticToken { get }
    var colorRepositoryPositiveLow: ColorSemanticToken { get }
    var colorRepositoryPositiveLowest: ColorSemanticToken { get }
    var colorRepositoryPrimaryDefault: ColorSemanticToken { get }
    var colorRepositoryPrimaryLow: ColorSemanticToken { get }
    var colorRepositoryWarningDefault: ColorSemanticToken { get }
    var colorRepositoryWarningHighest: ColorSemanticToken { get }
    var colorRepositoryWarningLow: ColorSemanticToken { get }
    var colorRepositoryWarningLowest: ColorSemanticToken { get }
}

// swiftlint:enable missing_docs
// swiftlint:enable identifier_name
