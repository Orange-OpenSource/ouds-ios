//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
// 
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
// 
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System 
//

// [File not generated by the tokenator]
// WARNING: Not synchronized anymore with the Figjam / Figma by developers team
// Create an issue for update https://github.com/Orange-OpenSource/ouds-ios/issues/new?template=token_update.yml

// swiftlint:disable missing_docs
// swiftlint:disable identifier_name
// swiftlint:disable file_length

/// This is a group of semantic tokens for **colors**.
/// It defines all ``ColorSemanticToken``  a theme must have.
/// These tokens are then gathered inside ``MultipleColorSemanticTokens`` defined in ``ColorMultipleSemanticTokens``.
/// Any color semantic token must be declared there (except ``MultipleColorSemanticTokens``)
public protocol ColorSemanticTokens {

    // MARK: - Light values

    // MARK: Semantic token - Colors - Background

    var colorBgPrimaryLight: ColorSemanticToken { get }

    var colorBgSecondaryLight: ColorSemanticToken { get }

    var colorBgTertiaryLight: ColorSemanticToken { get }

    var colorBgEmphasizedLight: ColorSemanticToken { get }

    var colorBgBrandPrimaryLight: ColorSemanticToken { get }

    var colorBgStatusNeutralLight: ColorSemanticToken { get }

    var colorBgStatusNeutralOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorBgStatusPositiveMutedLight: ColorSemanticToken { get }

    var colorBgStatusPositiveMutedOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorBgStatusPositiveEmphasizedLight: ColorSemanticToken { get }

    var colorBgStatusInfoMutedLight: ColorSemanticToken { get }

    var colorBgStatusInfoMutedOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorBgStatusInfoEmphasizedLight: ColorSemanticToken { get }

    var colorBgStatusWarningMutedLight: ColorSemanticToken { get }

    var colorBgStatusWarningMutedOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorBgStatusWarningEmphasizedLight: ColorSemanticToken { get }

    var colorBgStatusNegativeMutedLight: ColorSemanticToken { get }

    var colorBgStatusNegativeMutedOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorBgStatusNegativeEmphasizedLight: ColorSemanticToken { get }

    var colorBgStatusAccentMutedLight: ColorSemanticToken { get }

    var colorBgStatusAccentMutedOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorBgStatusAccentEmphasizedLight: ColorSemanticToken { get }

    // MARK: Semantic token - Colors - Content - Status

    var colorContentDefaultLight: ColorSemanticToken { get }

    var colorContentDefaultOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorContentMutedLight: ColorSemanticToken { get }

    var colorContentMutedOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorContentDisabledLight: ColorSemanticToken { get }

    var colorContentDisabledOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorContentBrandPrimaryLight: ColorSemanticToken { get }

    var colorContentBrandPrimaryOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorContentStatusPositiveLight: ColorSemanticToken { get }

    var colorContentStatusInfoLight: ColorSemanticToken { get }

    var colorContentStatusWarningLight: ColorSemanticToken { get }

    var colorContentStatusNegativeLight: ColorSemanticToken { get }

    var colorContentOnActionDisabledLight: ColorSemanticToken { get }

    var colorContentOnActionDisabledOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorContentOnActionNegativeLight: ColorSemanticToken { get }

    var colorContentOnActionPrimaryEnabledLight: ColorSemanticToken { get }

    var colorContentOnActionPrimaryEnabledOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorContentOnActionPrimaryFocusLight: ColorSemanticToken { get }

    var colorContentOnActionPrimaryFocusOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorContentOnActionPrimaryHoverLight: ColorSemanticToken { get }

    var colorContentOnActionPrimaryHoverOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorContentOnActionPrimaryLoadingLight: ColorSemanticToken { get }

    var colorContentOnActionPrimaryLoadingOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorContentOnActionPrimaryPressedLight: ColorSemanticToken { get }

    var colorContentOnActionPrimaryPressedOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorContentOnBrandPrimaryLight: ColorSemanticToken { get }

    var colorContentOnStatusAccentEmphasizedLight: ColorSemanticToken { get }

    var colorContentOnStatusAccentMutedLight: ColorSemanticToken { get }

    var colorContentOnStatusAccentMutedOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorContentOnStatusInfoEmphasizedLight: ColorSemanticToken { get }

    var colorContentOnStatusInfoMutedLight: ColorSemanticToken { get }

    var colorContentOnStatusInfoMutedOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorContentOnStatusNegativeEmphasizedLight: ColorSemanticToken { get }

    var colorContentOnStatusNegativeMutedLight: ColorSemanticToken { get }

    var colorContentOnStatusNegativeMutedOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorContentOnStatusPositiveEmphasizedLight: ColorSemanticToken { get }

    var colorContentOnStatusPositiveMutedLight: ColorSemanticToken { get }

    var colorContentOnStatusPositiveMutedOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorContentOnStatusWarningEmphasizedLight: ColorSemanticToken { get }

    var colorContentOnStatusWarningMutedLight: ColorSemanticToken { get }

    var colorContentOnStatusWarningMutedOnBgEmphasizedLight: ColorSemanticToken { get }

    // MARK: Semantic token - Colors - Border

    var colorBorderDefaultLight: ColorSemanticToken { get }

    var colorBorderDefaultOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorBorderEmphasizedLight: ColorSemanticToken { get }

    var colorBorderEmphasizedOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorBorderFocusLight: ColorSemanticToken { get }

    var colorBorderFocusInsetLight: ColorSemanticToken { get }

    var colorBorderFocusInsetOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorBorderFocusOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorBorderBrandPrimaryOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorBorderBrandPrimaryLight: ColorSemanticToken { get }

    var colorBorderOnBrandPrimaryLight: ColorSemanticToken { get }

    // MARK: Semantic token - Colors - Action

    var colorActionSelectedLight: ColorSemanticToken { get }

    var colorActionSelectedOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorActionDisabledLight: ColorSemanticToken { get }

    var colorActionDisabledOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorActionVisitedLight: ColorSemanticToken { get }

    var colorActionPrimaryEnabledLight: ColorSemanticToken { get }

    var colorActionPrimaryEnabledOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorActionPrimaryHoverLight: ColorSemanticToken { get }

    var colorActionPrimaryHoverOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorActionPrimaryPressedLight: ColorSemanticToken { get }

    var colorActionPrimaryPressedOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorActionPrimaryLoadingLight: ColorSemanticToken { get }

    var colorActionPrimaryLoadingOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorActionPrimaryFocusLight: ColorSemanticToken { get }

    var colorActionPrimaryFocusOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorActionSecondaryEnabledLight: ColorSemanticToken { get }

    var colorActionSecondaryEnabledOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorActionSecondaryHoverLight: ColorSemanticToken { get }

    var colorActionSecondaryHoverOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorActionSecondaryPressedLight: ColorSemanticToken { get }

    var colorActionSecondaryPressedOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorActionSecondaryLoadingLight: ColorSemanticToken { get }

    var colorActionSecondaryLoadingOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorActionSecondaryFocusLight: ColorSemanticToken { get }

    var colorActionSecondaryFocusOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorActionNegativeEnabledLight: ColorSemanticToken { get }

    var colorActionNegativeHoverLight: ColorSemanticToken { get }

    var colorActionNegativePressedLight: ColorSemanticToken { get }

    var colorActionNegativeLoadingLight: ColorSemanticToken { get }

    var colorActionNegativeFocusLight: ColorSemanticToken { get }

    // MARK: Semantic token - Colors - Always

    var colorAlwaysBlackLight: ColorSemanticToken { get }

    var colorAlwaysWhiteLight: ColorSemanticToken { get }

    var colorAlwaysWarningLight: ColorSemanticToken { get }

    var colorAlwaysNegativeLight: ColorSemanticToken { get }

    var colorAlwaysPositiveLight: ColorSemanticToken { get }

    var colorAlwaysInfoLight: ColorSemanticToken { get }

    var colorAlwaysAccentLight: ColorSemanticToken { get }

    var colorAlwaysOnAccentLight: ColorSemanticToken { get }

    var colorAlwaysOnBlackLight: ColorSemanticToken { get }

    var colorAlwaysOnInfoLight: ColorSemanticToken { get }

    var colorAlwaysOnNegativeLight: ColorSemanticToken { get }

    var colorAlwaysOnPositiveLight: ColorSemanticToken { get }

    var colorAlwaysOnWarningLight: ColorSemanticToken { get }

    var colorAlwaysOnWhiteLight: ColorSemanticToken { get }

    // MARK: Semantic token - Colors - Transparent

    var colorTransparentDefaultLight: ColorSemanticToken { get }

    // MARK: Semantic token - Colors - Elevation

    var colorElevationRaisedLight: ColorSemanticToken { get }

    var colorElevationRaisedOnBgSecondaryLight: ColorSemanticToken { get }

    var colorElevationRaisedOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorElevationDragLight: ColorSemanticToken { get }

    var colorElevationDragOnBgSecondaryLight: ColorSemanticToken { get }

    var colorElevationDragOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorElevationOverlayDefaultLight: ColorSemanticToken { get }

    var colorElevationOverlayDefaultOnBgSecondaryLight: ColorSemanticToken { get }

    var colorElevationOverlayDefaultOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorElevationOverlayEmphasizedLight: ColorSemanticToken { get }

    var colorElevationOverlayEmphasizedOnBgSecondaryLight: ColorSemanticToken { get }

    var colorElevationOverlayEmphasizedOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorElevationModalLight: ColorSemanticToken { get }

    // MARK: Semantic token - Colors - Decorative

    var colorDecorativeBrandPrimaryLight: ColorSemanticToken { get }

    var colorDecorativeBrandSecondaryLight: ColorSemanticToken { get }

    var colorDecorativeBrandTertiaryLight: ColorSemanticToken { get }

    var colorDecorativeNeutralMutedLight: ColorSemanticToken { get }

    var colorDecorativeNeutralDefaultLight: ColorSemanticToken { get }

    var colorDecorativeNeutralEmphasizedLight: ColorSemanticToken { get }

    var colorDecorativeAccent1MutedLight: ColorSemanticToken { get }

    var colorDecorativeAccent1DefaultLight: ColorSemanticToken { get }

    var colorDecorativeAccent1EmphasizedLight: ColorSemanticToken { get }

    var colorDecorativeAccent2MutedLight: ColorSemanticToken { get }

    var colorDecorativeAccent2DefaultLight: ColorSemanticToken { get }

    var colorDecorativeAccent2EmphasizedLight: ColorSemanticToken { get }

    var colorDecorativeAccent3MutedLight: ColorSemanticToken { get }

    var colorDecorativeAccent3DefaultLight: ColorSemanticToken { get }

    var colorDecorativeAccent3EmphasizedLight: ColorSemanticToken { get }

    var colorDecorativeAccent4MutedLight: ColorSemanticToken { get }

    var colorDecorativeAccent4DefaultLight: ColorSemanticToken { get }

    var colorDecorativeAccent4EmphasizedLight: ColorSemanticToken { get }

    var colorDecorativeAccent5MutedLight: ColorSemanticToken { get }

    var colorDecorativeAccent5DefaultLight: ColorSemanticToken { get }

    var colorDecorativeAccent5EmphasizedLight: ColorSemanticToken { get }

    var colorDecorativeSkinTint100Light: ColorSemanticToken { get }

    var colorDecorativeSkinTint200Light: ColorSemanticToken { get }

    var colorDecorativeSkinTint300Light: ColorSemanticToken { get }

    var colorDecorativeSkinTint400Light: ColorSemanticToken { get }

    var colorDecorativeSkinTint500Light: ColorSemanticToken { get }

    var colorDecorativeSkinTint600Light: ColorSemanticToken { get }

    var colorDecorativeSkinTint700Light: ColorSemanticToken { get }

    var colorDecorativeSkinTint800Light: ColorSemanticToken { get }

    var colorDecorativeSkinTint900Light: ColorSemanticToken { get }

    // MARK: Semantic token - Colors - Chart

    var colorChartCategoricalNeutralLight: ColorSemanticToken { get }

    var colorChartCategoricalBrandLight: ColorSemanticToken { get }

    var colorChartCategoricalPositiveLight: ColorSemanticToken { get }

    var colorChartCategoricalNegativeLight: ColorSemanticToken { get }

    var colorChartCategoricalTier1Light: ColorSemanticToken { get }

    var colorChartCategoricalTier2Light: ColorSemanticToken { get }

    var colorChartCategoricalTier3Light: ColorSemanticToken { get }

    var colorChartCategoricalTier4Light: ColorSemanticToken { get }

    var colorChartCategoricalTier5Light: ColorSemanticToken { get }

    var colorChartCategoricalTier6Light: ColorSemanticToken { get }

    var colorChartCategoricalTier7Light: ColorSemanticToken { get }

    var colorChartCategoricalTier8Light: ColorSemanticToken { get }

    var colorChartCategoricalTier9Light: ColorSemanticToken { get }

    var colorChartCategoricalTier10Light: ColorSemanticToken { get }

    var colorChartSequentialAccent1Tint100Light: ColorSemanticToken { get }

    var colorChartSequentialAccent1Tint200Light: ColorSemanticToken { get }

    var colorChartSequentialAccent1Tint300Light: ColorSemanticToken { get }

    var colorChartSequentialAccent1Tint400Light: ColorSemanticToken { get }

    var colorChartSequentialAccent1Tint500Light: ColorSemanticToken { get }

    var colorChartSequentialAccent1Tint600Light: ColorSemanticToken { get }

    var colorChartSequentialAccent1Tint700Light: ColorSemanticToken { get }

    var colorChartSequentialAccent1Tint800Light: ColorSemanticToken { get }

    var colorChartSequentialAccent1Tint900Light: ColorSemanticToken { get }

    var colorChartSequentialAccent2Tint100Light: ColorSemanticToken { get }

    var colorChartSequentialAccent2Tint200Light: ColorSemanticToken { get }

    var colorChartSequentialAccent2Tint300Light: ColorSemanticToken { get }

    var colorChartSequentialAccent2Tint400Light: ColorSemanticToken { get }

    var colorChartSequentialAccent2Tint500Light: ColorSemanticToken { get }

    var colorChartSequentialAccent2Tint600Light: ColorSemanticToken { get }

    var colorChartSequentialAccent2Tint700Light: ColorSemanticToken { get }

    var colorChartSequentialAccent2Tint800Light: ColorSemanticToken { get }

    var colorChartSequentialAccent2Tint900Light: ColorSemanticToken { get }

    var colorChartSequentialAccent3Tint100Light: ColorSemanticToken { get }

    var colorChartSequentialAccent3Tint200Light: ColorSemanticToken { get }

    var colorChartSequentialAccent3Tint300Light: ColorSemanticToken { get }

    var colorChartSequentialAccent3Tint400Light: ColorSemanticToken { get }

    var colorChartSequentialAccent3Tint500Light: ColorSemanticToken { get }

    var colorChartSequentialAccent3Tint600Light: ColorSemanticToken { get }

    var colorChartSequentialAccent3Tint700Light: ColorSemanticToken { get }

    var colorChartSequentialAccent3Tint800Light: ColorSemanticToken { get }

    var colorChartSequentialAccent3Tint900Light: ColorSemanticToken { get }

    var colorChartSequentialAccent4Tint100Light: ColorSemanticToken { get }

    var colorChartSequentialAccent4Tint200Light: ColorSemanticToken { get }

    var colorChartSequentialAccent4Tint300Light: ColorSemanticToken { get }

    var colorChartSequentialAccent4Tint400Light: ColorSemanticToken { get }

    var colorChartSequentialAccent4Tint500Light: ColorSemanticToken { get }

    var colorChartSequentialAccent4Tint600Light: ColorSemanticToken { get }

    var colorChartSequentialAccent4Tint700Light: ColorSemanticToken { get }

    var colorChartSequentialAccent4Tint800Light: ColorSemanticToken { get }

    var colorChartSequentialAccent4Tint900Light: ColorSemanticToken { get }

    var colorChartSequentialAccent5Tint100Light: ColorSemanticToken { get }

    var colorChartSequentialAccent5Tint200Light: ColorSemanticToken { get }

    var colorChartSequentialAccent5Tint300Light: ColorSemanticToken { get }

    var colorChartSequentialAccent5Tint400Light: ColorSemanticToken { get }

    var colorChartSequentialAccent5Tint500Light: ColorSemanticToken { get }

    var colorChartSequentialAccent5Tint600Light: ColorSemanticToken { get }

    var colorChartSequentialAccent5Tint700Light: ColorSemanticToken { get }

    var colorChartSequentialAccent5Tint800Light: ColorSemanticToken { get }

    var colorChartSequentialAccent5Tint900Light: ColorSemanticToken { get }

    // MARK: - Semantic token - Colors - Gradient

    var colorGradientSkeletonMiddleLight: ColorSemanticToken { get }

    var colorGradientSkeletonMiddleOnBgEmphasizedLight: ColorSemanticToken { get }

    var colorGradientSkeletonStartEndLight: ColorSemanticToken { get }

    var colorGradientSkeletonStartEndOnBgEmphasizedLight: ColorSemanticToken { get }

    // MARK: - Dark values

    // MARK: Semantic token - Colors - Background

    var colorBgPrimaryDark: ColorSemanticToken { get }

    var colorBgSecondaryDark: ColorSemanticToken { get }

    var colorBgTertiaryDark: ColorSemanticToken { get }

    var colorBgEmphasizedDark: ColorSemanticToken { get }

    var colorBgBrandPrimaryDark: ColorSemanticToken { get }

    var colorBgStatusNeutralDark: ColorSemanticToken { get }

    var colorBgStatusNeutralOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorBgStatusPositiveMutedDark: ColorSemanticToken { get }

    var colorBgStatusPositiveMutedOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorBgStatusPositiveEmphasizedDark: ColorSemanticToken { get }

    var colorBgStatusInfoMutedDark: ColorSemanticToken { get }

    var colorBgStatusInfoMutedOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorBgStatusInfoEmphasizedDark: ColorSemanticToken { get }

    var colorBgStatusWarningMutedDark: ColorSemanticToken { get }

    var colorBgStatusWarningMutedOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorBgStatusWarningEmphasizedDark: ColorSemanticToken { get }

    var colorBgStatusNegativeMutedDark: ColorSemanticToken { get }

    var colorBgStatusNegativeMutedOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorBgStatusNegativeEmphasizedDark: ColorSemanticToken { get }

    var colorBgStatusAccentMutedDark: ColorSemanticToken { get }

    var colorBgStatusAccentMutedOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorBgStatusAccentEmphasizedDark: ColorSemanticToken { get }

    // MARK: Semantic token - Colors - Content - Status

    var colorContentDefaultDark: ColorSemanticToken { get }

    var colorContentDefaultOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorContentMutedDark: ColorSemanticToken { get }

    var colorContentMutedOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorContentDisabledDark: ColorSemanticToken { get }

    var colorContentDisabledOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorContentBrandPrimaryDark: ColorSemanticToken { get }

    var colorContentBrandPrimaryOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorContentStatusPositiveDark: ColorSemanticToken { get }

    var colorContentStatusInfoDark: ColorSemanticToken { get }

    var colorContentStatusWarningDark: ColorSemanticToken { get }

    var colorContentStatusNegativeDark: ColorSemanticToken { get }

    var colorContentOnActionDisabledDark: ColorSemanticToken { get }

    var colorContentOnActionDisabledOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorContentOnActionNegativeDark: ColorSemanticToken { get }

    var colorContentOnActionPrimaryEnabledDark: ColorSemanticToken { get }

    var colorContentOnActionPrimaryEnabledOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorContentOnActionPrimaryFocusDark: ColorSemanticToken { get }

    var colorContentOnActionPrimaryFocusOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorContentOnActionPrimaryHoverDark: ColorSemanticToken { get }

    var colorContentOnActionPrimaryHoverOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorContentOnActionPrimaryLoadingDark: ColorSemanticToken { get }

    var colorContentOnActionPrimaryLoadingOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorContentOnActionPrimaryPressedDark: ColorSemanticToken { get }

    var colorContentOnActionPrimaryPressedOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorContentOnBrandPrimaryDark: ColorSemanticToken { get }

    var colorContentOnStatusAccentEmphasizedDark: ColorSemanticToken { get }

    var colorContentOnStatusAccentMutedDark: ColorSemanticToken { get }

    var colorContentOnStatusAccentMutedOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorContentOnStatusInfoEmphasizedDark: ColorSemanticToken { get }

    var colorContentOnStatusInfoMutedDark: ColorSemanticToken { get }

    var colorContentOnStatusInfoMutedOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorContentOnStatusNegativeEmphasizedDark: ColorSemanticToken { get }

    var colorContentOnStatusNegativeMutedDark: ColorSemanticToken { get }

    var colorContentOnStatusNegativeMutedOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorContentOnStatusPositiveEmphasizedDark: ColorSemanticToken { get }

    var colorContentOnStatusPositiveMutedDark: ColorSemanticToken { get }

    var colorContentOnStatusPositiveMutedOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorContentOnStatusWarningEmphasizedDark: ColorSemanticToken { get }

    var colorContentOnStatusWarningMutedDark: ColorSemanticToken { get }

    var colorContentOnStatusWarningMutedOnBgEmphasizedDark: ColorSemanticToken { get }

    // MARK: Semantic token - Colors - Border

    var colorBorderDefaultDark: ColorSemanticToken { get }

    var colorBorderDefaultOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorBorderEmphasizedDark: ColorSemanticToken { get }

    var colorBorderEmphasizedOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorBorderFocusDark: ColorSemanticToken { get }

    var colorBorderFocusInsetDark: ColorSemanticToken { get }

    var colorBorderFocusInsetOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorBorderFocusOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorBorderBrandPrimaryOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorBorderBrandPrimaryDark: ColorSemanticToken { get }

    var colorBorderOnBrandPrimaryDark: ColorSemanticToken { get }

    // MARK: Semantic token - Colors - Action

    var colorActionSelectedDark: ColorSemanticToken { get }

    var colorActionSelectedOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorActionDisabledDark: ColorSemanticToken { get }

    var colorActionDisabledOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorActionVisitedDark: ColorSemanticToken { get }

    var colorActionPrimaryEnabledDark: ColorSemanticToken { get }

    var colorActionPrimaryEnabledOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorActionPrimaryHoverDark: ColorSemanticToken { get }

    var colorActionPrimaryHoverOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorActionPrimaryPressedDark: ColorSemanticToken { get }

    var colorActionPrimaryPressedOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorActionPrimaryLoadingDark: ColorSemanticToken { get }

    var colorActionPrimaryLoadingOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorActionPrimaryFocusDark: ColorSemanticToken { get }

    var colorActionPrimaryFocusOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorActionSecondaryEnabledDark: ColorSemanticToken { get }

    var colorActionSecondaryEnabledOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorActionSecondaryHoverDark: ColorSemanticToken { get }

    var colorActionSecondaryHoverOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorActionSecondaryPressedDark: ColorSemanticToken { get }

    var colorActionSecondaryPressedOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorActionSecondaryLoadingDark: ColorSemanticToken { get }

    var colorActionSecondaryLoadingOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorActionSecondaryFocusDark: ColorSemanticToken { get }

    var colorActionSecondaryFocusOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorActionNegativeEnabledDark: ColorSemanticToken { get }

    var colorActionNegativeHoverDark: ColorSemanticToken { get }

    var colorActionNegativePressedDark: ColorSemanticToken { get }

    var colorActionNegativeLoadingDark: ColorSemanticToken { get }

    var colorActionNegativeFocusDark: ColorSemanticToken { get }

    // MARK: Semantic token - Colors - Always

    var colorAlwaysBlackDark: ColorSemanticToken { get }

    var colorAlwaysWhiteDark: ColorSemanticToken { get }

    var colorAlwaysWarningDark: ColorSemanticToken { get }

    var colorAlwaysNegativeDark: ColorSemanticToken { get }

    var colorAlwaysPositiveDark: ColorSemanticToken { get }

    var colorAlwaysInfoDark: ColorSemanticToken { get }

    var colorAlwaysAccentDark: ColorSemanticToken { get }

    var colorAlwaysOnAccentDark: ColorSemanticToken { get }

    var colorAlwaysOnBlackDark: ColorSemanticToken { get }

    var colorAlwaysOnInfoDark: ColorSemanticToken { get }

    var colorAlwaysOnNegativeDark: ColorSemanticToken { get }

    var colorAlwaysOnPositiveDark: ColorSemanticToken { get }

    var colorAlwaysOnWarningDark: ColorSemanticToken { get }

    var colorAlwaysOnWhiteDark: ColorSemanticToken { get }

    // MARK: Semantic token - Colors - Transparent

    var colorTransparentDefaultDark: ColorSemanticToken { get }

    // MARK: Semantic token - Colors - Elevation

    var colorElevationRaisedDark: ColorSemanticToken { get }

    var colorElevationRaisedOnBgSecondaryDark: ColorSemanticToken { get }

    var colorElevationRaisedOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorElevationDragDark: ColorSemanticToken { get }

    var colorElevationDragOnBgSecondaryDark: ColorSemanticToken { get }

    var colorElevationDragOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorElevationOverlayDefaultDark: ColorSemanticToken { get }

    var colorElevationOverlayDefaultOnBgSecondaryDark: ColorSemanticToken { get }

    var colorElevationOverlayDefaultOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorElevationOverlayEmphasizedDark: ColorSemanticToken { get }

    var colorElevationOverlayEmphasizedOnBgSecondaryDark: ColorSemanticToken { get }

    var colorElevationOverlayEmphasizedOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorElevationModalDark: ColorSemanticToken { get }

    // MARK: Semantic token - Colors - Decorative

    var colorDecorativeBrandPrimaryDark: ColorSemanticToken { get }

    var colorDecorativeBrandSecondaryDark: ColorSemanticToken { get }

    var colorDecorativeBrandTertiaryDark: ColorSemanticToken { get }

    var colorDecorativeNeutralMutedDark: ColorSemanticToken { get }

    var colorDecorativeNeutralDefaultDark: ColorSemanticToken { get }

    var colorDecorativeNeutralEmphasizedDark: ColorSemanticToken { get }

    var colorDecorativeAccent1MutedDark: ColorSemanticToken { get }

    var colorDecorativeAccent1DefaultDark: ColorSemanticToken { get }

    var colorDecorativeAccent1EmphasizedDark: ColorSemanticToken { get }

    var colorDecorativeAccent2MutedDark: ColorSemanticToken { get }

    var colorDecorativeAccent2DefaultDark: ColorSemanticToken { get }

    var colorDecorativeAccent2EmphasizedDark: ColorSemanticToken { get }

    var colorDecorativeAccent3MutedDark: ColorSemanticToken { get }

    var colorDecorativeAccent3DefaultDark: ColorSemanticToken { get }

    var colorDecorativeAccent3EmphasizedDark: ColorSemanticToken { get }

    var colorDecorativeAccent4MutedDark: ColorSemanticToken { get }

    var colorDecorativeAccent4DefaultDark: ColorSemanticToken { get }

    var colorDecorativeAccent4EmphasizedDark: ColorSemanticToken { get }

    var colorDecorativeAccent5MutedDark: ColorSemanticToken { get }

    var colorDecorativeAccent5DefaultDark: ColorSemanticToken { get }

    var colorDecorativeAccent5EmphasizedDark: ColorSemanticToken { get }

    var colorDecorativeSkinTint100Dark: ColorSemanticToken { get }

    var colorDecorativeSkinTint200Dark: ColorSemanticToken { get }

    var colorDecorativeSkinTint300Dark: ColorSemanticToken { get }

    var colorDecorativeSkinTint400Dark: ColorSemanticToken { get }

    var colorDecorativeSkinTint500Dark: ColorSemanticToken { get }

    var colorDecorativeSkinTint600Dark: ColorSemanticToken { get }

    var colorDecorativeSkinTint700Dark: ColorSemanticToken { get }

    var colorDecorativeSkinTint800Dark: ColorSemanticToken { get }

    var colorDecorativeSkinTint900Dark: ColorSemanticToken { get }

    // MARK: Semantic token - Colors - Chart

    var colorChartCategoricalNeutralDark: ColorSemanticToken { get }

    var colorChartCategoricalBrandDark: ColorSemanticToken { get }

    var colorChartCategoricalPositiveDark: ColorSemanticToken { get }

    var colorChartCategoricalNegativeDark: ColorSemanticToken { get }

    var colorChartCategoricalTier1Dark: ColorSemanticToken { get }

    var colorChartCategoricalTier2Dark: ColorSemanticToken { get }

    var colorChartCategoricalTier3Dark: ColorSemanticToken { get }

    var colorChartCategoricalTier4Dark: ColorSemanticToken { get }

    var colorChartCategoricalTier5Dark: ColorSemanticToken { get }

    var colorChartCategoricalTier6Dark: ColorSemanticToken { get }

    var colorChartCategoricalTier7Dark: ColorSemanticToken { get }

    var colorChartCategoricalTier8Dark: ColorSemanticToken { get }

    var colorChartCategoricalTier9Dark: ColorSemanticToken { get }

    var colorChartCategoricalTier10Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent1Tint100Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent1Tint200Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent1Tint300Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent1Tint400Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent1Tint500Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent1Tint600Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent1Tint700Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent1Tint800Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent1Tint900Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent2Tint100Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent2Tint200Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent2Tint300Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent2Tint400Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent2Tint500Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent2Tint600Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent2Tint700Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent2Tint800Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent2Tint900Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent3Tint100Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent3Tint200Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent3Tint300Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent3Tint400Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent3Tint500Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent3Tint600Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent3Tint700Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent3Tint800Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent3Tint900Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent4Tint100Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent4Tint200Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent4Tint300Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent4Tint400Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent4Tint500Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent4Tint600Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent4Tint700Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent4Tint800Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent4Tint900Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent5Tint100Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent5Tint200Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent5Tint300Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent5Tint400Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent5Tint500Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent5Tint600Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent5Tint700Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent5Tint800Dark: ColorSemanticToken { get }

    var colorChartSequentialAccent5Tint900Dark: ColorSemanticToken { get }

    // MARK: - Semantic token - Colors - Gradient

    var colorGradientSkeletonMiddleDark: ColorSemanticToken { get }

    var colorGradientSkeletonMiddleOnBgEmphasizedDark: ColorSemanticToken { get }

    var colorGradientSkeletonStartEndDark: ColorSemanticToken { get }

    var colorGradientSkeletonStartEndOnBgEmphasizedDark: ColorSemanticToken { get }
}

// swiftlint:enable missing_docs
// swiftlint:enable identifier_name
