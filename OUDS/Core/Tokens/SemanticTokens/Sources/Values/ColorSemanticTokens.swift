//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
// 
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
// 
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System 
//

// ଘ( ･ω･)_/ﾟ･:*:･｡☆
// [File to generate with the tokenator]

/// This is a group of semantic tokens for **colors**.
/// It defines all `ColorSemanticToken` and `ColorAliasSemanticToken` a theme must have.
///
/// In the future this file should be generated by a parser converting Figma JSON to Swift code.
public protocol ColorSemanticTokens {

    // MARK: Semantic token - Colors - Alias - Primary

    var sysColorBrandPrimaryLowest: ColorAliasSemanticToken? { get }
    var sysColorBrandPrimaryLower: ColorAliasSemanticToken? { get }
    var sysColorBrandPrimaryLow: ColorAliasSemanticToken? { get }
    var sysColorBrandPrimaryDefault: ColorAliasSemanticToken? { get }
    var sysColorBrandPrimaryHigh: ColorAliasSemanticToken? { get }
    var sysColorBrandPrimaryHigher: ColorAliasSemanticToken? { get }
    var sysColorBrandPrimaryHighest: ColorAliasSemanticToken? { get }

    // MARK: Semantic token - Colors - Alias - Secondary

    var sysColorBrandSecondaryLowest: ColorAliasSemanticToken? { get }
    var sysColorBrandSecondaryLower: ColorAliasSemanticToken? { get }
    var sysColorBrandSecondaryLow: ColorAliasSemanticToken? { get }
    var sysColorBrandSecondaryDefault: ColorAliasSemanticToken? { get }
    var sysColorBrandSecondaryHigh: ColorAliasSemanticToken? { get }
    var sysColorBrandSecondaryHigher: ColorAliasSemanticToken? { get }
    var sysColorBrandSecondaryHighest: ColorAliasSemanticToken? { get }

    // MARK: Semantic token - Colors - Alias - Tertiary

    var sysColorBrandTertiaryLowest: ColorAliasSemanticToken? { get }
    var sysColorBrandTertiaryLower: ColorAliasSemanticToken? { get }
    var sysColorBrandTertiaryLow: ColorAliasSemanticToken? { get }
    var sysColorBrandTertiaryDefault: ColorAliasSemanticToken? { get }
    var sysColorBrandTertiaryHigh: ColorAliasSemanticToken? { get }
    var sysColorBrandTertiaryHigher: ColorAliasSemanticToken? { get }
    var sysColorBrandTertiaryHighest: ColorAliasSemanticToken? { get }

    // MARK: Semantic token - Colors - Alias - Neutral - Muted

    var sysColorBrandNeutralMutedWhite: ColorAliasSemanticToken? { get }
    var sysColorBrandNeutralMutedLowest: ColorAliasSemanticToken? { get }
    var sysColorBrandNeutralMutedLower: ColorAliasSemanticToken? { get }
    var sysColorBrandNeutralMutedLow: ColorAliasSemanticToken? { get }
    var sysColorBrandNeutralMutedMedium: ColorAliasSemanticToken? { get }
    var sysColorBrandNeutralMutedHigh: ColorAliasSemanticToken? { get }
    var sysColorBrandNeutralMutedHigher: ColorAliasSemanticToken? { get }
    var sysColorBrandNeutralMutedHighest: ColorAliasSemanticToken? { get }

    // MARK: Semantic token - Colors - Alias - Neutral - Emphasized

    var sysColorBrandNeutralEmphasizedLowest: ColorAliasSemanticToken? { get }
    var sysColorBrandNeutralEmphasizedLower: ColorAliasSemanticToken? { get }
    var sysColorBrandNeutralEmphasizedLow: ColorAliasSemanticToken? { get }
    var sysColorBrandNeutralEmphasizedMedium: ColorAliasSemanticToken? { get }
    var sysColorBrandNeutralEmphasizedHigh: ColorAliasSemanticToken? { get }
    var sysColorBrandNeutralEmphasizedHigher: ColorAliasSemanticToken? { get }
    var sysColorBrandNeutralEmphasizedHighest: ColorAliasSemanticToken? { get }
    var sysColorBrandNeutralEmphasizedBlack: ColorAliasSemanticToken? { get }

    // MARK: Semantic token - Colors - Alias - Positive

    var sysColorBrandPositiveLowest: ColorAliasSemanticToken? { get }
    var sysColorBrandPositiveLower: ColorAliasSemanticToken? { get }
    var sysColorBrandPositiveLow: ColorAliasSemanticToken? { get }
    var sysColorBrandPositiveDefault: ColorAliasSemanticToken? { get }
    var sysColorBrandPositiveHigh: ColorAliasSemanticToken? { get }
    var sysColorBrandPositiveHigher: ColorAliasSemanticToken? { get }
    var sysColorBrandPositiveHighest: ColorAliasSemanticToken? { get }

    // MARK: Semantic token - Colors - Alias - Information

    var sysColorBrandInformationLowest: ColorAliasSemanticToken? { get }
    var sysColorBrandInformationLower: ColorAliasSemanticToken? { get }
    var sysColorBrandInformationLow: ColorAliasSemanticToken? { get }
    var sysColorBrandInformationDefault: ColorAliasSemanticToken? { get }
    var sysColorBrandInformationHigh: ColorAliasSemanticToken? { get }
    var sysColorBrandInformationHigher: ColorAliasSemanticToken? { get }
    var sysColorBrandInformationHighest: ColorAliasSemanticToken? { get }

    // MARK: Semantic token - Colors - Alias - Warning

    var sysColorBrandWarningLowest: ColorAliasSemanticToken? { get }
    var sysColorBrandWarningLower: ColorAliasSemanticToken? { get }
    var sysColorBrandWarningLow: ColorAliasSemanticToken? { get }
    var sysColorBrandWarningDefault: ColorAliasSemanticToken? { get }
    var sysColorBrandWarningHigh: ColorAliasSemanticToken? { get }
    var sysColorBrandWarningHigher: ColorAliasSemanticToken? { get }
    var sysColorBrandWarningHighest: ColorAliasSemanticToken? { get }

    // MARK: Semantic token - Colors - Alias - Negative

    var sysColorBrandNegativeLowest: ColorAliasSemanticToken? { get }
    var sysColorBrandNegativeLower: ColorAliasSemanticToken? { get }
    var sysColorBrandNegativeLow: ColorAliasSemanticToken? { get }
    var sysColorBrandNegativeDefault: ColorAliasSemanticToken? { get }
    var sysColorBrandNegativeHigh: ColorAliasSemanticToken? { get }
    var sysColorBrandNegativeHigher: ColorAliasSemanticToken? { get }
    var sysColorBrandNegativeHighest: ColorAliasSemanticToken? { get }

    // MARK: Semantic token - Colors - Alias - Attractive

    var sysColorBrandAttractiveLowest: ColorAliasSemanticToken? { get }
    var sysColorBrandAttractiveLower: ColorAliasSemanticToken? { get }
    var sysColorBrandAttractiveLow: ColorAliasSemanticToken? { get }
    var sysColorBrandAttractiveMedium: ColorAliasSemanticToken? { get }
    var sysColorBrandAttractiveHigh: ColorAliasSemanticToken? { get }
    var sysColorBrandAttractiveHigher: ColorAliasSemanticToken? { get }
    var sysColorBrandAttractiveHighest: ColorAliasSemanticToken? { get }

    // MARK: Semantic token - Colors - Background - Default - Primary

    var colorBackgroundDefaultPrimary: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Background - Default - Secondary

    var colorBackgroundDefaultSecondary: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Background - Default - Tertiary

    var colorBackgroundDefaultTertiary: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Background - Emphasized - Primary

    var colorBackgroundEmphasizedPrimary: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Background - Brand - Primary

    var colorBackgroundBrandPrimary: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Background - Brand - Secondary

    var colorBackgroundBrandSecondary: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Background - Brand - Tertiary

    var colorBackgroundBrandTertiary: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Background - Status - Neutral
    
    var colorBackgroundStatusNeutral: ColorSemanticToken? { get }
    
    // MARK: Semantic token - Colors - Background - Status - Neutral - Emphasized
    
    var colorBackgroundStatusNeutralOnBackgroundEmphasized: ColorSemanticToken? { get }
    
    // MARK: Semantic token - Colors - Background - Status - Attractive - Muted

    var colorBackgroundStatusAttractiveMuted: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Background - Status - Attractive - Emphasized

    var colorBackgroundStatusAttractiveEmphasized: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Background - Status - Warning - Muted

    var colorBackgroundStatusWarningMuted: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Background - Status - Warning - Muted - On Background - Emphasized

    var colorBackgroundStatusWarningMutedOnBackgroundEmphasized: ColorSemanticToken? { get }
    
    // MARK: Semantic token - Colors - Background - Status - Warning - Emphasized

    var colorBackgroundStatusWarningEmphasized: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Background - Status - Negative - Muted

    var colorBackgroundStatusNegativeMuted: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Background - Status - Negative - Muted - On background - Emphasized

    var colorBackgroundStatusNegativeMutedOnBackgroundEmphasized: ColorSemanticToken? { get }
    
    // MARK: Semantic token - Colors - Background - Status - Negative - Emphasized

    var colorBackgroundStatusNegativeEmphasized: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Background - Status - Positive - Muted

    var colorBackgroundStatusPositiveMuted: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Background - Status - Positive - Muted

    var colorBackgroundStatusPositiveMuted: ColorSemanticToken? { get }
    
    // MARK: Semantic token - Colors - Background - Status - Positive - Emphasized

    var colorBackgroundStatusPositiveEmphasized: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Background - Status - Information - Muted

    var colorBackgroundStatusInformationMuted: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Background - Status - Information - Emphasized

    var colorBackgroundStatusInformationEmphasized: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Content - Default

    var colorContentDefault: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Content - Default - On background emphasized

    var colorContentDefaultOnBackgroundEmphasized: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Content - Muted

    var colorContentMuted: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Content - Muted - On background emphasized

    var colorContentMutedOnBackgroundEmphasized: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Content - Brand - Primary

    var colorContentBrandPrimary: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Content - Brand - Primary - On background emphasized

    var colorContentBrandPrimaryOnBackgroundEmphasized: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Content - Brand - Secondary

    var colorContentBrandSecondary: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Content - Brand - Tertiary

    var colorContentBrandTertiary: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Content - Status - Attractive

    var colorContentStatusAttractive: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Content - Status - Negative

    var colorContentStatusNegative: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Content - Status - Positive

    var colorContentStatusPositive: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Content - Status - Information

    var colorContentStatusInformation: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Border - Default

    var colorBorderDefault: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Border - Default - On background emphasized

    var colorBorderDefaultOnBackgroundEmphasized: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Border - Emphasized

    var colorBorderEmphasized: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Border - Emphasized - On background emphasized

    var colorBorderEmphasizedOnBackgroundEmphasized: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Border - Brand - Primary

    var colorBorderBrandPrimary: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Border - Brand - Primary - On background emphasized

    var colorBorderBrandPrimaryOnBackgroundEmphasized: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Border - Brand - Secondary

    var colorBorderBrandSecondary: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Border - Brand - Tertiary

    var colorBorderBrandTertiary: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Border - Status - Attractive

    var colorBorderBrandStatusAttractive: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Border - Status - Warning

    var colorBorderBrandStatusWarning: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Border - Status - Negative

    var colorBorderBrandStatusNegative: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Border - Status - Positive

    var colorBorderBrandStatusPositive: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Border - Status - Information

    var colorBorderBrandStatusInformation: ColorSemanticToken? { get }

    
    
    
    

    // MARK: Semantic token - Colors - On background - Secondary

    var colorOnBackgroundSecondary: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - On background - Tertiary

    var colorOnBackgroundTertiary: ColorSemanticToken? { get }

    
    
    
    
    
    
    // MARK: Semantic token - Colors - On background - Status - Attrative - Muted

    var colorOnBackgroundStatusAttractiveMuted: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - On background - Status - Attrative - Emphasized

    var colorOnBackgroundStatusAttractiveEmphasized: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - On background - Status - Warning - Muted

    var colorOnBackgroundStatusWarningMuted: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - On background - Status - Warning - Emphasized

    var colorOnBackgroundStatusWarningEmphasized: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - On background - Status - Negative - Muted

    var colorOnBackgroundStatusNegativeMuted: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - On background - Status - Negative - Emphasized

    var colorOnBackgroundStatusNegativeEmphasized: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - On background - Status - Positive - Muted

    var colorOnBackgroundStatusPositiveMuted: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - On background - Status - Positive - Emphasized

    var colorOnBackgroundStatusPositiveEmphasized: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - On background - Status - Information - Muted

    var colorOnBackgroundStatusInformationMuted: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - On background - Status - Information - Emphasized

    var colorOnBackgroundStatusInformationEmphasized: ColorSemanticToken? { get }
}
