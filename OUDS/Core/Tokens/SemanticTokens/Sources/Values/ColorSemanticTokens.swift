//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
// 
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
// 
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System 
//

// ଘ( ･ω･)_/ﾟ･:*:･｡☆
// [File to generate with the tokenator]
// WARNING: Not synchronized anymore with the Figjam

/// This is a group of semantic tokens for **colors**.
/// It defines all `ColorSemanticToken` and `ColorAliasSemanticToken` a theme must have.
/// Because `ColorSemanticToken` can be based on `ColorAliasSemanticToken` which are optional, the instanciation of such values can result to `nil`, 
/// so semantic tokens are optional today.
///
/// In the future this file should be generated by a parser converting Figma JSON to Swift code.
public protocol ColorSemanticTokens {

    // MARK: Semantic token - Colors - Alias - Primary

    var sysColorBrandPrimaryLowest: ColorAliasSemanticToken? { get }
    var sysColorBrandPrimaryLower: ColorAliasSemanticToken? { get }
    var sysColorBrandPrimaryLow: ColorAliasSemanticToken? { get }
    var sysColorBrandPrimaryDefault: ColorAliasSemanticToken? { get }
    var sysColorBrandPrimaryHigh: ColorAliasSemanticToken? { get }
    var sysColorBrandPrimaryHigher: ColorAliasSemanticToken? { get }
    var sysColorBrandPrimaryHighest: ColorAliasSemanticToken? { get }

    // MARK: Semantic token - Colors - Alias - Secondary

    var sysColorBrandSecondaryLowest: ColorAliasSemanticToken? { get }
    var sysColorBrandSecondaryLower: ColorAliasSemanticToken? { get }
    var sysColorBrandSecondaryLow: ColorAliasSemanticToken? { get }
    var sysColorBrandSecondaryDefault: ColorAliasSemanticToken? { get }
    var sysColorBrandSecondaryHigh: ColorAliasSemanticToken? { get }
    var sysColorBrandSecondaryHigher: ColorAliasSemanticToken? { get }
    var sysColorBrandSecondaryHighest: ColorAliasSemanticToken? { get }

    // MARK: Semantic token - Colors - Alias - Tertiary

    var sysColorBrandTertiaryLowest: ColorAliasSemanticToken? { get }
    var sysColorBrandTertiaryLower: ColorAliasSemanticToken? { get }
    var sysColorBrandTertiaryLow: ColorAliasSemanticToken? { get }
    var sysColorBrandTertiaryDefault: ColorAliasSemanticToken? { get }
    var sysColorBrandTertiaryHigh: ColorAliasSemanticToken? { get }
    var sysColorBrandTertiaryHigher: ColorAliasSemanticToken? { get }
    var sysColorBrandTertiaryHighest: ColorAliasSemanticToken? { get }

    // MARK: Semantic token - Colors - Alias - Neutral - Muted

    var sysColorBrandNeutralMutedWhite: ColorAliasSemanticToken? { get }
    var sysColorBrandNeutralMutedLowest: ColorAliasSemanticToken? { get }
    var sysColorBrandNeutralMutedLower: ColorAliasSemanticToken? { get }
    var sysColorBrandNeutralMutedLow: ColorAliasSemanticToken? { get }
    var sysColorBrandNeutralMutedMedium: ColorAliasSemanticToken? { get }
    var sysColorBrandNeutralMutedHigh: ColorAliasSemanticToken? { get }
    var sysColorBrandNeutralMutedHigher: ColorAliasSemanticToken? { get }
    var sysColorBrandNeutralMutedHighest: ColorAliasSemanticToken? { get }

    // MARK: Semantic token - Colors - Alias - Neutral - Emphasized

    var sysColorBrandNeutralEmphasizedLowest: ColorAliasSemanticToken? { get }
    var sysColorBrandNeutralEmphasizedLower: ColorAliasSemanticToken? { get }
    var sysColorBrandNeutralEmphasizedLow: ColorAliasSemanticToken? { get }
    var sysColorBrandNeutralEmphasizedMedium: ColorAliasSemanticToken? { get }
    var sysColorBrandNeutralEmphasizedHigh: ColorAliasSemanticToken? { get }
    var sysColorBrandNeutralEmphasizedHigher: ColorAliasSemanticToken? { get }
    var sysColorBrandNeutralEmphasizedHighest: ColorAliasSemanticToken? { get }
    var sysColorBrandNeutralEmphasizedBlack: ColorAliasSemanticToken? { get }

    // MARK: Semantic token - Colors - Alias - Positive

    var sysColorBrandPositiveLowest: ColorAliasSemanticToken? { get }
    var sysColorBrandPositiveLower: ColorAliasSemanticToken? { get }
    var sysColorBrandPositiveLow: ColorAliasSemanticToken? { get }
    var sysColorBrandPositiveDefault: ColorAliasSemanticToken? { get }
    var sysColorBrandPositiveHigh: ColorAliasSemanticToken? { get }
    var sysColorBrandPositiveHigher: ColorAliasSemanticToken? { get }
    var sysColorBrandPositiveHighest: ColorAliasSemanticToken? { get }

    // MARK: Semantic token - Colors - Alias - Information

    var sysColorBrandInformationLowest: ColorAliasSemanticToken? { get }
    var sysColorBrandInformationLower: ColorAliasSemanticToken? { get }
    var sysColorBrandInformationLow: ColorAliasSemanticToken? { get }
    var sysColorBrandInformationDefault: ColorAliasSemanticToken? { get }
    var sysColorBrandInformationHigh: ColorAliasSemanticToken? { get }
    var sysColorBrandInformationHigher: ColorAliasSemanticToken? { get }
    var sysColorBrandInformationHighest: ColorAliasSemanticToken? { get }

    // MARK: Semantic token - Colors - Alias - Warning

    var sysColorBrandWarningLowest: ColorAliasSemanticToken? { get }
    var sysColorBrandWarningLower: ColorAliasSemanticToken? { get }
    var sysColorBrandWarningLow: ColorAliasSemanticToken? { get }
    var sysColorBrandWarningDefault: ColorAliasSemanticToken? { get }
    var sysColorBrandWarningHigh: ColorAliasSemanticToken? { get }
    var sysColorBrandWarningHigher: ColorAliasSemanticToken? { get }
    var sysColorBrandWarningHighest: ColorAliasSemanticToken? { get }

    // MARK: Semantic token - Colors - Alias - Negative

    var sysColorBrandNegativeLowest: ColorAliasSemanticToken? { get }
    var sysColorBrandNegativeLower: ColorAliasSemanticToken? { get }
    var sysColorBrandNegativeLow: ColorAliasSemanticToken? { get }
    var sysColorBrandNegativeDefault: ColorAliasSemanticToken? { get }
    var sysColorBrandNegativeHigh: ColorAliasSemanticToken? { get }
    var sysColorBrandNegativeHigher: ColorAliasSemanticToken? { get }
    var sysColorBrandNegativeHighest: ColorAliasSemanticToken? { get }

    // MARK: Semantic token - Colors - Alias - Attractive

    var sysColorBrandAttractiveLowest: ColorAliasSemanticToken? { get }
    var sysColorBrandAttractiveLower: ColorAliasSemanticToken? { get }
    var sysColorBrandAttractiveLow: ColorAliasSemanticToken? { get }
    var sysColorBrandAttractiveMedium: ColorAliasSemanticToken? { get }
    var sysColorBrandAttractiveHigh: ColorAliasSemanticToken? { get }
    var sysColorBrandAttractiveHigher: ColorAliasSemanticToken? { get }
    var sysColorBrandAttractiveHighest: ColorAliasSemanticToken? { get }

    // MARK: Semantic token - Colors - Background

    var colorBackgroundDefaultPrimary: ColorSemanticToken? { get }

    var colorBackgroundDefaultSecondary: ColorSemanticToken? { get }

    var colorBackgroundDefaultTertiary: ColorSemanticToken? { get }

    var colorBackgroundEmphasizedPrimary: ColorSemanticToken? { get }

    var colorBackgroundBrandPrimary: ColorSemanticToken? { get }

    var colorBackgroundBrandSecondary: ColorSemanticToken? { get }

    var colorBackgroundBrandTertiary: ColorSemanticToken? { get }

    var colorBackgroundStatusNeutral: ColorSemanticToken? { get }

    var colorBackgroundStatusNeutralOnBackgroundEmphasized: ColorSemanticToken? { get }

    var colorBackgroundStatusAttractiveMuted: ColorSemanticToken? { get }

    var colorBackgroundStatusAttractiveEmphasized: ColorSemanticToken? { get }

    var colorBackgroundStatusWarningMuted: ColorSemanticToken? { get }

    var colorBackgroundStatusWarningMutedOnBackgroundEmphasized: ColorSemanticToken? { get }

    var colorBackgroundStatusWarningEmphasized: ColorSemanticToken? { get }

    var colorBackgroundStatusNegativeMuted: ColorSemanticToken? { get }

    var colorBackgroundStatusNegativeMutedOnBackgroundEmphasized: ColorSemanticToken? { get }

    var colorBackgroundStatusNegativeEmphasized: ColorSemanticToken? { get }

    var colorBackgroundStatusPositiveMuted: ColorSemanticToken? { get }

    var colorBackgroundStatusPositiveMutedOnBackgroundEmphasized: ColorSemanticToken? { get }

    var colorBackgroundStatusPositiveEmphasized: ColorSemanticToken? { get }

    var colorBackgroundStatusInformationMuted: ColorSemanticToken? { get }

    var colorBackgroundStatusInformationMutedOnBackgroundEmphasized: ColorSemanticToken? { get }

    var colorBackgroundStatusInformationEmphasized: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Background - Action

    var colorBackgroundActionEnabled: ColorSemanticToken? { get }

    var colorBackgroundActionEnabledOnBackgroundEmphasized: ColorSemanticToken? { get }

    var colorBackgroundActionEnabledOnBackgroundStatusExcNegative: ColorSemanticToken? { get }

    var colorBackgroundActionEnabledOnBackgroundStatusNegative: ColorSemanticToken? { get }

    var colorBackgroundActionPressed: ColorSemanticToken? { get }

    var colorBackgroundActionPressedOnBackgroundEmphasized: ColorSemanticToken? { get }

    var colorBackgroundActionPressedOnBackgroundStatusExcNegative: ColorSemanticToken? { get }

    var colorBackgroundActionPressedOnBackgroundStautsNegative: ColorSemanticToken? { get }

    var colorBackgroundActionDisabled: ColorSemanticToken? { get }

    var colorBackgroundActionDisabledOnBackgroundEmphasized: ColorSemanticToken? { get }

    var colorBackgroundActionDisabledOnBackgroundStatusExcNegative: ColorSemanticToken? { get }

    var colorBackgroundActionDisabledOnBackgroundStatusNegative: ColorSemanticToken? { get }

    var colorBackgroundActionFocus: ColorSemanticToken? { get }

    var colorBackgroundActionFocusOnBackgroundEmphasized: ColorSemanticToken? { get }

    var colorBackgroundActionFocusOnBackgroundStatusExcNegative: ColorSemanticToken? { get }

    var colorBackgroundActionFocusOnBackgroundStatusNegative: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Background - Always

    var colorBackgroundAlwaysBlack: ColorSemanticToken? { get }

    var colorBackgroundAlwaysWhite: ColorSemanticToken? { get }

    var colorBackgroundAlwaysAttractive: ColorSemanticToken? { get }

    var colorBackgroundAlwaysWarning: ColorSemanticToken? { get }

    var colorBackgroundAlwaysNegative: ColorSemanticToken? { get }

    var colorBackgroundAlwaysPositive: ColorSemanticToken? { get }

    var colorBackgroundAlwaysInformation: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Content

    var colorContentDefault: ColorSemanticToken? { get }

    var colorContentDefaultOnBackgroundEmphasized: ColorSemanticToken? { get }

    var colorContentDefaultOnBackgroundBrandPrimary: ColorSemanticToken? { get }

    var colorContentMuted: ColorSemanticToken? { get }

    var colorContentMutedOnBackgroundEmphasized: ColorSemanticToken? { get }

    var colorContentDisabled: ColorSemanticToken? { get }

    var colorContentDisabledOnBackgroundEmphasized: ColorSemanticToken? { get }

    var colorContentBrandPrimary: ColorSemanticToken? { get }

    var colorContentBrandPrimaryOnBackgroundEmphasized: ColorSemanticToken? { get }

    var colorContentBrandSecondary: ColorSemanticToken? { get }

    var colorContentBrandTertiary: ColorSemanticToken? { get }

    var colorContentStatusAttractive: ColorSemanticToken? { get }

    var colorContentStatusNegative: ColorSemanticToken? { get }

    var colorContentStatusPositive: ColorSemanticToken? { get }

    var colorContentStatusInformation: ColorSemanticToken? { get }

    var colorContentActionEnabled: ColorSemanticToken? { get }

    var colorContentActionEnabledOnBackgroundEmphasized: ColorSemanticToken? { get }

    var colorContentActionEnabledOnBackgroundStatusExcNegative: ColorSemanticToken? { get }

    var colorContentActionEnabledOnBackgroundStatusNegative: ColorSemanticToken? { get }

    var colorContentActionHover: ColorSemanticToken? { get }

    var colorContentActionHoverOnBackgroundEmphasized: ColorSemanticToken? { get }

    var colorContentActionHoverOnBackgroundStatusExcNegative: ColorSemanticToken? { get }

    var colorContentActionHoverOnBackgroundStatusNegative: ColorSemanticToken? { get }

    // MARK: Semantic token - Colors - Border

    var colorBorderDefault: ColorSemanticToken? { get }

    var colorBorderDefaultOnBackgroundEmphasized: ColorSemanticToken? { get }

    var colorBorderEmphasized: ColorSemanticToken? { get }

    var colorBorderEmphasizedOnBackgroundEmphasized: ColorSemanticToken? { get }

    var colorBorderBrandPrimary: ColorSemanticToken? { get }

    var colorBorderBrandPrimaryOnBackgroundEmphasized: ColorSemanticToken? { get }

    var colorBorderBrandSecondary: ColorSemanticToken? { get }

    var colorBorderBrandTertiary: ColorSemanticToken? { get }

    var colorBorderBrandStatusAttractive: ColorSemanticToken? { get }

    var colorBorderBrandStatusWarning: ColorSemanticToken? { get }

    var colorBorderBrandStatusNegative: ColorSemanticToken? { get }

    var colorBorderBrandStatusPositive: ColorSemanticToken? { get }

    var colorBorderBrandStatusInformation: ColorSemanticToken? { get }

    /*
         TODO: #124
         WARNING: Some color semantic tokens are missing because of Figma synchronization issues
         - color background
         - color braground awlways
         - color content
         - color border
         - color on background
         - color elevation
         - color decorative
         - color chart
     */
}
