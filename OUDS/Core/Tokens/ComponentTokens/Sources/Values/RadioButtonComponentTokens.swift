//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System
//

import OUDSTokensSemantic

// [File not generated by the tokenator]
// WARNING: Not synchronized anymore with the Figjam / Figma by developers team
// Create an issue for update https://github.com/Orange-OpenSource/ouds-ios/issues/new?template=token_update.yml

// swiftlint:disable missing_docs

/// Declares all component tokens for radio button components like `OUDSRadioButton` and `OUDSRadioButtonItem`.
/// Use for tokens providers like `OrangeThemeRadioButtonComponentTokensProvider`.
///
/// - Since: 0.12.0
public protocol RadioButtonComponentTokens {

    // MARK: - Sizes

    var radioButtonSizeMaxHeight: SizeSemanticToken { get }
    var radioButtonSizeMinHeight: SizeSemanticToken { get }
    var radioButtonSizeMinWidth: SizeSemanticToken { get }
    var radioButtonSizeIndicator: SizeSemanticToken { get }

    // MARK: - Borders

    var radioButtonBorderRadius: BorderRadiusSemanticToken { get }
    var radioButtonBorderWidthSelected: BorderWidthSemanticToken { get }
    var radioButtonBorderWidthSelectedFocus: BorderWidthSemanticToken { get }
    var radioButtonBorderWidthSelectedHover: BorderWidthSemanticToken { get }
    var radioButtonBorderWidthSelectedPressed: BorderWidthSemanticToken { get }
    var radioButtonBorderWidthUnselected: BorderWidthSemanticToken { get }
    var radioButtonBorderWidthUnselectedFocus: BorderWidthSemanticToken { get }
    var radioButtonBorderWidthUnselectedHover: BorderWidthSemanticToken { get }
    var radioButtonBorderWidthUnselectedPressed: BorderWidthSemanticToken { get }
}

// swiftlint:enable missing_docs
