//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System
//

import OUDSTokensRaw
import OUDSTokensSemantic

// [File not generated by the tokenator]
// WARNING: Not synchronized anymore with the Figjam / Figma by developers team
// Create an issue for update https://github.com/Orange-OpenSource/ouds-ios/issues/new?template=token_update.yml

// swiftlint:disable missing_docs

/// Declares all component tokens for radio button and checkboxes components like `OUDSRadioButton` and `OUDSCheckbox`.
/// Use for tokens providers like `OrangeThemeCheckboxComponentTokensProvider`.
///
/// - Since: 0.10.0
public protocol CheckboxComponentTokens {

    // MARK: - Sizes

    var checkboxSizeMinWidth: SizeSemanticToken { get }
    var checkboxSizeMaxHeight: SizeSemanticToken { get }
    var checkboxSizeMinHeight: SizeSemanticToken { get }
    var checkboxSizeIndicatorInnerIcon: SizeSemanticToken { get }
    var checkboxSizeIndicator: SizeSemanticToken { get }

    // MARK: - Borders

    var checkboxBorderRadius: BorderRadiusSemanticToken { get }
    var checkboxBorderWidthSelected: BorderWidthSemanticToken { get }
    var checkboxBorderWidthSelectedHover: BorderWidthSemanticToken { get }
    var checkboxBorderWidthSelectedPressed: BorderWidthSemanticToken { get }
    var checkboxBorderWidthSelectedFocus: BorderWidthSemanticToken { get }
    var checkboxBorderWidthUnselected: BorderWidthSemanticToken { get }
    var checkboxBorderWidthUnselectedHover: BorderWidthSemanticToken { get }
    var checkboxBorderWidthUnselectedPressed: BorderWidthSemanticToken { get }
    var checkboxBorderWidthUnselectedFocus: BorderWidthSemanticToken { get }

    // MARK: - Opacities

    var checkboxOpacityBgSelected: OpacitySemanticToken { get }
    var checkboxOpacityBgUnselected: OpacitySemanticToken { get }
    var checkboxOpacityBgSelectedHover: OpacitySemanticToken { get }
    var checkboxOpacityBgUnselectedHover: OpacitySemanticToken { get }
    var checkboxOpacityBgSelectedPressed: OpacitySemanticToken { get }
    var checkboxOpacityBgUnselectedPressed: OpacitySemanticToken { get }
    var checkboxOpacityBgSelectedFocus: OpacitySemanticToken { get }
    var checkboxOpacityBgUnselectedFocus: OpacitySemanticToken { get }

    // MARK: - Colors

    var checkboxColorContentSelected: MultipleColorSemanticTokens { get }
    var checkboxColorContentEnabled: MultipleColorSemanticTokens { get }
    var checkboxColorContentHover: MultipleColorSemanticTokens { get }
    var checkboxColorContentPressed: MultipleColorSemanticTokens { get }
    var checkboxColorContentDisabled: MultipleColorSemanticTokens { get }
    var checkboxColorContentFocus: MultipleColorSemanticTokens { get }
    var checkboxColorContentErrorEnabled: MultipleColorSemanticTokens { get }
    var checkboxColorContentErrorHover: MultipleColorSemanticTokens { get }
    var checkboxColorContentErrorPressed: MultipleColorSemanticTokens { get }
    var checkboxColorContentErrorFocus: MultipleColorSemanticTokens { get }
}

// swiftlint:enable missing_docs
