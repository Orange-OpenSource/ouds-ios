//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System
//

import OUDSTokensSemantic

// [File not generated by the tokenator]
// WARNING: Not synchronized anymore with the Figjam / Figma by developers team
// Create an issue for update https://github.com/Orange-OpenSource/ouds-ios/issues/new?template=token_update.yml

// swiftlint:disable missing_docs

/// Declares all component tokens for switch components like `OUDSSwitch`
/// Use for tokens providers like `OrangeThemeSwitchComponentTokensProvider`.
///
/// - Since: 0.10.0
public protocol SwitchComponentTokens {

    // MARK: - Sizes

    var switchSizeHeightCursorSelected: SizeSemanticToken { get }
    var switchSizeHeightCursorUnselected: SizeSemanticToken { get }
    var switchSizeHeightTrack: SizeSemanticToken { get }
    var switchSizeMaxHeight: SizeSemanticToken { get }
    var switchSizeMinHeight: SizeSemanticToken { get }
    var switchSizeMinWidth: SizeSemanticToken { get }
    var switchSizeWidthCursorSelected: SizeSemanticToken { get }
    var switchSizeWidthCursorSelectedPressed: SizeSemanticToken { get }
    var switchSizeWidthCursorUnselected: SizeSemanticToken { get }
    var switchSizeWidthCursorUnselectedPressed: SizeSemanticToken  { get }
    var switchSizeWidthTrack: SizeSemanticToken { get }

    // MARK: - Borders

    var switchBorderRadius: BorderRadiusSemanticToken { get }

    // MARK: - Colors

    var switchColorCursor: MultipleColorSemanticTokens { get }
    var switchColorTrackSelected: MultipleColorSemanticTokens { get }
    var switchColorTrackSelectedInteraction: MultipleColorSemanticTokens { get }
    var switchColorTrackUnselected: MultipleColorSemanticTokens { get }
    var switchColorTrackUnselectedInteraction: MultipleColorSemanticTokens { get }
    var switchColorCheck: MultipleColorSemanticTokens { get }

    // MARK: - Spaces

    var switchSpacePaddingInlineUnselected: SpaceSemanticToken { get }
    var switchSpacePaddingInlineSelected: SpaceSemanticToken { get }

    // MARK: - Opacities

    var switchOpacityCheck: OpacitySemanticToken { get }
}

// swiftlint:enable missing_docs
