//
// Software Name: OUDS iOS
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Authors: See CONTRIBUTORS.txt
// Software description: A SwiftUI components library with code examples for Orange Unified Design System
//

import OUDSTokensSemantic

// [File not generated by the tokenator]
// WARNING: Not synchronized anymore with the Figjam / Figma by developers team
// Create an issue for update https://github.com/Orange-OpenSource/ouds-ios/issues/new?template=token_update.yml

// swiftlint:disable missing_docs
// swiftlint:disable identifier_name

/// Declares all component tokens for links components like `OUDSTextInput`
/// Use for tokens providers like `OrangeThemeTextInputComponentTokensProvider`.
///
/// - Since: 0.17.0
public protocol TextInputComponentTokens {

    // MARK: - Sizes

    var textInputSizeLeadingIcon: SizeSemanticToken { get }
    var textInputSizeCreditCardHeight: SizeSemanticToken { get }
    var textInputSizeCountrySelectorChevron: SizeSemanticToken { get }
    var textInputSizeCountrySelectorFlagHeight: SizeSemanticToken { get }
    var textInputSizeVerticalDividerHeight: SizeSemanticToken { get }
    var textInputSizeLabelMaxHeight: SizeSemanticToken { get }
    var textInputSizeMinHeight: SizeSemanticToken { get }
    var textInputSizeMinWidth: SizeSemanticToken { get }
    var textInputSizeMaxWidth: SizeSemanticToken { get }

    // MARK: - Colors

    var textInputColorBorderEnabled: MultipleColorSemanticTokens { get }
    var textInputColorBorderHover: MultipleColorSemanticTokens { get }
    var textInputColorBorderFocus: MultipleColorSemanticTokens { get }
    var textInputColorBorderLoading: MultipleColorSemanticTokens { get }

    // MARK: - Borders

    var textInputBorderRadius: BorderRadiusSemanticToken { get }
    var textInputBorderWidthDefault: BorderWidthSemanticToken { get }
    var textInputBorderWidthFocus: BorderWidthSemanticToken { get }

    // MARK: - Spaces

    var textInputSpacePaddingInlineDefault: SpaceSemanticToken { get }
    var textInputSpacePaddingInlineButton: SpaceSemanticToken { get }
    var textInputSpacePaddingInlineCountrySelectorStart: SpaceSemanticToken { get }
    var textInputSpacePaddingInlineCountrySelectorEnd: SpaceSemanticToken { get }
    var textInputSpacePaddingBlockDefault: SpaceSemanticToken { get }
    var textInputSpacePaddingBlockTopHelperText: SpaceSemanticToken { get }

    var textInputSpaceColumnGapDefault: SpaceSemanticToken { get }
    var textInputSpaceColumnGapInlineText: SpaceSemanticToken { get }
    var textInputSpaceColumnGapTrailingErrorIcon: SpaceSemanticToken { get }
    var textInputSpaceRowGapLabelInput: SpaceSemanticToken { get }
}

// swiftlint:enable missing_docs
// swiftlint:enable identifier_name
